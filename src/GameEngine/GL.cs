
namespace GameEngine;
using System.Runtime.InteropServices;

#nullable disable
delegate IntPtr glAccumDelegate(uint op, float value);
delegate IntPtr glActiveShaderProgramDelegate(uint pipeline, uint program);
delegate IntPtr glActiveTextureDelegate(uint texture);
delegate IntPtr glAlphaFuncDelegate(uint func, float @ref);
delegate byte glAreTexturesResidentDelegate(int n, IntPtr textures, IntPtr residences);
delegate IntPtr glArrayElementDelegate(int i);
delegate IntPtr glAttachShaderDelegate(uint program, uint shader);
delegate IntPtr glBeginDelegate(uint mode);
delegate IntPtr glBeginConditionalRenderDelegate(uint id, uint mode);
delegate IntPtr glBeginQueryDelegate(uint target, uint id);
delegate IntPtr glBeginQueryIndexedDelegate(uint target, uint index, uint id);
delegate IntPtr glBeginTransformFeedbackDelegate(uint primitiveMode);
delegate IntPtr glBindAttribLocationDelegate(uint program, uint index, IntPtr name);
delegate IntPtr glBindBufferDelegate(uint target, uint buffer);
delegate IntPtr glBindBufferBaseDelegate(uint target, uint index, uint buffer);
delegate IntPtr glBindBufferRangeDelegate(uint target, uint index, uint buffer, IntPtr offset, IntPtr size);
delegate IntPtr glBindBuffersBaseDelegate(uint target, uint first, int count, IntPtr buffers);
delegate IntPtr glBindBuffersRangeDelegate(uint target, uint first, int count, IntPtr buffers, IntPtr offsets, IntPtr sizes);
delegate IntPtr glBindFragDataLocationDelegate(uint program, uint color, IntPtr name);
delegate IntPtr glBindFragDataLocationIndexedDelegate(uint program, uint colorNumber, uint index, IntPtr name);
delegate IntPtr glBindFramebufferDelegate(uint target, uint framebuffer);
delegate IntPtr glBindImageTextureDelegate(uint unit, uint texture, int level, byte layered, int layer, uint access, uint format);
delegate IntPtr glBindImageTexturesDelegate(uint first, int count, IntPtr textures);
delegate IntPtr glBindProgramPipelineDelegate(uint pipeline);
delegate IntPtr glBindRenderbufferDelegate(uint target, uint renderbuffer);
delegate IntPtr glBindSamplerDelegate(uint unit, uint sampler);
delegate IntPtr glBindSamplersDelegate(uint first, int count, IntPtr samplers);
delegate IntPtr glBindTextureDelegate(uint target, uint texture);
delegate IntPtr glBindTextureUnitDelegate(uint unit, uint texture);
delegate IntPtr glBindTexturesDelegate(uint first, int count, IntPtr textures);
delegate IntPtr glBindTransformFeedbackDelegate(uint target, uint id);
delegate IntPtr glBindVertexArrayDelegate(uint array);
delegate IntPtr glBindVertexBufferDelegate(uint bindingindex, uint buffer, IntPtr offset, int stride);
delegate IntPtr glBindVertexBuffersDelegate(uint first, int count, IntPtr buffers, IntPtr offsets, IntPtr strides);
delegate IntPtr glBitmapDelegate(int width, int height, float xorig, float yorig, float xmove, float ymove, IntPtr bitmap);
delegate IntPtr glBlendColorDelegate(float red, float green, float blue, float alpha);
delegate IntPtr glBlendEquationDelegate(uint mode);
delegate IntPtr glBlendEquationSeparateDelegate(uint modeRGB, uint modeAlpha);
delegate IntPtr glBlendEquationSeparateiDelegate(uint buf, uint modeRGB, uint modeAlpha);
delegate IntPtr glBlendEquationiDelegate(uint buf, uint mode);
delegate IntPtr glBlendFuncDelegate(uint sfactor, uint dfactor);
delegate IntPtr glBlendFuncSeparateDelegate(uint sfactorRGB, uint dfactorRGB, uint sfactorAlpha, uint dfactorAlpha);
delegate IntPtr glBlendFuncSeparateiDelegate(uint buf, uint srcRGB, uint dstRGB, uint srcAlpha, uint dstAlpha);
delegate IntPtr glBlendFunciDelegate(uint buf, uint src, uint dst);
delegate IntPtr glBlitFramebufferDelegate(int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter);
delegate IntPtr glBlitNamedFramebufferDelegate(uint readFramebuffer, uint drawFramebuffer, int srcX0, int srcY0, int srcX1, int srcY1, int dstX0, int dstY0, int dstX1, int dstY1, uint mask, uint filter);
delegate IntPtr glBufferDataDelegate(uint target, IntPtr size, IntPtr data, uint usage);
delegate IntPtr glBufferStorageDelegate(uint target, IntPtr size, IntPtr data, uint flags);
delegate IntPtr glBufferSubDataDelegate(uint target, IntPtr offset, IntPtr size, IntPtr data);
delegate IntPtr glCallListDelegate(uint list);
delegate IntPtr glCallListsDelegate(int n, uint type, IntPtr lists);
delegate uint glCheckFramebufferStatusDelegate(uint target);
delegate uint glCheckNamedFramebufferStatusDelegate(uint framebuffer, uint target);
delegate IntPtr glClampColorDelegate(uint target, uint clamp);
delegate IntPtr glClearDelegate(uint mask);
delegate IntPtr glClearAccumDelegate(float red, float green, float blue, float alpha);
delegate IntPtr glClearBufferDataDelegate(uint target, uint internalformat, uint format, uint type, IntPtr data);
delegate IntPtr glClearBufferSubDataDelegate(uint target, uint internalformat, IntPtr offset, IntPtr size, uint format, uint type, IntPtr data);
delegate IntPtr glClearBufferfiDelegate(uint buffer, int drawbuffer, float depth, int stencil);
delegate IntPtr glClearBufferfvDelegate(uint buffer, int drawbuffer, IntPtr value);
delegate IntPtr glClearBufferivDelegate(uint buffer, int drawbuffer, IntPtr value);
delegate IntPtr glClearBufferuivDelegate(uint buffer, int drawbuffer, IntPtr value);
delegate IntPtr glClearColorDelegate(float red, float green, float blue, float alpha);
delegate IntPtr glClearDepthDelegate(double depth);
delegate IntPtr glClearDepthfDelegate(float d);
delegate IntPtr glClearIndexDelegate(float c);
delegate IntPtr glClearNamedBufferDataDelegate(uint buffer, uint internalformat, uint format, uint type, IntPtr data);
delegate IntPtr glClearNamedBufferSubDataDelegate(uint buffer, uint internalformat, IntPtr offset, IntPtr size, uint format, uint type, IntPtr data);
delegate IntPtr glClearNamedFramebufferfiDelegate(uint framebuffer, uint buffer, int drawbuffer, float depth, int stencil);
delegate IntPtr glClearNamedFramebufferfvDelegate(uint framebuffer, uint buffer, int drawbuffer, IntPtr value);
delegate IntPtr glClearNamedFramebufferivDelegate(uint framebuffer, uint buffer, int drawbuffer, IntPtr value);
delegate IntPtr glClearNamedFramebufferuivDelegate(uint framebuffer, uint buffer, int drawbuffer, IntPtr value);
delegate IntPtr glClearStencilDelegate(int s);
delegate IntPtr glClearTexImageDelegate(uint texture, int level, uint format, uint type, IntPtr data);
delegate IntPtr glClearTexSubImageDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, IntPtr data);
delegate IntPtr glClientActiveTextureDelegate(uint texture);
delegate IntPtr glClipControlDelegate(uint origin, uint depth);
delegate IntPtr glClipPlaneDelegate(uint plane, IntPtr equation);
delegate IntPtr glColor3bDelegate(sbyte red, sbyte green, sbyte blue);
delegate IntPtr glColor3bvDelegate(IntPtr v);
delegate IntPtr glColor3dDelegate(double red, double green, double blue);
delegate IntPtr glColor3dvDelegate(IntPtr v);
delegate IntPtr glColor3fDelegate(float red, float green, float blue);
delegate IntPtr glColor3fvDelegate(IntPtr v);
delegate IntPtr glColor3iDelegate(int red, int green, int blue);
delegate IntPtr glColor3ivDelegate(IntPtr v);
delegate IntPtr glColor3sDelegate(short red, short green, short blue);
delegate IntPtr glColor3svDelegate(IntPtr v);
delegate IntPtr glColor3ubDelegate(byte red, byte green, byte blue);
delegate IntPtr glColor3ubvDelegate(IntPtr v);
delegate IntPtr glColor3uiDelegate(uint red, uint green, uint blue);
delegate IntPtr glColor3uivDelegate(IntPtr v);
delegate IntPtr glColor3usDelegate(ushort red, ushort green, ushort blue);
delegate IntPtr glColor3usvDelegate(IntPtr v);
delegate IntPtr glColor4bDelegate(sbyte red, sbyte green, sbyte blue, sbyte alpha);
delegate IntPtr glColor4bvDelegate(IntPtr v);
delegate IntPtr glColor4dDelegate(double red, double green, double blue, double alpha);
delegate IntPtr glColor4dvDelegate(IntPtr v);
delegate IntPtr glColor4fDelegate(float red, float green, float blue, float alpha);
delegate IntPtr glColor4fvDelegate(IntPtr v);
delegate IntPtr glColor4iDelegate(int red, int green, int blue, int alpha);
delegate IntPtr glColor4ivDelegate(IntPtr v);
delegate IntPtr glColor4sDelegate(short red, short green, short blue, short alpha);
delegate IntPtr glColor4svDelegate(IntPtr v);
delegate IntPtr glColor4ubDelegate(byte red, byte green, byte blue, byte alpha);
delegate IntPtr glColor4ubvDelegate(IntPtr v);
delegate IntPtr glColor4uiDelegate(uint red, uint green, uint blue, uint alpha);
delegate IntPtr glColor4uivDelegate(IntPtr v);
delegate IntPtr glColor4usDelegate(ushort red, ushort green, ushort blue, ushort alpha);
delegate IntPtr glColor4usvDelegate(IntPtr v);
delegate IntPtr glColorMaskDelegate(byte red, byte green, byte blue, byte alpha);
delegate IntPtr glColorMaskiDelegate(uint index, byte r, byte g, byte b, byte a);
delegate IntPtr glColorMaterialDelegate(uint face, uint mode);
delegate IntPtr glColorP3uiDelegate(uint type, uint color);
delegate IntPtr glColorP3uivDelegate(uint type, IntPtr color);
delegate IntPtr glColorP4uiDelegate(uint type, uint color);
delegate IntPtr glColorP4uivDelegate(uint type, IntPtr color);
delegate IntPtr glColorPointerDelegate(int size, uint type, int stride, IntPtr pointer);
delegate IntPtr glCompileShaderDelegate(uint shader);
delegate IntPtr glCompressedTexImage1DDelegate(uint target, int level, uint internalformat, int width, int border, int imageSize, IntPtr data);
delegate IntPtr glCompressedTexImage2DDelegate(uint target, int level, uint internalformat, int width, int height, int border, int imageSize, IntPtr data);
delegate IntPtr glCompressedTexImage3DDelegate(uint target, int level, uint internalformat, int width, int height, int depth, int border, int imageSize, IntPtr data);
delegate IntPtr glCompressedTexSubImage1DDelegate(uint target, int level, int xoffset, int width, uint format, int imageSize, IntPtr data);
delegate IntPtr glCompressedTexSubImage2DDelegate(uint target, int level, int xoffset, int yoffset, int width, int height, uint format, int imageSize, IntPtr data);
delegate IntPtr glCompressedTexSubImage3DDelegate(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, int imageSize, IntPtr data);
delegate IntPtr glCompressedTextureSubImage1DDelegate(uint texture, int level, int xoffset, int width, uint format, int imageSize, IntPtr data);
delegate IntPtr glCompressedTextureSubImage2DDelegate(uint texture, int level, int xoffset, int yoffset, int width, int height, uint format, int imageSize, IntPtr data);
delegate IntPtr glCompressedTextureSubImage3DDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, int imageSize, IntPtr data);
delegate IntPtr glCopyBufferSubDataDelegate(uint readTarget, uint writeTarget, IntPtr readOffset, IntPtr writeOffset, IntPtr size);
delegate IntPtr glCopyImageSubDataDelegate(uint srcName, uint srcTarget, int srcLevel, int srcX, int srcY, int srcZ, uint dstName, uint dstTarget, int dstLevel, int dstX, int dstY, int dstZ, int srcWidth, int srcHeight, int srcDepth);
delegate IntPtr glCopyNamedBufferSubDataDelegate(uint readBuffer, uint writeBuffer, IntPtr readOffset, IntPtr writeOffset, IntPtr size);
delegate IntPtr glCopyPixelsDelegate(int x, int y, int width, int height, uint type);
delegate IntPtr glCopyTexImage1DDelegate(uint target, int level, uint internalformat, int x, int y, int width, int border);
delegate IntPtr glCopyTexImage2DDelegate(uint target, int level, uint internalformat, int x, int y, int width, int height, int border);
delegate IntPtr glCopyTexSubImage1DDelegate(uint target, int level, int xoffset, int x, int y, int width);
delegate IntPtr glCopyTexSubImage2DDelegate(uint target, int level, int xoffset, int yoffset, int x, int y, int width, int height);
delegate IntPtr glCopyTexSubImage3DDelegate(uint target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
delegate IntPtr glCopyTextureSubImage1DDelegate(uint texture, int level, int xoffset, int x, int y, int width);
delegate IntPtr glCopyTextureSubImage2DDelegate(uint texture, int level, int xoffset, int yoffset, int x, int y, int width, int height);
delegate IntPtr glCopyTextureSubImage3DDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);
delegate IntPtr glCreateBuffersDelegate(int n, IntPtr buffers);
delegate IntPtr glCreateFramebuffersDelegate(int n, IntPtr framebuffers);
delegate uint glCreateProgramDelegate();
delegate IntPtr glCreateProgramPipelinesDelegate(int n, IntPtr pipelines);
delegate IntPtr glCreateQueriesDelegate(uint target, int n, IntPtr ids);
delegate IntPtr glCreateRenderbuffersDelegate(int n, IntPtr renderbuffers);
delegate IntPtr glCreateSamplersDelegate(int n, IntPtr samplers);
delegate uint glCreateShaderDelegate(uint type);
delegate uint glCreateShaderProgramvDelegate(uint type, int count, IntPtr strings);
delegate IntPtr glCreateTexturesDelegate(uint target, int n, IntPtr textures);
delegate IntPtr glCreateTransformFeedbacksDelegate(int n, IntPtr ids);
delegate IntPtr glCreateVertexArraysDelegate(int n, IntPtr arrays);
delegate IntPtr glCullFaceDelegate(uint mode);
delegate IntPtr glDebugMessageControlDelegate(uint source, uint type, uint severity, int count, IntPtr ids, byte enabled);
delegate IntPtr glDebugMessageInsertDelegate(uint source, uint type, uint id, uint severity, int length, IntPtr buf);
delegate IntPtr glDeleteBuffersDelegate(int n, IntPtr buffers);
delegate IntPtr glDeleteFramebuffersDelegate(int n, IntPtr framebuffers);
delegate IntPtr glDeleteListsDelegate(uint list, int range);
delegate IntPtr glDeleteProgramDelegate(uint program);
delegate IntPtr glDeleteProgramPipelinesDelegate(int n, IntPtr pipelines);
delegate IntPtr glDeleteQueriesDelegate(int n, IntPtr ids);
delegate IntPtr glDeleteRenderbuffersDelegate(int n, IntPtr renderbuffers);
delegate IntPtr glDeleteSamplersDelegate(int count, IntPtr samplers);
delegate IntPtr glDeleteShaderDelegate(uint shader);
delegate IntPtr glDeleteTexturesDelegate(int n, IntPtr textures);
delegate IntPtr glDeleteTransformFeedbacksDelegate(int n, IntPtr ids);
delegate IntPtr glDeleteVertexArraysDelegate(int n, IntPtr arrays);
delegate IntPtr glDepthFuncDelegate(uint func);
delegate IntPtr glDepthMaskDelegate(byte flag);
delegate IntPtr glDepthRangeDelegate(double n, double f);
delegate IntPtr glDepthRangeArrayvDelegate(uint first, int count, IntPtr v);
delegate IntPtr glDepthRangeIndexedDelegate(uint index, double n, double f);
delegate IntPtr glDepthRangefDelegate(float n, float f);
delegate IntPtr glDetachShaderDelegate(uint program, uint shader);
delegate IntPtr glDisableDelegate(uint cap);
delegate IntPtr glDisableClientStateDelegate(uint array);
delegate IntPtr glDisableVertexArrayAttribDelegate(uint vaobj, uint index);
delegate IntPtr glDisableVertexAttribArrayDelegate(uint index);
delegate IntPtr glDisableiDelegate(uint target, uint index);
delegate IntPtr glDispatchComputeDelegate(uint num_groups_x, uint num_groups_y, uint num_groups_z);
delegate IntPtr glDispatchComputeIndirectDelegate(IntPtr indirect);
delegate IntPtr glDrawArraysDelegate(uint mode, int first, int count);
delegate IntPtr glDrawArraysIndirectDelegate(uint mode, IntPtr indirect);
delegate IntPtr glDrawArraysInstancedDelegate(uint mode, int first, int count, int instancecount);
delegate IntPtr glDrawArraysInstancedBaseInstanceDelegate(uint mode, int first, int count, int instancecount, uint baseinstance);
delegate IntPtr glDrawBufferDelegate(uint buf);
delegate IntPtr glDrawBuffersDelegate(int n, IntPtr bufs);
delegate IntPtr glDrawElementsDelegate(uint mode, int count, uint type, IntPtr indices);
delegate IntPtr glDrawElementsBaseVertexDelegate(uint mode, int count, uint type, IntPtr indices, int basevertex);
delegate IntPtr glDrawElementsIndirectDelegate(uint mode, uint type, IntPtr indirect);
delegate IntPtr glDrawElementsInstancedDelegate(uint mode, int count, uint type, IntPtr indices, int instancecount);
delegate IntPtr glDrawElementsInstancedBaseInstanceDelegate(uint mode, int count, uint type, IntPtr indices, int instancecount, uint baseinstance);
delegate IntPtr glDrawElementsInstancedBaseVertexDelegate(uint mode, int count, uint type, IntPtr indices, int instancecount, int basevertex);
delegate IntPtr glDrawElementsInstancedBaseVertexBaseInstanceDelegate(uint mode, int count, uint type, IntPtr indices, int instancecount, int basevertex, uint baseinstance);
delegate IntPtr glDrawPixelsDelegate(int width, int height, uint format, uint type, IntPtr pixels);
delegate IntPtr glDrawRangeElementsDelegate(uint mode, uint start, uint end, int count, uint type, IntPtr indices);
delegate IntPtr glDrawRangeElementsBaseVertexDelegate(uint mode, uint start, uint end, int count, uint type, IntPtr indices, int basevertex);
delegate IntPtr glDrawTransformFeedbackDelegate(uint mode, uint id);
delegate IntPtr glDrawTransformFeedbackInstancedDelegate(uint mode, uint id, int instancecount);
delegate IntPtr glDrawTransformFeedbackStreamDelegate(uint mode, uint id, uint stream);
delegate IntPtr glDrawTransformFeedbackStreamInstancedDelegate(uint mode, uint id, uint stream, int instancecount);
delegate IntPtr glEdgeFlagDelegate(byte flag);
delegate IntPtr glEdgeFlagPointerDelegate(int stride, IntPtr pointer);
delegate IntPtr glEdgeFlagvDelegate(IntPtr flag);
delegate IntPtr glEnableDelegate(uint cap);
delegate IntPtr glEnableClientStateDelegate(uint array);
delegate IntPtr glEnableVertexArrayAttribDelegate(uint vaobj, uint index);
delegate IntPtr glEnableVertexAttribArrayDelegate(uint index);
delegate IntPtr glEnableiDelegate(uint target, uint index);
delegate IntPtr glEndDelegate();
delegate IntPtr glEndConditionalRenderDelegate();
delegate IntPtr glEndListDelegate();
delegate IntPtr glEndQueryDelegate(uint target);
delegate IntPtr glEndQueryIndexedDelegate(uint target, uint index);
delegate IntPtr glEndTransformFeedbackDelegate();
delegate IntPtr glEvalCoord1dDelegate(double u);
delegate IntPtr glEvalCoord1dvDelegate(IntPtr u);
delegate IntPtr glEvalCoord1fDelegate(float u);
delegate IntPtr glEvalCoord1fvDelegate(IntPtr u);
delegate IntPtr glEvalCoord2dDelegate(double u, double v);
delegate IntPtr glEvalCoord2dvDelegate(IntPtr u);
delegate IntPtr glEvalCoord2fDelegate(float u, float v);
delegate IntPtr glEvalCoord2fvDelegate(IntPtr u);
delegate IntPtr glEvalMesh1Delegate(uint mode, int i1, int i2);
delegate IntPtr glEvalMesh2Delegate(uint mode, int i1, int i2, int j1, int j2);
delegate IntPtr glEvalPoint1Delegate(int i);
delegate IntPtr glEvalPoint2Delegate(int i, int j);
delegate IntPtr glFeedbackBufferDelegate(int size, uint type, IntPtr buffer);
delegate IntPtr glFinishDelegate();
delegate IntPtr glFlushDelegate();
delegate IntPtr glFlushMappedBufferRangeDelegate(uint target, IntPtr offset, IntPtr length);
delegate IntPtr glFlushMappedNamedBufferRangeDelegate(uint buffer, IntPtr offset, IntPtr length);
delegate IntPtr glFogCoordPointerDelegate(uint type, int stride, IntPtr pointer);
delegate IntPtr glFogCoorddDelegate(double coord);
delegate IntPtr glFogCoorddvDelegate(IntPtr coord);
delegate IntPtr glFogCoordfDelegate(float coord);
delegate IntPtr glFogCoordfvDelegate(IntPtr coord);
delegate IntPtr glFogfDelegate(uint pname, float param);
delegate IntPtr glFogfvDelegate(uint pname, IntPtr @params);
delegate IntPtr glFogiDelegate(uint pname, int param);
delegate IntPtr glFogivDelegate(uint pname, IntPtr @params);
delegate IntPtr glFramebufferParameteriDelegate(uint target, uint pname, int param);
delegate IntPtr glFramebufferRenderbufferDelegate(uint target, uint attachment, uint renderbuffertarget, uint renderbuffer);
delegate IntPtr glFramebufferTextureDelegate(uint target, uint attachment, uint texture, int level);
delegate IntPtr glFramebufferTexture1DDelegate(uint target, uint attachment, uint textarget, uint texture, int level);
delegate IntPtr glFramebufferTexture2DDelegate(uint target, uint attachment, uint textarget, uint texture, int level);
delegate IntPtr glFramebufferTexture3DDelegate(uint target, uint attachment, uint textarget, uint texture, int level, int zoffset);
delegate IntPtr glFramebufferTextureLayerDelegate(uint target, uint attachment, uint texture, int level, int layer);
delegate IntPtr glFrontFaceDelegate(uint mode);
delegate IntPtr glFrustumDelegate(double left, double right, double bottom, double top, double zNear, double zFar);
delegate IntPtr glGenBuffersDelegate(int n, IntPtr buffers);
delegate IntPtr glGenFramebuffersDelegate(int n, IntPtr framebuffers);
delegate uint glGenListsDelegate(int range);
delegate IntPtr glGenProgramPipelinesDelegate(int n, IntPtr pipelines);
delegate IntPtr glGenQueriesDelegate(int n, IntPtr ids);
delegate IntPtr glGenRenderbuffersDelegate(int n, IntPtr renderbuffers);
delegate IntPtr glGenSamplersDelegate(int count, IntPtr samplers);
delegate IntPtr glGenTexturesDelegate(int n, IntPtr textures);
delegate IntPtr glGenTransformFeedbacksDelegate(int n, IntPtr ids);
delegate IntPtr glGenVertexArraysDelegate(int n, IntPtr arrays);
delegate IntPtr glGenerateMipmapDelegate(uint target);
delegate IntPtr glGenerateTextureMipmapDelegate(uint texture);
delegate IntPtr glGetActiveAtomicCounterBufferivDelegate(uint program, uint bufferIndex, uint pname, IntPtr @params);
delegate IntPtr glGetActiveAttribDelegate(uint program, uint index, int bufSize, IntPtr length, IntPtr size, IntPtr type, IntPtr name);
delegate IntPtr glGetActiveSubroutineNameDelegate(uint program, uint shadertype, uint index, int bufSize, IntPtr length, IntPtr name);
delegate IntPtr glGetActiveSubroutineUniformNameDelegate(uint program, uint shadertype, uint index, int bufSize, IntPtr length, IntPtr name);
delegate IntPtr glGetActiveSubroutineUniformivDelegate(uint program, uint shadertype, uint index, uint pname, IntPtr values);
delegate IntPtr glGetActiveUniformDelegate(uint program, uint index, int bufSize, IntPtr length, IntPtr size, IntPtr type, IntPtr name);
delegate IntPtr glGetActiveUniformBlockNameDelegate(uint program, uint uniformBlockIndex, int bufSize, IntPtr length, IntPtr uniformBlockName);
delegate IntPtr glGetActiveUniformBlockivDelegate(uint program, uint uniformBlockIndex, uint pname, IntPtr @params);
delegate IntPtr glGetActiveUniformNameDelegate(uint program, uint uniformIndex, int bufSize, IntPtr length, IntPtr uniformName);
delegate IntPtr glGetActiveUniformsivDelegate(uint program, int uniformCount, IntPtr uniformIndices, uint pname, IntPtr @params);
delegate IntPtr glGetAttachedShadersDelegate(uint program, int maxCount, IntPtr count, IntPtr shaders);
delegate int glGetAttribLocationDelegate(uint program, IntPtr name);
delegate IntPtr glGetBooleani_vDelegate(uint target, uint index, IntPtr data);
delegate IntPtr glGetBooleanvDelegate(uint pname, IntPtr data);
delegate IntPtr glGetBufferParameteri64vDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetBufferParameterivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetBufferPointervDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetBufferSubDataDelegate(uint target, IntPtr offset, IntPtr size, IntPtr data);
delegate IntPtr glGetClipPlaneDelegate(uint plane, IntPtr equation);
delegate IntPtr glGetCompressedTexImageDelegate(uint target, int level, IntPtr img);
delegate IntPtr glGetCompressedTextureImageDelegate(uint texture, int level, int bufSize, IntPtr pixels);
delegate IntPtr glGetCompressedTextureSubImageDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int bufSize, IntPtr pixels);
delegate uint glGetDebugMessageLogDelegate(uint count, int bufSize, IntPtr sources, IntPtr types, IntPtr ids, IntPtr severities, IntPtr lengths, IntPtr messageLog);
delegate IntPtr glGetDoublei_vDelegate(uint target, uint index, IntPtr data);
delegate IntPtr glGetDoublevDelegate(uint pname, IntPtr data);
delegate uint glGetErrorDelegate();
delegate IntPtr glGetFloati_vDelegate(uint target, uint index, IntPtr data);
delegate IntPtr glGetFloatvDelegate(uint pname, IntPtr data);
delegate int glGetFragDataIndexDelegate(uint program, IntPtr name);
delegate int glGetFragDataLocationDelegate(uint program, IntPtr name);
delegate IntPtr glGetFramebufferAttachmentParameterivDelegate(uint target, uint attachment, uint pname, IntPtr @params);
delegate IntPtr glGetFramebufferParameterivDelegate(uint target, uint pname, IntPtr @params);
delegate uint glGetGraphicsResetStatusDelegate();
delegate IntPtr glGetInteger64i_vDelegate(uint target, uint index, IntPtr data);
delegate IntPtr glGetInteger64vDelegate(uint pname, IntPtr data);
delegate IntPtr glGetIntegeri_vDelegate(uint target, uint index, IntPtr data);
delegate IntPtr glGetIntegervDelegate(uint pname, IntPtr data);
delegate IntPtr glGetInternalformati64vDelegate(uint target, uint internalformat, uint pname, int count, IntPtr @params);
delegate IntPtr glGetInternalformativDelegate(uint target, uint internalformat, uint pname, int count, IntPtr @params);
delegate IntPtr glGetLightfvDelegate(uint light, uint pname, IntPtr @params);
delegate IntPtr glGetLightivDelegate(uint light, uint pname, IntPtr @params);
delegate IntPtr glGetMapdvDelegate(uint target, uint query, IntPtr v);
delegate IntPtr glGetMapfvDelegate(uint target, uint query, IntPtr v);
delegate IntPtr glGetMapivDelegate(uint target, uint query, IntPtr v);
delegate IntPtr glGetMaterialfvDelegate(uint face, uint pname, IntPtr @params);
delegate IntPtr glGetMaterialivDelegate(uint face, uint pname, IntPtr @params);
delegate IntPtr glGetMultisamplefvDelegate(uint pname, uint index, IntPtr val);
delegate IntPtr glGetNamedBufferParameteri64vDelegate(uint buffer, uint pname, IntPtr @params);
delegate IntPtr glGetNamedBufferParameterivDelegate(uint buffer, uint pname, IntPtr @params);
delegate IntPtr glGetNamedBufferPointervDelegate(uint buffer, uint pname, IntPtr @params);
delegate IntPtr glGetNamedBufferSubDataDelegate(uint buffer, IntPtr offset, IntPtr size, IntPtr data);
delegate IntPtr glGetNamedFramebufferAttachmentParameterivDelegate(uint framebuffer, uint attachment, uint pname, IntPtr @params);
delegate IntPtr glGetNamedFramebufferParameterivDelegate(uint framebuffer, uint pname, IntPtr param);
delegate IntPtr glGetNamedRenderbufferParameterivDelegate(uint renderbuffer, uint pname, IntPtr @params);
delegate IntPtr glGetObjectLabelDelegate(uint identifier, uint name, int bufSize, IntPtr length, IntPtr label);
delegate IntPtr glGetObjectPtrLabelDelegate(IntPtr ptr, int bufSize, IntPtr length, IntPtr label);
delegate IntPtr glGetPixelMapfvDelegate(uint map, IntPtr values);
delegate IntPtr glGetPixelMapuivDelegate(uint map, IntPtr values);
delegate IntPtr glGetPixelMapusvDelegate(uint map, IntPtr values);
delegate IntPtr glGetPointervDelegate(uint pname, IntPtr @params);
delegate IntPtr glGetPolygonStippleDelegate(IntPtr mask);
delegate IntPtr glGetProgramBinaryDelegate(uint program, int bufSize, IntPtr length, IntPtr binaryFormat, IntPtr binary);
delegate IntPtr glGetProgramInfoLogDelegate(uint program, int bufSize, IntPtr length, IntPtr infoLog);
delegate IntPtr glGetProgramInterfaceivDelegate(uint program, uint programInterface, uint pname, IntPtr @params);
delegate IntPtr glGetProgramPipelineInfoLogDelegate(uint pipeline, int bufSize, IntPtr length, IntPtr infoLog);
delegate IntPtr glGetProgramPipelineivDelegate(uint pipeline, uint pname, IntPtr @params);
delegate uint glGetProgramResourceIndexDelegate(uint program, uint programInterface, IntPtr name);
delegate int glGetProgramResourceLocationDelegate(uint program, uint programInterface, IntPtr name);
delegate int glGetProgramResourceLocationIndexDelegate(uint program, uint programInterface, IntPtr name);
delegate IntPtr glGetProgramResourceNameDelegate(uint program, uint programInterface, uint index, int bufSize, IntPtr length, IntPtr name);
delegate IntPtr glGetProgramResourceivDelegate(uint program, uint programInterface, uint index, int propCount, IntPtr props, int count, IntPtr length, IntPtr @params);
delegate IntPtr glGetProgramStageivDelegate(uint program, uint shadertype, uint pname, IntPtr values);
delegate IntPtr glGetProgramivDelegate(uint program, uint pname, IntPtr @params);
delegate IntPtr glGetQueryBufferObjecti64vDelegate(uint id, uint buffer, uint pname, IntPtr offset);
delegate IntPtr glGetQueryBufferObjectivDelegate(uint id, uint buffer, uint pname, IntPtr offset);
delegate IntPtr glGetQueryBufferObjectui64vDelegate(uint id, uint buffer, uint pname, IntPtr offset);
delegate IntPtr glGetQueryBufferObjectuivDelegate(uint id, uint buffer, uint pname, IntPtr offset);
delegate IntPtr glGetQueryIndexedivDelegate(uint target, uint index, uint pname, IntPtr @params);
delegate IntPtr glGetQueryObjecti64vDelegate(uint id, uint pname, IntPtr @params);
delegate IntPtr glGetQueryObjectivDelegate(uint id, uint pname, IntPtr @params);
delegate IntPtr glGetQueryObjectui64vDelegate(uint id, uint pname, IntPtr @params);
delegate IntPtr glGetQueryObjectuivDelegate(uint id, uint pname, IntPtr @params);
delegate IntPtr glGetQueryivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetRenderbufferParameterivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetSamplerParameterIivDelegate(uint sampler, uint pname, IntPtr @params);
delegate IntPtr glGetSamplerParameterIuivDelegate(uint sampler, uint pname, IntPtr @params);
delegate IntPtr glGetSamplerParameterfvDelegate(uint sampler, uint pname, IntPtr @params);
delegate IntPtr glGetSamplerParameterivDelegate(uint sampler, uint pname, IntPtr @params);
delegate IntPtr glGetShaderInfoLogDelegate(uint shader, int bufSize, IntPtr length, IntPtr infoLog);
delegate IntPtr glGetShaderPrecisionFormatDelegate(uint shadertype, uint precisiontype, IntPtr range, IntPtr precision);
delegate IntPtr glGetShaderSourceDelegate(uint shader, int bufSize, IntPtr length, IntPtr source);
delegate IntPtr glGetShaderivDelegate(uint shader, uint pname, IntPtr @params);
delegate byte glGetStringDelegate(uint name);
delegate byte glGetStringiDelegate(uint name, uint index);
delegate uint glGetSubroutineIndexDelegate(uint program, uint shadertype, IntPtr name);
delegate int glGetSubroutineUniformLocationDelegate(uint program, uint shadertype, IntPtr name);
delegate IntPtr glGetTexEnvfvDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetTexEnvivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetTexGendvDelegate(uint coord, uint pname, IntPtr @params);
delegate IntPtr glGetTexGenfvDelegate(uint coord, uint pname, IntPtr @params);
delegate IntPtr glGetTexGenivDelegate(uint coord, uint pname, IntPtr @params);
delegate IntPtr glGetTexImageDelegate(uint target, int level, uint format, uint type, IntPtr pixels);
delegate IntPtr glGetTexLevelParameterfvDelegate(uint target, int level, uint pname, IntPtr @params);
delegate IntPtr glGetTexLevelParameterivDelegate(uint target, int level, uint pname, IntPtr @params);
delegate IntPtr glGetTexParameterIivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetTexParameterIuivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetTexParameterfvDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetTexParameterivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glGetTextureImageDelegate(uint texture, int level, uint format, uint type, int bufSize, IntPtr pixels);
delegate IntPtr glGetTextureLevelParameterfvDelegate(uint texture, int level, uint pname, IntPtr @params);
delegate IntPtr glGetTextureLevelParameterivDelegate(uint texture, int level, uint pname, IntPtr @params);
delegate IntPtr glGetTextureParameterIivDelegate(uint texture, uint pname, IntPtr @params);
delegate IntPtr glGetTextureParameterIuivDelegate(uint texture, uint pname, IntPtr @params);
delegate IntPtr glGetTextureParameterfvDelegate(uint texture, uint pname, IntPtr @params);
delegate IntPtr glGetTextureParameterivDelegate(uint texture, uint pname, IntPtr @params);
delegate IntPtr glGetTextureSubImageDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, int bufSize, IntPtr pixels);
delegate IntPtr glGetTransformFeedbackVaryingDelegate(uint program, uint index, int bufSize, IntPtr length, IntPtr size, IntPtr type, IntPtr name);
delegate IntPtr glGetTransformFeedbacki64_vDelegate(uint xfb, uint pname, uint index, IntPtr param);
delegate IntPtr glGetTransformFeedbacki_vDelegate(uint xfb, uint pname, uint index, IntPtr param);
delegate IntPtr glGetTransformFeedbackivDelegate(uint xfb, uint pname, IntPtr param);
delegate uint glGetUniformBlockIndexDelegate(uint program, IntPtr uniformBlockName);
delegate IntPtr glGetUniformIndicesDelegate(uint program, int uniformCount, IntPtr uniformNames, IntPtr uniformIndices);
delegate int glGetUniformLocationDelegate(uint program, IntPtr name);
delegate IntPtr glGetUniformSubroutineuivDelegate(uint shadertype, int location, IntPtr @params);
delegate IntPtr glGetUniformdvDelegate(uint program, int location, IntPtr @params);
delegate IntPtr glGetUniformfvDelegate(uint program, int location, IntPtr @params);
delegate IntPtr glGetUniformivDelegate(uint program, int location, IntPtr @params);
delegate IntPtr glGetUniformuivDelegate(uint program, int location, IntPtr @params);
delegate IntPtr glGetVertexArrayIndexed64ivDelegate(uint vaobj, uint index, uint pname, IntPtr param);
delegate IntPtr glGetVertexArrayIndexedivDelegate(uint vaobj, uint index, uint pname, IntPtr param);
delegate IntPtr glGetVertexArrayivDelegate(uint vaobj, uint pname, IntPtr param);
delegate IntPtr glGetVertexAttribIivDelegate(uint index, uint pname, IntPtr @params);
delegate IntPtr glGetVertexAttribIuivDelegate(uint index, uint pname, IntPtr @params);
delegate IntPtr glGetVertexAttribLdvDelegate(uint index, uint pname, IntPtr @params);
delegate IntPtr glGetVertexAttribPointervDelegate(uint index, uint pname, IntPtr pointer);
delegate IntPtr glGetVertexAttribdvDelegate(uint index, uint pname, IntPtr @params);
delegate IntPtr glGetVertexAttribfvDelegate(uint index, uint pname, IntPtr @params);
delegate IntPtr glGetVertexAttribivDelegate(uint index, uint pname, IntPtr @params);
delegate IntPtr glGetnColorTableDelegate(uint target, uint format, uint type, int bufSize, IntPtr table);
delegate IntPtr glGetnCompressedTexImageDelegate(uint target, int lod, int bufSize, IntPtr pixels);
delegate IntPtr glGetnConvolutionFilterDelegate(uint target, uint format, uint type, int bufSize, IntPtr image);
delegate IntPtr glGetnHistogramDelegate(uint target, byte reset, uint format, uint type, int bufSize, IntPtr values);
delegate IntPtr glGetnMapdvDelegate(uint target, uint query, int bufSize, IntPtr v);
delegate IntPtr glGetnMapfvDelegate(uint target, uint query, int bufSize, IntPtr v);
delegate IntPtr glGetnMapivDelegate(uint target, uint query, int bufSize, IntPtr v);
delegate IntPtr glGetnMinmaxDelegate(uint target, byte reset, uint format, uint type, int bufSize, IntPtr values);
delegate IntPtr glGetnPixelMapfvDelegate(uint map, int bufSize, IntPtr values);
delegate IntPtr glGetnPixelMapuivDelegate(uint map, int bufSize, IntPtr values);
delegate IntPtr glGetnPixelMapusvDelegate(uint map, int bufSize, IntPtr values);
delegate IntPtr glGetnPolygonStippleDelegate(int bufSize, IntPtr pattern);
delegate IntPtr glGetnSeparableFilterDelegate(uint target, uint format, uint type, int rowBufSize, IntPtr row, int columnBufSize, IntPtr column, IntPtr span);
delegate IntPtr glGetnTexImageDelegate(uint target, int level, uint format, uint type, int bufSize, IntPtr pixels);
delegate IntPtr glGetnUniformdvDelegate(uint program, int location, int bufSize, IntPtr @params);
delegate IntPtr glGetnUniformfvDelegate(uint program, int location, int bufSize, IntPtr @params);
delegate IntPtr glGetnUniformivDelegate(uint program, int location, int bufSize, IntPtr @params);
delegate IntPtr glGetnUniformuivDelegate(uint program, int location, int bufSize, IntPtr @params);
delegate IntPtr glHintDelegate(uint target, uint mode);
delegate IntPtr glIndexMaskDelegate(uint mask);
delegate IntPtr glIndexPointerDelegate(uint type, int stride, IntPtr pointer);
delegate IntPtr glIndexdDelegate(double c);
delegate IntPtr glIndexdvDelegate(IntPtr c);
delegate IntPtr glIndexfDelegate(float c);
delegate IntPtr glIndexfvDelegate(IntPtr c);
delegate IntPtr glIndexiDelegate(int c);
delegate IntPtr glIndexivDelegate(IntPtr c);
delegate IntPtr glIndexsDelegate(short c);
delegate IntPtr glIndexsvDelegate(IntPtr c);
delegate IntPtr glIndexubDelegate(byte c);
delegate IntPtr glIndexubvDelegate(IntPtr c);
delegate IntPtr glInitNamesDelegate();
delegate IntPtr glInterleavedArraysDelegate(uint format, int stride, IntPtr pointer);
delegate IntPtr glInvalidateBufferDataDelegate(uint buffer);
delegate IntPtr glInvalidateBufferSubDataDelegate(uint buffer, IntPtr offset, IntPtr length);
delegate IntPtr glInvalidateFramebufferDelegate(uint target, int numAttachments, IntPtr attachments);
delegate IntPtr glInvalidateNamedFramebufferDataDelegate(uint framebuffer, int numAttachments, IntPtr attachments);
delegate IntPtr glInvalidateNamedFramebufferSubDataDelegate(uint framebuffer, int numAttachments, IntPtr attachments, int x, int y, int width, int height);
delegate IntPtr glInvalidateSubFramebufferDelegate(uint target, int numAttachments, IntPtr attachments, int x, int y, int width, int height);
delegate IntPtr glInvalidateTexImageDelegate(uint texture, int level);
delegate IntPtr glInvalidateTexSubImageDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth);
delegate byte glIsBufferDelegate(uint buffer);
delegate byte glIsEnabledDelegate(uint cap);
delegate byte glIsEnablediDelegate(uint target, uint index);
delegate byte glIsFramebufferDelegate(uint framebuffer);
delegate byte glIsListDelegate(uint list);
delegate byte glIsProgramDelegate(uint program);
delegate byte glIsProgramPipelineDelegate(uint pipeline);
delegate byte glIsQueryDelegate(uint id);
delegate byte glIsRenderbufferDelegate(uint renderbuffer);
delegate byte glIsSamplerDelegate(uint sampler);
delegate byte glIsShaderDelegate(uint shader);
delegate byte glIsTextureDelegate(uint texture);
delegate byte glIsTransformFeedbackDelegate(uint id);
delegate byte glIsVertexArrayDelegate(uint array);
delegate IntPtr glLightModelfDelegate(uint pname, float param);
delegate IntPtr glLightModelfvDelegate(uint pname, IntPtr @params);
delegate IntPtr glLightModeliDelegate(uint pname, int param);
delegate IntPtr glLightModelivDelegate(uint pname, IntPtr @params);
delegate IntPtr glLightfDelegate(uint light, uint pname, float param);
delegate IntPtr glLightfvDelegate(uint light, uint pname, IntPtr @params);
delegate IntPtr glLightiDelegate(uint light, uint pname, int param);
delegate IntPtr glLightivDelegate(uint light, uint pname, IntPtr @params);
delegate IntPtr glLineStippleDelegate(int factor, ushort pattern);
delegate IntPtr glLineWidthDelegate(float width);
delegate IntPtr glLinkProgramDelegate(uint program);
delegate IntPtr glListBaseDelegate(uint @base);
delegate IntPtr glLoadIdentityDelegate();
delegate IntPtr glLoadMatrixdDelegate(IntPtr m);
delegate IntPtr glLoadMatrixfDelegate(IntPtr m);
delegate IntPtr glLoadNameDelegate(uint name);
delegate IntPtr glLoadTransposeMatrixdDelegate(IntPtr m);
delegate IntPtr glLoadTransposeMatrixfDelegate(IntPtr m);
delegate IntPtr glLogicOpDelegate(uint opcode);
delegate IntPtr glMap1dDelegate(uint target, double u1, double u2, int stride, int order, IntPtr points);
delegate IntPtr glMap1fDelegate(uint target, float u1, float u2, int stride, int order, IntPtr points);
delegate IntPtr glMap2dDelegate(uint target, double u1, double u2, int ustride, int uorder, double v1, double v2, int vstride, int vorder, IntPtr points);
delegate IntPtr glMap2fDelegate(uint target, float u1, float u2, int ustride, int uorder, float v1, float v2, int vstride, int vorder, IntPtr points);
delegate IntPtr glMapBufferDelegate(uint target, uint access);
delegate IntPtr glMapBufferRangeDelegate(uint target, IntPtr offset, IntPtr length, uint access);
delegate IntPtr glMapGrid1dDelegate(int un, double u1, double u2);
delegate IntPtr glMapGrid1fDelegate(int un, float u1, float u2);
delegate IntPtr glMapGrid2dDelegate(int un, double u1, double u2, int vn, double v1, double v2);
delegate IntPtr glMapGrid2fDelegate(int un, float u1, float u2, int vn, float v1, float v2);
delegate IntPtr glMapNamedBufferDelegate(uint buffer, uint access);
delegate IntPtr glMapNamedBufferRangeDelegate(uint buffer, IntPtr offset, IntPtr length, uint access);
delegate IntPtr glMaterialfDelegate(uint face, uint pname, float param);
delegate IntPtr glMaterialfvDelegate(uint face, uint pname, IntPtr @params);
delegate IntPtr glMaterialiDelegate(uint face, uint pname, int param);
delegate IntPtr glMaterialivDelegate(uint face, uint pname, IntPtr @params);
delegate IntPtr glMatrixModeDelegate(uint mode);
delegate IntPtr glMemoryBarrierDelegate(uint barriers);
delegate IntPtr glMemoryBarrierByRegionDelegate(uint barriers);
delegate IntPtr glMinSampleShadingDelegate(float value);
delegate IntPtr glMultMatrixdDelegate(IntPtr m);
delegate IntPtr glMultMatrixfDelegate(IntPtr m);
delegate IntPtr glMultTransposeMatrixdDelegate(IntPtr m);
delegate IntPtr glMultTransposeMatrixfDelegate(IntPtr m);
delegate IntPtr glMultiDrawArraysDelegate(uint mode, IntPtr first, IntPtr count, int drawcount);
delegate IntPtr glMultiDrawArraysIndirectDelegate(uint mode, IntPtr indirect, int drawcount, int stride);
delegate IntPtr glMultiDrawArraysIndirectCountDelegate(uint mode, IntPtr indirect, IntPtr drawcount, int maxdrawcount, int stride);
delegate IntPtr glMultiDrawElementsDelegate(uint mode, IntPtr count, uint type, IntPtr indices, int drawcount);
delegate IntPtr glMultiDrawElementsBaseVertexDelegate(uint mode, IntPtr count, uint type, IntPtr indices, int drawcount, IntPtr basevertex);
delegate IntPtr glMultiDrawElementsIndirectDelegate(uint mode, uint type, IntPtr indirect, int drawcount, int stride);
delegate IntPtr glMultiDrawElementsIndirectCountDelegate(uint mode, uint type, IntPtr indirect, IntPtr drawcount, int maxdrawcount, int stride);
delegate IntPtr glMultiTexCoord1dDelegate(uint target, double s);
delegate IntPtr glMultiTexCoord1dvDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord1fDelegate(uint target, float s);
delegate IntPtr glMultiTexCoord1fvDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord1iDelegate(uint target, int s);
delegate IntPtr glMultiTexCoord1ivDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord1sDelegate(uint target, short s);
delegate IntPtr glMultiTexCoord1svDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord2dDelegate(uint target, double s, double t);
delegate IntPtr glMultiTexCoord2dvDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord2fDelegate(uint target, float s, float t);
delegate IntPtr glMultiTexCoord2fvDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord2iDelegate(uint target, int s, int t);
delegate IntPtr glMultiTexCoord2ivDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord2sDelegate(uint target, short s, short t);
delegate IntPtr glMultiTexCoord2svDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord3dDelegate(uint target, double s, double t, double r);
delegate IntPtr glMultiTexCoord3dvDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord3fDelegate(uint target, float s, float t, float r);
delegate IntPtr glMultiTexCoord3fvDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord3iDelegate(uint target, int s, int t, int r);
delegate IntPtr glMultiTexCoord3ivDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord3sDelegate(uint target, short s, short t, short r);
delegate IntPtr glMultiTexCoord3svDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord4dDelegate(uint target, double s, double t, double r, double q);
delegate IntPtr glMultiTexCoord4dvDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord4fDelegate(uint target, float s, float t, float r, float q);
delegate IntPtr glMultiTexCoord4fvDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord4iDelegate(uint target, int s, int t, int r, int q);
delegate IntPtr glMultiTexCoord4ivDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoord4sDelegate(uint target, short s, short t, short r, short q);
delegate IntPtr glMultiTexCoord4svDelegate(uint target, IntPtr v);
delegate IntPtr glMultiTexCoordP1uiDelegate(uint texture, uint type, uint coords);
delegate IntPtr glMultiTexCoordP1uivDelegate(uint texture, uint type, IntPtr coords);
delegate IntPtr glMultiTexCoordP2uiDelegate(uint texture, uint type, uint coords);
delegate IntPtr glMultiTexCoordP2uivDelegate(uint texture, uint type, IntPtr coords);
delegate IntPtr glMultiTexCoordP3uiDelegate(uint texture, uint type, uint coords);
delegate IntPtr glMultiTexCoordP3uivDelegate(uint texture, uint type, IntPtr coords);
delegate IntPtr glMultiTexCoordP4uiDelegate(uint texture, uint type, uint coords);
delegate IntPtr glMultiTexCoordP4uivDelegate(uint texture, uint type, IntPtr coords);
delegate IntPtr glNamedBufferDataDelegate(uint buffer, IntPtr size, IntPtr data, uint usage);
delegate IntPtr glNamedBufferStorageDelegate(uint buffer, IntPtr size, IntPtr data, uint flags);
delegate IntPtr glNamedBufferSubDataDelegate(uint buffer, IntPtr offset, IntPtr size, IntPtr data);
delegate IntPtr glNamedFramebufferDrawBufferDelegate(uint framebuffer, uint buf);
delegate IntPtr glNamedFramebufferDrawBuffersDelegate(uint framebuffer, int n, IntPtr bufs);
delegate IntPtr glNamedFramebufferParameteriDelegate(uint framebuffer, uint pname, int param);
delegate IntPtr glNamedFramebufferReadBufferDelegate(uint framebuffer, uint src);
delegate IntPtr glNamedFramebufferRenderbufferDelegate(uint framebuffer, uint attachment, uint renderbuffertarget, uint renderbuffer);
delegate IntPtr glNamedFramebufferTextureDelegate(uint framebuffer, uint attachment, uint texture, int level);
delegate IntPtr glNamedFramebufferTextureLayerDelegate(uint framebuffer, uint attachment, uint texture, int level, int layer);
delegate IntPtr glNamedRenderbufferStorageDelegate(uint renderbuffer, uint internalformat, int width, int height);
delegate IntPtr glNamedRenderbufferStorageMultisampleDelegate(uint renderbuffer, int samples, uint internalformat, int width, int height);
delegate IntPtr glNewListDelegate(uint list, uint mode);
delegate IntPtr glNormal3bDelegate(sbyte nx, sbyte ny, sbyte nz);
delegate IntPtr glNormal3bvDelegate(IntPtr v);
delegate IntPtr glNormal3dDelegate(double nx, double ny, double nz);
delegate IntPtr glNormal3dvDelegate(IntPtr v);
delegate IntPtr glNormal3fDelegate(float nx, float ny, float nz);
delegate IntPtr glNormal3fvDelegate(IntPtr v);
delegate IntPtr glNormal3iDelegate(int nx, int ny, int nz);
delegate IntPtr glNormal3ivDelegate(IntPtr v);
delegate IntPtr glNormal3sDelegate(short nx, short ny, short nz);
delegate IntPtr glNormal3svDelegate(IntPtr v);
delegate IntPtr glNormalP3uiDelegate(uint type, uint coords);
delegate IntPtr glNormalP3uivDelegate(uint type, IntPtr coords);
delegate IntPtr glNormalPointerDelegate(uint type, int stride, IntPtr pointer);
delegate IntPtr glObjectLabelDelegate(uint identifier, uint name, int length, IntPtr label);
delegate IntPtr glObjectPtrLabelDelegate(IntPtr ptr, int length, IntPtr label);
delegate IntPtr glOrthoDelegate(double left, double right, double bottom, double top, double zNear, double zFar);
delegate IntPtr glPassThroughDelegate(float token);
delegate IntPtr glPatchParameterfvDelegate(uint pname, IntPtr values);
delegate IntPtr glPatchParameteriDelegate(uint pname, int value);
delegate IntPtr glPauseTransformFeedbackDelegate();
delegate IntPtr glPixelMapfvDelegate(uint map, int mapsize, IntPtr values);
delegate IntPtr glPixelMapuivDelegate(uint map, int mapsize, IntPtr values);
delegate IntPtr glPixelMapusvDelegate(uint map, int mapsize, IntPtr values);
delegate IntPtr glPixelStorefDelegate(uint pname, float param);
delegate IntPtr glPixelStoreiDelegate(uint pname, int param);
delegate IntPtr glPixelTransferfDelegate(uint pname, float param);
delegate IntPtr glPixelTransferiDelegate(uint pname, int param);
delegate IntPtr glPixelZoomDelegate(float xfactor, float yfactor);
delegate IntPtr glPointParameterfDelegate(uint pname, float param);
delegate IntPtr glPointParameterfvDelegate(uint pname, IntPtr @params);
delegate IntPtr glPointParameteriDelegate(uint pname, int param);
delegate IntPtr glPointParameterivDelegate(uint pname, IntPtr @params);
delegate IntPtr glPointSizeDelegate(float size);
delegate IntPtr glPolygonModeDelegate(uint face, uint mode);
delegate IntPtr glPolygonOffsetDelegate(float factor, float units);
delegate IntPtr glPolygonOffsetClampDelegate(float factor, float units, float clamp);
delegate IntPtr glPolygonStippleDelegate(IntPtr mask);
delegate IntPtr glPopAttribDelegate();
delegate IntPtr glPopClientAttribDelegate();
delegate IntPtr glPopDebugGroupDelegate();
delegate IntPtr glPopMatrixDelegate();
delegate IntPtr glPopNameDelegate();
delegate IntPtr glPrimitiveRestartIndexDelegate(uint index);
delegate IntPtr glPrioritizeTexturesDelegate(int n, IntPtr textures, IntPtr priorities);
delegate IntPtr glProgramBinaryDelegate(uint program, uint binaryFormat, IntPtr binary, int length);
delegate IntPtr glProgramParameteriDelegate(uint program, uint pname, int value);
delegate IntPtr glProgramUniform1dDelegate(uint program, int location, double v0);
delegate IntPtr glProgramUniform1dvDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform1fDelegate(uint program, int location, float v0);
delegate IntPtr glProgramUniform1fvDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform1iDelegate(uint program, int location, int v0);
delegate IntPtr glProgramUniform1ivDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform1uiDelegate(uint program, int location, uint v0);
delegate IntPtr glProgramUniform1uivDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform2dDelegate(uint program, int location, double v0, double v1);
delegate IntPtr glProgramUniform2dvDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform2fDelegate(uint program, int location, float v0, float v1);
delegate IntPtr glProgramUniform2fvDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform2iDelegate(uint program, int location, int v0, int v1);
delegate IntPtr glProgramUniform2ivDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform2uiDelegate(uint program, int location, uint v0, uint v1);
delegate IntPtr glProgramUniform2uivDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform3dDelegate(uint program, int location, double v0, double v1, double v2);
delegate IntPtr glProgramUniform3dvDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform3fDelegate(uint program, int location, float v0, float v1, float v2);
delegate IntPtr glProgramUniform3fvDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform3iDelegate(uint program, int location, int v0, int v1, int v2);
delegate IntPtr glProgramUniform3ivDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform3uiDelegate(uint program, int location, uint v0, uint v1, uint v2);
delegate IntPtr glProgramUniform3uivDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform4dDelegate(uint program, int location, double v0, double v1, double v2, double v3);
delegate IntPtr glProgramUniform4dvDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform4fDelegate(uint program, int location, float v0, float v1, float v2, float v3);
delegate IntPtr glProgramUniform4fvDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform4iDelegate(uint program, int location, int v0, int v1, int v2, int v3);
delegate IntPtr glProgramUniform4ivDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniform4uiDelegate(uint program, int location, uint v0, uint v1, uint v2, uint v3);
delegate IntPtr glProgramUniform4uivDelegate(uint program, int location, int count, IntPtr value);
delegate IntPtr glProgramUniformMatrix2dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix2fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix2x3dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix2x3fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix2x4dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix2x4fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix3dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix3fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix3x2dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix3x2fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix3x4dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix3x4fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix4dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix4fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix4x2dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix4x2fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix4x3dvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProgramUniformMatrix4x3fvDelegate(uint program, int location, int count, byte transpose, IntPtr value);
delegate IntPtr glProvokingVertexDelegate(uint mode);
delegate IntPtr glPushAttribDelegate(uint mask);
delegate IntPtr glPushClientAttribDelegate(uint mask);
delegate IntPtr glPushDebugGroupDelegate(uint source, uint id, int length, IntPtr message);
delegate IntPtr glPushMatrixDelegate();
delegate IntPtr glPushNameDelegate(uint name);
delegate IntPtr glQueryCounterDelegate(uint id, uint target);
delegate IntPtr glRasterPos2dDelegate(double x, double y);
delegate IntPtr glRasterPos2dvDelegate(IntPtr v);
delegate IntPtr glRasterPos2fDelegate(float x, float y);
delegate IntPtr glRasterPos2fvDelegate(IntPtr v);
delegate IntPtr glRasterPos2iDelegate(int x, int y);
delegate IntPtr glRasterPos2ivDelegate(IntPtr v);
delegate IntPtr glRasterPos2sDelegate(short x, short y);
delegate IntPtr glRasterPos2svDelegate(IntPtr v);
delegate IntPtr glRasterPos3dDelegate(double x, double y, double z);
delegate IntPtr glRasterPos3dvDelegate(IntPtr v);
delegate IntPtr glRasterPos3fDelegate(float x, float y, float z);
delegate IntPtr glRasterPos3fvDelegate(IntPtr v);
delegate IntPtr glRasterPos3iDelegate(int x, int y, int z);
delegate IntPtr glRasterPos3ivDelegate(IntPtr v);
delegate IntPtr glRasterPos3sDelegate(short x, short y, short z);
delegate IntPtr glRasterPos3svDelegate(IntPtr v);
delegate IntPtr glRasterPos4dDelegate(double x, double y, double z, double w);
delegate IntPtr glRasterPos4dvDelegate(IntPtr v);
delegate IntPtr glRasterPos4fDelegate(float x, float y, float z, float w);
delegate IntPtr glRasterPos4fvDelegate(IntPtr v);
delegate IntPtr glRasterPos4iDelegate(int x, int y, int z, int w);
delegate IntPtr glRasterPos4ivDelegate(IntPtr v);
delegate IntPtr glRasterPos4sDelegate(short x, short y, short z, short w);
delegate IntPtr glRasterPos4svDelegate(IntPtr v);
delegate IntPtr glReadBufferDelegate(uint src);
delegate IntPtr glReadPixelsDelegate(int x, int y, int width, int height, uint format, uint type, IntPtr pixels);
delegate IntPtr glReadnPixelsDelegate(int x, int y, int width, int height, uint format, uint type, int bufSize, IntPtr data);
delegate IntPtr glRectdDelegate(double x1, double y1, double x2, double y2);
delegate IntPtr glRectdvDelegate(IntPtr v1, IntPtr v2);
delegate IntPtr glRectfDelegate(float x1, float y1, float x2, float y2);
delegate IntPtr glRectfvDelegate(IntPtr v1, IntPtr v2);
delegate IntPtr glRectiDelegate(int x1, int y1, int x2, int y2);
delegate IntPtr glRectivDelegate(IntPtr v1, IntPtr v2);
delegate IntPtr glRectsDelegate(short x1, short y1, short x2, short y2);
delegate IntPtr glRectsvDelegate(IntPtr v1, IntPtr v2);
delegate IntPtr glReleaseShaderCompilerDelegate();
delegate int glRenderModeDelegate(uint mode);
delegate IntPtr glRenderbufferStorageDelegate(uint target, uint internalformat, int width, int height);
delegate IntPtr glRenderbufferStorageMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height);
delegate IntPtr glResumeTransformFeedbackDelegate();
delegate IntPtr glRotatedDelegate(double angle, double x, double y, double z);
delegate IntPtr glRotatefDelegate(float angle, float x, float y, float z);
delegate IntPtr glSampleCoverageDelegate(float value, byte invert);
delegate IntPtr glSampleMaskiDelegate(uint maskNumber, uint mask);
delegate IntPtr glSamplerParameterIivDelegate(uint sampler, uint pname, IntPtr param);
delegate IntPtr glSamplerParameterIuivDelegate(uint sampler, uint pname, IntPtr param);
delegate IntPtr glSamplerParameterfDelegate(uint sampler, uint pname, float param);
delegate IntPtr glSamplerParameterfvDelegate(uint sampler, uint pname, IntPtr param);
delegate IntPtr glSamplerParameteriDelegate(uint sampler, uint pname, int param);
delegate IntPtr glSamplerParameterivDelegate(uint sampler, uint pname, IntPtr param);
delegate IntPtr glScaledDelegate(double x, double y, double z);
delegate IntPtr glScalefDelegate(float x, float y, float z);
delegate IntPtr glScissorDelegate(int x, int y, int width, int height);
delegate IntPtr glScissorArrayvDelegate(uint first, int count, IntPtr v);
delegate IntPtr glScissorIndexedDelegate(uint index, int left, int bottom, int width, int height);
delegate IntPtr glScissorIndexedvDelegate(uint index, IntPtr v);
delegate IntPtr glSecondaryColor3bDelegate(sbyte red, sbyte green, sbyte blue);
delegate IntPtr glSecondaryColor3bvDelegate(IntPtr v);
delegate IntPtr glSecondaryColor3dDelegate(double red, double green, double blue);
delegate IntPtr glSecondaryColor3dvDelegate(IntPtr v);
delegate IntPtr glSecondaryColor3fDelegate(float red, float green, float blue);
delegate IntPtr glSecondaryColor3fvDelegate(IntPtr v);
delegate IntPtr glSecondaryColor3iDelegate(int red, int green, int blue);
delegate IntPtr glSecondaryColor3ivDelegate(IntPtr v);
delegate IntPtr glSecondaryColor3sDelegate(short red, short green, short blue);
delegate IntPtr glSecondaryColor3svDelegate(IntPtr v);
delegate IntPtr glSecondaryColor3ubDelegate(byte red, byte green, byte blue);
delegate IntPtr glSecondaryColor3ubvDelegate(IntPtr v);
delegate IntPtr glSecondaryColor3uiDelegate(uint red, uint green, uint blue);
delegate IntPtr glSecondaryColor3uivDelegate(IntPtr v);
delegate IntPtr glSecondaryColor3usDelegate(ushort red, ushort green, ushort blue);
delegate IntPtr glSecondaryColor3usvDelegate(IntPtr v);
delegate IntPtr glSecondaryColorP3uiDelegate(uint type, uint color);
delegate IntPtr glSecondaryColorP3uivDelegate(uint type, IntPtr color);
delegate IntPtr glSecondaryColorPointerDelegate(int size, uint type, int stride, IntPtr pointer);
delegate IntPtr glSelectBufferDelegate(int size, IntPtr buffer);
delegate IntPtr glShadeModelDelegate(uint mode);
delegate IntPtr glShaderBinaryDelegate(int count, IntPtr shaders, uint binaryFormat, IntPtr binary, int length);
delegate IntPtr glShaderSourceDelegate(uint shader, int count, IntPtr @string, IntPtr length);
delegate IntPtr glShaderStorageBlockBindingDelegate(uint program, uint storageBlockIndex, uint storageBlockBinding);
delegate IntPtr glSpecializeShaderDelegate(uint shader, IntPtr pEntryPoint, uint numSpecializationConstants, IntPtr pConstantIndex, IntPtr pConstantValue);
delegate IntPtr glStencilFuncDelegate(uint func, int @ref, uint mask);
delegate IntPtr glStencilFuncSeparateDelegate(uint face, uint func, int @ref, uint mask);
delegate IntPtr glStencilMaskDelegate(uint mask);
delegate IntPtr glStencilMaskSeparateDelegate(uint face, uint mask);
delegate IntPtr glStencilOpDelegate(uint fail, uint zfail, uint zpass);
delegate IntPtr glStencilOpSeparateDelegate(uint face, uint sfail, uint dpfail, uint dppass);
delegate IntPtr glTexBufferDelegate(uint target, uint internalformat, uint buffer);
delegate IntPtr glTexBufferRangeDelegate(uint target, uint internalformat, uint buffer, IntPtr offset, IntPtr size);
delegate IntPtr glTexCoord1dDelegate(double s);
delegate IntPtr glTexCoord1dvDelegate(IntPtr v);
delegate IntPtr glTexCoord1fDelegate(float s);
delegate IntPtr glTexCoord1fvDelegate(IntPtr v);
delegate IntPtr glTexCoord1iDelegate(int s);
delegate IntPtr glTexCoord1ivDelegate(IntPtr v);
delegate IntPtr glTexCoord1sDelegate(short s);
delegate IntPtr glTexCoord1svDelegate(IntPtr v);
delegate IntPtr glTexCoord2dDelegate(double s, double t);
delegate IntPtr glTexCoord2dvDelegate(IntPtr v);
delegate IntPtr glTexCoord2fDelegate(float s, float t);
delegate IntPtr glTexCoord2fvDelegate(IntPtr v);
delegate IntPtr glTexCoord2iDelegate(int s, int t);
delegate IntPtr glTexCoord2ivDelegate(IntPtr v);
delegate IntPtr glTexCoord2sDelegate(short s, short t);
delegate IntPtr glTexCoord2svDelegate(IntPtr v);
delegate IntPtr glTexCoord3dDelegate(double s, double t, double r);
delegate IntPtr glTexCoord3dvDelegate(IntPtr v);
delegate IntPtr glTexCoord3fDelegate(float s, float t, float r);
delegate IntPtr glTexCoord3fvDelegate(IntPtr v);
delegate IntPtr glTexCoord3iDelegate(int s, int t, int r);
delegate IntPtr glTexCoord3ivDelegate(IntPtr v);
delegate IntPtr glTexCoord3sDelegate(short s, short t, short r);
delegate IntPtr glTexCoord3svDelegate(IntPtr v);
delegate IntPtr glTexCoord4dDelegate(double s, double t, double r, double q);
delegate IntPtr glTexCoord4dvDelegate(IntPtr v);
delegate IntPtr glTexCoord4fDelegate(float s, float t, float r, float q);
delegate IntPtr glTexCoord4fvDelegate(IntPtr v);
delegate IntPtr glTexCoord4iDelegate(int s, int t, int r, int q);
delegate IntPtr glTexCoord4ivDelegate(IntPtr v);
delegate IntPtr glTexCoord4sDelegate(short s, short t, short r, short q);
delegate IntPtr glTexCoord4svDelegate(IntPtr v);
delegate IntPtr glTexCoordP1uiDelegate(uint type, uint coords);
delegate IntPtr glTexCoordP1uivDelegate(uint type, IntPtr coords);
delegate IntPtr glTexCoordP2uiDelegate(uint type, uint coords);
delegate IntPtr glTexCoordP2uivDelegate(uint type, IntPtr coords);
delegate IntPtr glTexCoordP3uiDelegate(uint type, uint coords);
delegate IntPtr glTexCoordP3uivDelegate(uint type, IntPtr coords);
delegate IntPtr glTexCoordP4uiDelegate(uint type, uint coords);
delegate IntPtr glTexCoordP4uivDelegate(uint type, IntPtr coords);
delegate IntPtr glTexCoordPointerDelegate(int size, uint type, int stride, IntPtr pointer);
delegate IntPtr glTexEnvfDelegate(uint target, uint pname, float param);
delegate IntPtr glTexEnvfvDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glTexEnviDelegate(uint target, uint pname, int param);
delegate IntPtr glTexEnvivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glTexGendDelegate(uint coord, uint pname, double param);
delegate IntPtr glTexGendvDelegate(uint coord, uint pname, IntPtr @params);
delegate IntPtr glTexGenfDelegate(uint coord, uint pname, float param);
delegate IntPtr glTexGenfvDelegate(uint coord, uint pname, IntPtr @params);
delegate IntPtr glTexGeniDelegate(uint coord, uint pname, int param);
delegate IntPtr glTexGenivDelegate(uint coord, uint pname, IntPtr @params);
delegate IntPtr glTexImage1DDelegate(uint target, int level, int internalformat, int width, int border, uint format, uint type, IntPtr pixels);
delegate IntPtr glTexImage2DDelegate(uint target, int level, int internalformat, int width, int height, int border, uint format, uint type, IntPtr pixels);
delegate IntPtr glTexImage2DMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height, byte fixedsamplelocations);
delegate IntPtr glTexImage3DDelegate(uint target, int level, int internalformat, int width, int height, int depth, int border, uint format, uint type, IntPtr pixels);
delegate IntPtr glTexImage3DMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height, int depth, byte fixedsamplelocations);
delegate IntPtr glTexParameterIivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glTexParameterIuivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glTexParameterfDelegate(uint target, uint pname, float param);
delegate IntPtr glTexParameterfvDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glTexParameteriDelegate(uint target, uint pname, int param);
delegate IntPtr glTexParameterivDelegate(uint target, uint pname, IntPtr @params);
delegate IntPtr glTexStorage1DDelegate(uint target, int levels, uint internalformat, int width);
delegate IntPtr glTexStorage2DDelegate(uint target, int levels, uint internalformat, int width, int height);
delegate IntPtr glTexStorage2DMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height, byte fixedsamplelocations);
delegate IntPtr glTexStorage3DDelegate(uint target, int levels, uint internalformat, int width, int height, int depth);
delegate IntPtr glTexStorage3DMultisampleDelegate(uint target, int samples, uint internalformat, int width, int height, int depth, byte fixedsamplelocations);
delegate IntPtr glTexSubImage1DDelegate(uint target, int level, int xoffset, int width, uint format, uint type, IntPtr pixels);
delegate IntPtr glTexSubImage2DDelegate(uint target, int level, int xoffset, int yoffset, int width, int height, uint format, uint type, IntPtr pixels);
delegate IntPtr glTexSubImage3DDelegate(uint target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, IntPtr pixels);
delegate IntPtr glTextureBarrierDelegate();
delegate IntPtr glTextureBufferDelegate(uint texture, uint internalformat, uint buffer);
delegate IntPtr glTextureBufferRangeDelegate(uint texture, uint internalformat, uint buffer, IntPtr offset, IntPtr size);
delegate IntPtr glTextureParameterIivDelegate(uint texture, uint pname, IntPtr @params);
delegate IntPtr glTextureParameterIuivDelegate(uint texture, uint pname, IntPtr @params);
delegate IntPtr glTextureParameterfDelegate(uint texture, uint pname, float param);
delegate IntPtr glTextureParameterfvDelegate(uint texture, uint pname, IntPtr param);
delegate IntPtr glTextureParameteriDelegate(uint texture, uint pname, int param);
delegate IntPtr glTextureParameterivDelegate(uint texture, uint pname, IntPtr param);
delegate IntPtr glTextureStorage1DDelegate(uint texture, int levels, uint internalformat, int width);
delegate IntPtr glTextureStorage2DDelegate(uint texture, int levels, uint internalformat, int width, int height);
delegate IntPtr glTextureStorage2DMultisampleDelegate(uint texture, int samples, uint internalformat, int width, int height, byte fixedsamplelocations);
delegate IntPtr glTextureStorage3DDelegate(uint texture, int levels, uint internalformat, int width, int height, int depth);
delegate IntPtr glTextureStorage3DMultisampleDelegate(uint texture, int samples, uint internalformat, int width, int height, int depth, byte fixedsamplelocations);
delegate IntPtr glTextureSubImage1DDelegate(uint texture, int level, int xoffset, int width, uint format, uint type, IntPtr pixels);
delegate IntPtr glTextureSubImage2DDelegate(uint texture, int level, int xoffset, int yoffset, int width, int height, uint format, uint type, IntPtr pixels);
delegate IntPtr glTextureSubImage3DDelegate(uint texture, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, uint format, uint type, IntPtr pixels);
delegate IntPtr glTextureViewDelegate(uint texture, uint target, uint origtexture, uint internalformat, uint minlevel, uint numlevels, uint minlayer, uint numlayers);
delegate IntPtr glTransformFeedbackBufferBaseDelegate(uint xfb, uint index, uint buffer);
delegate IntPtr glTransformFeedbackBufferRangeDelegate(uint xfb, uint index, uint buffer, IntPtr offset, IntPtr size);
delegate IntPtr glTransformFeedbackVaryingsDelegate(uint program, int count, IntPtr varyings, uint bufferMode);
delegate IntPtr glTranslatedDelegate(double x, double y, double z);
delegate IntPtr glTranslatefDelegate(float x, float y, float z);
delegate IntPtr glUniform1dDelegate(int location, double x);
delegate IntPtr glUniform1dvDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform1fDelegate(int location, float v0);
delegate IntPtr glUniform1fvDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform1iDelegate(int location, int v0);
delegate IntPtr glUniform1ivDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform1uiDelegate(int location, uint v0);
delegate IntPtr glUniform1uivDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform2dDelegate(int location, double x, double y);
delegate IntPtr glUniform2dvDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform2fDelegate(int location, float v0, float v1);
delegate IntPtr glUniform2fvDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform2iDelegate(int location, int v0, int v1);
delegate IntPtr glUniform2ivDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform2uiDelegate(int location, uint v0, uint v1);
delegate IntPtr glUniform2uivDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform3dDelegate(int location, double x, double y, double z);
delegate IntPtr glUniform3dvDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform3fDelegate(int location, float v0, float v1, float v2);
delegate IntPtr glUniform3fvDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform3iDelegate(int location, int v0, int v1, int v2);
delegate IntPtr glUniform3ivDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform3uiDelegate(int location, uint v0, uint v1, uint v2);
delegate IntPtr glUniform3uivDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform4dDelegate(int location, double x, double y, double z, double w);
delegate IntPtr glUniform4dvDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform4fDelegate(int location, float v0, float v1, float v2, float v3);
delegate IntPtr glUniform4fvDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform4iDelegate(int location, int v0, int v1, int v2, int v3);
delegate IntPtr glUniform4ivDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniform4uiDelegate(int location, uint v0, uint v1, uint v2, uint v3);
delegate IntPtr glUniform4uivDelegate(int location, int count, IntPtr value);
delegate IntPtr glUniformBlockBindingDelegate(uint program, uint uniformBlockIndex, uint uniformBlockBinding);
delegate IntPtr glUniformMatrix2dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix2fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix2x3dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix2x3fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix2x4dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix2x4fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix3dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix3fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix3x2dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix3x2fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix3x4dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix3x4fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix4dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix4fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix4x2dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix4x2fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix4x3dvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformMatrix4x3fvDelegate(int location, int count, byte transpose, IntPtr value);
delegate IntPtr glUniformSubroutinesuivDelegate(uint shadertype, int count, IntPtr indices);
delegate byte glUnmapBufferDelegate(uint target);
delegate byte glUnmapNamedBufferDelegate(uint buffer);
delegate IntPtr glUseProgramDelegate(uint program);
delegate IntPtr glUseProgramStagesDelegate(uint pipeline, uint stages, uint program);
delegate IntPtr glValidateProgramDelegate(uint program);
delegate IntPtr glValidateProgramPipelineDelegate(uint pipeline);
delegate IntPtr glVertex2dDelegate(double x, double y);
delegate IntPtr glVertex2dvDelegate(IntPtr v);
delegate IntPtr glVertex2fDelegate(float x, float y);
delegate IntPtr glVertex2fvDelegate(IntPtr v);
delegate IntPtr glVertex2iDelegate(int x, int y);
delegate IntPtr glVertex2ivDelegate(IntPtr v);
delegate IntPtr glVertex2sDelegate(short x, short y);
delegate IntPtr glVertex2svDelegate(IntPtr v);
delegate IntPtr glVertex3dDelegate(double x, double y, double z);
delegate IntPtr glVertex3dvDelegate(IntPtr v);
delegate IntPtr glVertex3fDelegate(float x, float y, float z);
delegate IntPtr glVertex3fvDelegate(IntPtr v);
delegate IntPtr glVertex3iDelegate(int x, int y, int z);
delegate IntPtr glVertex3ivDelegate(IntPtr v);
delegate IntPtr glVertex3sDelegate(short x, short y, short z);
delegate IntPtr glVertex3svDelegate(IntPtr v);
delegate IntPtr glVertex4dDelegate(double x, double y, double z, double w);
delegate IntPtr glVertex4dvDelegate(IntPtr v);
delegate IntPtr glVertex4fDelegate(float x, float y, float z, float w);
delegate IntPtr glVertex4fvDelegate(IntPtr v);
delegate IntPtr glVertex4iDelegate(int x, int y, int z, int w);
delegate IntPtr glVertex4ivDelegate(IntPtr v);
delegate IntPtr glVertex4sDelegate(short x, short y, short z, short w);
delegate IntPtr glVertex4svDelegate(IntPtr v);
delegate IntPtr glVertexArrayAttribBindingDelegate(uint vaobj, uint attribindex, uint bindingindex);
delegate IntPtr glVertexArrayAttribFormatDelegate(uint vaobj, uint attribindex, int size, uint type, byte normalized, uint relativeoffset);
delegate IntPtr glVertexArrayAttribIFormatDelegate(uint vaobj, uint attribindex, int size, uint type, uint relativeoffset);
delegate IntPtr glVertexArrayAttribLFormatDelegate(uint vaobj, uint attribindex, int size, uint type, uint relativeoffset);
delegate IntPtr glVertexArrayBindingDivisorDelegate(uint vaobj, uint bindingindex, uint divisor);
delegate IntPtr glVertexArrayElementBufferDelegate(uint vaobj, uint buffer);
delegate IntPtr glVertexArrayVertexBufferDelegate(uint vaobj, uint bindingindex, uint buffer, IntPtr offset, int stride);
delegate IntPtr glVertexArrayVertexBuffersDelegate(uint vaobj, uint first, int count, IntPtr buffers, IntPtr offsets, IntPtr strides);
delegate IntPtr glVertexAttrib1dDelegate(uint index, double x);
delegate IntPtr glVertexAttrib1dvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib1fDelegate(uint index, float x);
delegate IntPtr glVertexAttrib1fvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib1sDelegate(uint index, short x);
delegate IntPtr glVertexAttrib1svDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib2dDelegate(uint index, double x, double y);
delegate IntPtr glVertexAttrib2dvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib2fDelegate(uint index, float x, float y);
delegate IntPtr glVertexAttrib2fvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib2sDelegate(uint index, short x, short y);
delegate IntPtr glVertexAttrib2svDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib3dDelegate(uint index, double x, double y, double z);
delegate IntPtr glVertexAttrib3dvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib3fDelegate(uint index, float x, float y, float z);
delegate IntPtr glVertexAttrib3fvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib3sDelegate(uint index, short x, short y, short z);
delegate IntPtr glVertexAttrib3svDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4NbvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4NivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4NsvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4NubDelegate(uint index, byte x, byte y, byte z, byte w);
delegate IntPtr glVertexAttrib4NubvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4NuivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4NusvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4bvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4dDelegate(uint index, double x, double y, double z, double w);
delegate IntPtr glVertexAttrib4dvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4fDelegate(uint index, float x, float y, float z, float w);
delegate IntPtr glVertexAttrib4fvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4ivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4sDelegate(uint index, short x, short y, short z, short w);
delegate IntPtr glVertexAttrib4svDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4ubvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4uivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttrib4usvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribBindingDelegate(uint attribindex, uint bindingindex);
delegate IntPtr glVertexAttribDivisorDelegate(uint index, uint divisor);
delegate IntPtr glVertexAttribFormatDelegate(uint attribindex, int size, uint type, byte normalized, uint relativeoffset);
delegate IntPtr glVertexAttribI1iDelegate(uint index, int x);
delegate IntPtr glVertexAttribI1ivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI1uiDelegate(uint index, uint x);
delegate IntPtr glVertexAttribI1uivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI2iDelegate(uint index, int x, int y);
delegate IntPtr glVertexAttribI2ivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI2uiDelegate(uint index, uint x, uint y);
delegate IntPtr glVertexAttribI2uivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI3iDelegate(uint index, int x, int y, int z);
delegate IntPtr glVertexAttribI3ivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI3uiDelegate(uint index, uint x, uint y, uint z);
delegate IntPtr glVertexAttribI3uivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI4bvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI4iDelegate(uint index, int x, int y, int z, int w);
delegate IntPtr glVertexAttribI4ivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI4svDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI4ubvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI4uiDelegate(uint index, uint x, uint y, uint z, uint w);
delegate IntPtr glVertexAttribI4uivDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribI4usvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribIFormatDelegate(uint attribindex, int size, uint type, uint relativeoffset);
delegate IntPtr glVertexAttribIPointerDelegate(uint index, int size, uint type, int stride, IntPtr pointer);
delegate IntPtr glVertexAttribL1dDelegate(uint index, double x);
delegate IntPtr glVertexAttribL1dvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribL2dDelegate(uint index, double x, double y);
delegate IntPtr glVertexAttribL2dvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribL3dDelegate(uint index, double x, double y, double z);
delegate IntPtr glVertexAttribL3dvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribL4dDelegate(uint index, double x, double y, double z, double w);
delegate IntPtr glVertexAttribL4dvDelegate(uint index, IntPtr v);
delegate IntPtr glVertexAttribLFormatDelegate(uint attribindex, int size, uint type, uint relativeoffset);
delegate IntPtr glVertexAttribLPointerDelegate(uint index, int size, uint type, int stride, IntPtr pointer);
delegate IntPtr glVertexAttribP1uiDelegate(uint index, uint type, byte normalized, uint value);
delegate IntPtr glVertexAttribP1uivDelegate(uint index, uint type, byte normalized, IntPtr value);
delegate IntPtr glVertexAttribP2uiDelegate(uint index, uint type, byte normalized, uint value);
delegate IntPtr glVertexAttribP2uivDelegate(uint index, uint type, byte normalized, IntPtr value);
delegate IntPtr glVertexAttribP3uiDelegate(uint index, uint type, byte normalized, uint value);
delegate IntPtr glVertexAttribP3uivDelegate(uint index, uint type, byte normalized, IntPtr value);
delegate IntPtr glVertexAttribP4uiDelegate(uint index, uint type, byte normalized, uint value);
delegate IntPtr glVertexAttribP4uivDelegate(uint index, uint type, byte normalized, IntPtr value);
delegate IntPtr glVertexAttribPointerDelegate(uint index, int size, uint type, byte normalized, int stride, IntPtr pointer);
delegate IntPtr glVertexBindingDivisorDelegate(uint bindingindex, uint divisor);
delegate IntPtr glVertexP2uiDelegate(uint type, uint value);
delegate IntPtr glVertexP2uivDelegate(uint type, IntPtr value);
delegate IntPtr glVertexP3uiDelegate(uint type, uint value);
delegate IntPtr glVertexP3uivDelegate(uint type, IntPtr value);
delegate IntPtr glVertexP4uiDelegate(uint type, uint value);
delegate IntPtr glVertexP4uivDelegate(uint type, IntPtr value);
delegate IntPtr glVertexPointerDelegate(int size, uint type, int stride, IntPtr pointer);
delegate IntPtr glViewportDelegate(int x, int y, int width, int height);
delegate IntPtr glViewportArrayvDelegate(uint first, int count, IntPtr v);
delegate IntPtr glViewportIndexedfDelegate(uint index, float x, float y, float w, float h);
delegate IntPtr glViewportIndexedfvDelegate(uint index, IntPtr v);
delegate IntPtr glWindowPos2dDelegate(double x, double y);
delegate IntPtr glWindowPos2dvDelegate(IntPtr v);
delegate IntPtr glWindowPos2fDelegate(float x, float y);
delegate IntPtr glWindowPos2fvDelegate(IntPtr v);
delegate IntPtr glWindowPos2iDelegate(int x, int y);
delegate IntPtr glWindowPos2ivDelegate(IntPtr v);
delegate IntPtr glWindowPos2sDelegate(short x, short y);
delegate IntPtr glWindowPos2svDelegate(IntPtr v);
delegate IntPtr glWindowPos3dDelegate(double x, double y, double z);
delegate IntPtr glWindowPos3dvDelegate(IntPtr v);
delegate IntPtr glWindowPos3fDelegate(float x, float y, float z);
delegate IntPtr glWindowPos3fvDelegate(IntPtr v);
delegate IntPtr glWindowPos3iDelegate(int x, int y, int z);
delegate IntPtr glWindowPos3ivDelegate(IntPtr v);
delegate IntPtr glWindowPos3sDelegate(short x, short y, short z);
delegate IntPtr glWindowPos3svDelegate(IntPtr v);
static class GL{
public const uint GL_CURRENT_BIT = 0x00000001;
public const uint GL_POINT_BIT = 0x00000002;
public const uint GL_LINE_BIT = 0x00000004;
public const uint GL_POLYGON_BIT = 0x00000008;
public const uint GL_POLYGON_STIPPLE_BIT = 0x00000010;
public const uint GL_PIXEL_MODE_BIT = 0x00000020;
public const uint GL_LIGHTING_BIT = 0x00000040;
public const uint GL_FOG_BIT = 0x00000080;
public const uint GL_DEPTH_BUFFER_BIT = 0x00000100;
public const uint GL_ACCUM_BUFFER_BIT = 0x00000200;
public const uint GL_STENCIL_BUFFER_BIT = 0x00000400;
public const uint GL_VIEWPORT_BIT = 0x00000800;
public const uint GL_TRANSFORM_BIT = 0x00001000;
public const uint GL_ENABLE_BIT = 0x00002000;
public const uint GL_COLOR_BUFFER_BIT = 0x00004000;
public const uint GL_HINT_BIT = 0x00008000;
public const uint GL_EVAL_BIT = 0x00010000;
public const uint GL_LIST_BIT = 0x00020000;
public const uint GL_TEXTURE_BIT = 0x00040000;
public const uint GL_SCISSOR_BIT = 0x00080000;
public const uint GL_MULTISAMPLE_BIT = 0x20000000;
public const uint GL_ALL_ATTRIB_BITS = 0xFFFFFFFF;
public const uint GL_DYNAMIC_STORAGE_BIT = 0x0100;
public const uint GL_CLIENT_STORAGE_BIT = 0x0200;
public const uint GL_CLIENT_PIXEL_STORE_BIT = 0x00000001;
public const uint GL_CLIENT_VERTEX_ARRAY_BIT = 0x00000002;
public const uint GL_CLIENT_ALL_ATTRIB_BITS = 0xFFFFFFFF;
public const uint GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x00000001;
public const uint GL_CONTEXT_FLAG_DEBUG_BIT = 0x00000002;
public const uint GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT = 0x00000004;
public const uint GL_CONTEXT_FLAG_NO_ERROR_BIT = 0x00000008;
public const uint GL_CONTEXT_CORE_PROFILE_BIT = 0x00000001;
public const uint GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x00000002;
public const uint GL_MAP_READ_BIT = 0x0001;
public const uint GL_MAP_WRITE_BIT = 0x0002;
public const uint GL_MAP_INVALIDATE_RANGE_BIT = 0x0004;
public const uint GL_MAP_INVALIDATE_BUFFER_BIT = 0x0008;
public const uint GL_MAP_FLUSH_EXPLICIT_BIT = 0x0010;
public const uint GL_MAP_UNSYNCHRONIZED_BIT = 0x0020;
public const uint GL_MAP_PERSISTENT_BIT = 0x0040;
public const uint GL_MAP_COHERENT_BIT = 0x0080;
public const uint GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT = 0x00000001;
public const uint GL_ELEMENT_ARRAY_BARRIER_BIT = 0x00000002;
public const uint GL_UNIFORM_BARRIER_BIT = 0x00000004;
public const uint GL_TEXTURE_FETCH_BARRIER_BIT = 0x00000008;
public const uint GL_SHADER_IMAGE_ACCESS_BARRIER_BIT = 0x00000020;
public const uint GL_COMMAND_BARRIER_BIT = 0x00000040;
public const uint GL_PIXEL_BUFFER_BARRIER_BIT = 0x00000080;
public const uint GL_TEXTURE_UPDATE_BARRIER_BIT = 0x00000100;
public const uint GL_BUFFER_UPDATE_BARRIER_BIT = 0x00000200;
public const uint GL_FRAMEBUFFER_BARRIER_BIT = 0x00000400;
public const uint GL_TRANSFORM_FEEDBACK_BARRIER_BIT = 0x00000800;
public const uint GL_ATOMIC_COUNTER_BARRIER_BIT = 0x00001000;
public const uint GL_SHADER_STORAGE_BARRIER_BIT = 0x00002000;
public const uint GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT = 0x00004000;
public const uint GL_QUERY_BUFFER_BARRIER_BIT = 0x00008000;
public const uint GL_ALL_BARRIER_BITS = 0xFFFFFFFF;
public const uint GL_SYNC_FLUSH_COMMANDS_BIT = 0x00000001;
public const uint GL_VERTEX_SHADER_BIT = 0x00000001;
public const uint GL_FRAGMENT_SHADER_BIT = 0x00000002;
public const uint GL_GEOMETRY_SHADER_BIT = 0x00000004;
public const uint GL_TESS_CONTROL_SHADER_BIT = 0x00000008;
public const uint GL_TESS_EVALUATION_SHADER_BIT = 0x00000010;
public const uint GL_COMPUTE_SHADER_BIT = 0x00000020;
public const uint GL_ALL_SHADER_BITS = 0xFFFFFFFF;
public const byte GL_FALSE = 0;
public const uint GL_NO_ERROR = 0;
public const uint GL_ZERO = 0;
public const uint GL_NONE = 0;
public const byte GL_TRUE = 1;
public const uint GL_ONE = 1;
public const uint GL_INVALID_INDEX = 0xFFFFFFFF;
public const uint GL_POINTS = 0x0000;
public const uint GL_LINES = 0x0001;
public const uint GL_LINE_LOOP = 0x0002;
public const uint GL_LINE_STRIP = 0x0003;
public const uint GL_TRIANGLES = 0x0004;
public const uint GL_TRIANGLE_STRIP = 0x0005;
public const uint GL_TRIANGLE_FAN = 0x0006;
public const uint GL_QUADS = 0x0007;
public const uint GL_QUAD_STRIP = 0x0008;
public const uint GL_POLYGON = 0x0009;
public const uint GL_LINES_ADJACENCY = 0x000A;
public const uint GL_LINE_STRIP_ADJACENCY = 0x000B;
public const uint GL_TRIANGLES_ADJACENCY = 0x000C;
public const uint GL_TRIANGLE_STRIP_ADJACENCY = 0x000D;
public const uint GL_PATCHES = 0x000E;
public const uint GL_ACCUM = 0x0100;
public const uint GL_LOAD = 0x0101;
public const uint GL_RETURN = 0x0102;
public const uint GL_MULT = 0x0103;
public const uint GL_ADD = 0x0104;
public const uint GL_NEVER = 0x0200;
public const uint GL_LESS = 0x0201;
public const uint GL_EQUAL = 0x0202;
public const uint GL_LEQUAL = 0x0203;
public const uint GL_GREATER = 0x0204;
public const uint GL_NOTEQUAL = 0x0205;
public const uint GL_GEQUAL = 0x0206;
public const uint GL_ALWAYS = 0x0207;
public const uint GL_SRC_COLOR = 0x0300;
public const uint GL_ONE_MINUS_SRC_COLOR = 0x0301;
public const uint GL_SRC_ALPHA = 0x0302;
public const uint GL_ONE_MINUS_SRC_ALPHA = 0x0303;
public const uint GL_DST_ALPHA = 0x0304;
public const uint GL_ONE_MINUS_DST_ALPHA = 0x0305;
public const uint GL_DST_COLOR = 0x0306;
public const uint GL_ONE_MINUS_DST_COLOR = 0x0307;
public const uint GL_SRC_ALPHA_SATURATE = 0x0308;
public const uint GL_FRONT_LEFT = 0x0400;
public const uint GL_FRONT_RIGHT = 0x0401;
public const uint GL_BACK_LEFT = 0x0402;
public const uint GL_BACK_RIGHT = 0x0403;
public const uint GL_FRONT = 0x0404;
public const uint GL_BACK = 0x0405;
public const uint GL_LEFT = 0x0406;
public const uint GL_RIGHT = 0x0407;
public const uint GL_FRONT_AND_BACK = 0x0408;
public const uint GL_AUX0 = 0x0409;
public const uint GL_AUX1 = 0x040A;
public const uint GL_AUX2 = 0x040B;
public const uint GL_AUX3 = 0x040C;
public const uint GL_INVALID_ENUM = 0x0500;
public const uint GL_INVALID_VALUE = 0x0501;
public const uint GL_INVALID_OPERATION = 0x0502;
public const uint GL_STACK_OVERFLOW = 0x0503;
public const uint GL_STACK_UNDERFLOW = 0x0504;
public const uint GL_OUT_OF_MEMORY = 0x0505;
public const uint GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506;
public const uint GL_CONTEXT_LOST = 0x0507;
public const uint GL_2D = 0x0600;
public const uint GL_3D = 0x0601;
public const uint GL_3D_COLOR = 0x0602;
public const uint GL_3D_COLOR_TEXTURE = 0x0603;
public const uint GL_4D_COLOR_TEXTURE = 0x0604;
public const uint GL_PASS_THROUGH_TOKEN = 0x0700;
public const uint GL_POINT_TOKEN = 0x0701;
public const uint GL_LINE_TOKEN = 0x0702;
public const uint GL_POLYGON_TOKEN = 0x0703;
public const uint GL_BITMAP_TOKEN = 0x0704;
public const uint GL_DRAW_PIXEL_TOKEN = 0x0705;
public const uint GL_COPY_PIXEL_TOKEN = 0x0706;
public const uint GL_LINE_RESET_TOKEN = 0x0707;
public const uint GL_EXP = 0x0800;
public const uint GL_EXP2 = 0x0801;
public const uint GL_CW = 0x0900;
public const uint GL_CCW = 0x0901;
public const uint GL_COEFF = 0x0A00;
public const uint GL_ORDER = 0x0A01;
public const uint GL_DOMAIN = 0x0A02;
public const uint GL_CURRENT_COLOR = 0x0B00;
public const uint GL_CURRENT_INDEX = 0x0B01;
public const uint GL_CURRENT_NORMAL = 0x0B02;
public const uint GL_CURRENT_TEXTURE_COORDS = 0x0B03;
public const uint GL_CURRENT_RASTER_COLOR = 0x0B04;
public const uint GL_CURRENT_RASTER_INDEX = 0x0B05;
public const uint GL_CURRENT_RASTER_TEXTURE_COORDS = 0x0B06;
public const uint GL_CURRENT_RASTER_POSITION = 0x0B07;
public const uint GL_CURRENT_RASTER_POSITION_VALID = 0x0B08;
public const uint GL_CURRENT_RASTER_DISTANCE = 0x0B09;
public const uint GL_POINT_SMOOTH = 0x0B10;
public const uint GL_POINT_SIZE = 0x0B11;
public const uint GL_POINT_SIZE_RANGE = 0x0B12;
public const uint GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12;
public const uint GL_POINT_SIZE_GRANULARITY = 0x0B13;
public const uint GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13;
public const uint GL_LINE_SMOOTH = 0x0B20;
public const uint GL_LINE_WIDTH = 0x0B21;
public const uint GL_LINE_WIDTH_RANGE = 0x0B22;
public const uint GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22;
public const uint GL_LINE_WIDTH_GRANULARITY = 0x0B23;
public const uint GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23;
public const uint GL_LINE_STIPPLE = 0x0B24;
public const uint GL_LINE_STIPPLE_PATTERN = 0x0B25;
public const uint GL_LINE_STIPPLE_REPEAT = 0x0B26;
public const uint GL_LIST_MODE = 0x0B30;
public const uint GL_MAX_LIST_NESTING = 0x0B31;
public const uint GL_LIST_BASE = 0x0B32;
public const uint GL_LIST_INDEX = 0x0B33;
public const uint GL_POLYGON_MODE = 0x0B40;
public const uint GL_POLYGON_SMOOTH = 0x0B41;
public const uint GL_POLYGON_STIPPLE = 0x0B42;
public const uint GL_EDGE_FLAG = 0x0B43;
public const uint GL_CULL_FACE = 0x0B44;
public const uint GL_CULL_FACE_MODE = 0x0B45;
public const uint GL_FRONT_FACE = 0x0B46;
public const uint GL_LIGHTING = 0x0B50;
public const uint GL_LIGHT_MODEL_LOCAL_VIEWER = 0x0B51;
public const uint GL_LIGHT_MODEL_TWO_SIDE = 0x0B52;
public const uint GL_LIGHT_MODEL_AMBIENT = 0x0B53;
public const uint GL_SHADE_MODEL = 0x0B54;
public const uint GL_COLOR_MATERIAL_FACE = 0x0B55;
public const uint GL_COLOR_MATERIAL_PARAMETER = 0x0B56;
public const uint GL_COLOR_MATERIAL = 0x0B57;
public const uint GL_FOG = 0x0B60;
public const uint GL_FOG_INDEX = 0x0B61;
public const uint GL_FOG_DENSITY = 0x0B62;
public const uint GL_FOG_START = 0x0B63;
public const uint GL_FOG_END = 0x0B64;
public const uint GL_FOG_MODE = 0x0B65;
public const uint GL_FOG_COLOR = 0x0B66;
public const uint GL_DEPTH_RANGE = 0x0B70;
public const uint GL_DEPTH_TEST = 0x0B71;
public const uint GL_DEPTH_WRITEMASK = 0x0B72;
public const uint GL_DEPTH_CLEAR_VALUE = 0x0B73;
public const uint GL_DEPTH_FUNC = 0x0B74;
public const uint GL_ACCUM_CLEAR_VALUE = 0x0B80;
public const uint GL_STENCIL_TEST = 0x0B90;
public const uint GL_STENCIL_CLEAR_VALUE = 0x0B91;
public const uint GL_STENCIL_FUNC = 0x0B92;
public const uint GL_STENCIL_VALUE_MASK = 0x0B93;
public const uint GL_STENCIL_FAIL = 0x0B94;
public const uint GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95;
public const uint GL_STENCIL_PASS_DEPTH_PASS = 0x0B96;
public const uint GL_STENCIL_REF = 0x0B97;
public const uint GL_STENCIL_WRITEMASK = 0x0B98;
public const uint GL_MATRIX_MODE = 0x0BA0;
public const uint GL_NORMALIZE = 0x0BA1;
public const uint GL_VIEWPORT = 0x0BA2;
public const uint GL_MODELVIEW_STACK_DEPTH = 0x0BA3;
public const uint GL_PROJECTION_STACK_DEPTH = 0x0BA4;
public const uint GL_TEXTURE_STACK_DEPTH = 0x0BA5;
public const uint GL_MODELVIEW_MATRIX = 0x0BA6;
public const uint GL_PROJECTION_MATRIX = 0x0BA7;
public const uint GL_TEXTURE_MATRIX = 0x0BA8;
public const uint GL_ATTRIB_STACK_DEPTH = 0x0BB0;
public const uint GL_CLIENT_ATTRIB_STACK_DEPTH = 0x0BB1;
public const uint GL_ALPHA_TEST = 0x0BC0;
public const uint GL_ALPHA_TEST_FUNC = 0x0BC1;
public const uint GL_ALPHA_TEST_REF = 0x0BC2;
public const uint GL_DITHER = 0x0BD0;
public const uint GL_BLEND_DST = 0x0BE0;
public const uint GL_BLEND_SRC = 0x0BE1;
public const uint GL_BLEND = 0x0BE2;
public const uint GL_LOGIC_OP_MODE = 0x0BF0;
public const uint GL_INDEX_LOGIC_OP = 0x0BF1;
public const uint GL_LOGIC_OP = 0x0BF1;
public const uint GL_COLOR_LOGIC_OP = 0x0BF2;
public const uint GL_AUX_BUFFERS = 0x0C00;
public const uint GL_DRAW_BUFFER = 0x0C01;
public const uint GL_READ_BUFFER = 0x0C02;
public const uint GL_SCISSOR_BOX = 0x0C10;
public const uint GL_SCISSOR_TEST = 0x0C11;
public const uint GL_INDEX_CLEAR_VALUE = 0x0C20;
public const uint GL_INDEX_WRITEMASK = 0x0C21;
public const uint GL_COLOR_CLEAR_VALUE = 0x0C22;
public const uint GL_COLOR_WRITEMASK = 0x0C23;
public const uint GL_INDEX_MODE = 0x0C30;
public const uint GL_RGBA_MODE = 0x0C31;
public const uint GL_DOUBLEBUFFER = 0x0C32;
public const uint GL_STEREO = 0x0C33;
public const uint GL_RENDER_MODE = 0x0C40;
public const uint GL_PERSPECTIVE_CORRECTION_HINT = 0x0C50;
public const uint GL_POINT_SMOOTH_HINT = 0x0C51;
public const uint GL_LINE_SMOOTH_HINT = 0x0C52;
public const uint GL_POLYGON_SMOOTH_HINT = 0x0C53;
public const uint GL_FOG_HINT = 0x0C54;
public const uint GL_TEXTURE_GEN_S = 0x0C60;
public const uint GL_TEXTURE_GEN_T = 0x0C61;
public const uint GL_TEXTURE_GEN_R = 0x0C62;
public const uint GL_TEXTURE_GEN_Q = 0x0C63;
public const uint GL_PIXEL_MAP_I_TO_I = 0x0C70;
public const uint GL_PIXEL_MAP_S_TO_S = 0x0C71;
public const uint GL_PIXEL_MAP_I_TO_R = 0x0C72;
public const uint GL_PIXEL_MAP_I_TO_G = 0x0C73;
public const uint GL_PIXEL_MAP_I_TO_B = 0x0C74;
public const uint GL_PIXEL_MAP_I_TO_A = 0x0C75;
public const uint GL_PIXEL_MAP_R_TO_R = 0x0C76;
public const uint GL_PIXEL_MAP_G_TO_G = 0x0C77;
public const uint GL_PIXEL_MAP_B_TO_B = 0x0C78;
public const uint GL_PIXEL_MAP_A_TO_A = 0x0C79;
public const uint GL_PIXEL_MAP_I_TO_I_SIZE = 0x0CB0;
public const uint GL_PIXEL_MAP_S_TO_S_SIZE = 0x0CB1;
public const uint GL_PIXEL_MAP_I_TO_R_SIZE = 0x0CB2;
public const uint GL_PIXEL_MAP_I_TO_G_SIZE = 0x0CB3;
public const uint GL_PIXEL_MAP_I_TO_B_SIZE = 0x0CB4;
public const uint GL_PIXEL_MAP_I_TO_A_SIZE = 0x0CB5;
public const uint GL_PIXEL_MAP_R_TO_R_SIZE = 0x0CB6;
public const uint GL_PIXEL_MAP_G_TO_G_SIZE = 0x0CB7;
public const uint GL_PIXEL_MAP_B_TO_B_SIZE = 0x0CB8;
public const uint GL_PIXEL_MAP_A_TO_A_SIZE = 0x0CB9;
public const uint GL_UNPACK_SWAP_BYTES = 0x0CF0;
public const uint GL_UNPACK_LSB_FIRST = 0x0CF1;
public const uint GL_UNPACK_ROW_LENGTH = 0x0CF2;
public const uint GL_UNPACK_SKIP_ROWS = 0x0CF3;
public const uint GL_UNPACK_SKIP_PIXELS = 0x0CF4;
public const uint GL_UNPACK_ALIGNMENT = 0x0CF5;
public const uint GL_PACK_SWAP_BYTES = 0x0D00;
public const uint GL_PACK_LSB_FIRST = 0x0D01;
public const uint GL_PACK_ROW_LENGTH = 0x0D02;
public const uint GL_PACK_SKIP_ROWS = 0x0D03;
public const uint GL_PACK_SKIP_PIXELS = 0x0D04;
public const uint GL_PACK_ALIGNMENT = 0x0D05;
public const uint GL_MAP_COLOR = 0x0D10;
public const uint GL_MAP_STENCIL = 0x0D11;
public const uint GL_INDEX_SHIFT = 0x0D12;
public const uint GL_INDEX_OFFSET = 0x0D13;
public const uint GL_RED_SCALE = 0x0D14;
public const uint GL_RED_BIAS = 0x0D15;
public const uint GL_ZOOM_X = 0x0D16;
public const uint GL_ZOOM_Y = 0x0D17;
public const uint GL_GREEN_SCALE = 0x0D18;
public const uint GL_GREEN_BIAS = 0x0D19;
public const uint GL_BLUE_SCALE = 0x0D1A;
public const uint GL_BLUE_BIAS = 0x0D1B;
public const uint GL_ALPHA_SCALE = 0x0D1C;
public const uint GL_ALPHA_BIAS = 0x0D1D;
public const uint GL_DEPTH_SCALE = 0x0D1E;
public const uint GL_DEPTH_BIAS = 0x0D1F;
public const uint GL_MAX_EVAL_ORDER = 0x0D30;
public const uint GL_MAX_LIGHTS = 0x0D31;
public const uint GL_MAX_CLIP_PLANES = 0x0D32;
public const uint GL_MAX_CLIP_DISTANCES = 0x0D32;
public const uint GL_MAX_TEXTURE_SIZE = 0x0D33;
public const uint GL_MAX_PIXEL_MAP_TABLE = 0x0D34;
public const uint GL_MAX_ATTRIB_STACK_DEPTH = 0x0D35;
public const uint GL_MAX_MODELVIEW_STACK_DEPTH = 0x0D36;
public const uint GL_MAX_NAME_STACK_DEPTH = 0x0D37;
public const uint GL_MAX_PROJECTION_STACK_DEPTH = 0x0D38;
public const uint GL_MAX_TEXTURE_STACK_DEPTH = 0x0D39;
public const uint GL_MAX_VIEWPORT_DIMS = 0x0D3A;
public const uint GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0x0D3B;
public const uint GL_SUBPIXEL_BITS = 0x0D50;
public const uint GL_INDEX_BITS = 0x0D51;
public const uint GL_RED_BITS = 0x0D52;
public const uint GL_GREEN_BITS = 0x0D53;
public const uint GL_BLUE_BITS = 0x0D54;
public const uint GL_ALPHA_BITS = 0x0D55;
public const uint GL_DEPTH_BITS = 0x0D56;
public const uint GL_STENCIL_BITS = 0x0D57;
public const uint GL_ACCUM_RED_BITS = 0x0D58;
public const uint GL_ACCUM_GREEN_BITS = 0x0D59;
public const uint GL_ACCUM_BLUE_BITS = 0x0D5A;
public const uint GL_ACCUM_ALPHA_BITS = 0x0D5B;
public const uint GL_NAME_STACK_DEPTH = 0x0D70;
public const uint GL_AUTO_NORMAL = 0x0D80;
public const uint GL_MAP1_COLOR_4 = 0x0D90;
public const uint GL_MAP1_INDEX = 0x0D91;
public const uint GL_MAP1_NORMAL = 0x0D92;
public const uint GL_MAP1_TEXTURE_COORD_1 = 0x0D93;
public const uint GL_MAP1_TEXTURE_COORD_2 = 0x0D94;
public const uint GL_MAP1_TEXTURE_COORD_3 = 0x0D95;
public const uint GL_MAP1_TEXTURE_COORD_4 = 0x0D96;
public const uint GL_MAP1_VERTEX_3 = 0x0D97;
public const uint GL_MAP1_VERTEX_4 = 0x0D98;
public const uint GL_MAP2_COLOR_4 = 0x0DB0;
public const uint GL_MAP2_INDEX = 0x0DB1;
public const uint GL_MAP2_NORMAL = 0x0DB2;
public const uint GL_MAP2_TEXTURE_COORD_1 = 0x0DB3;
public const uint GL_MAP2_TEXTURE_COORD_2 = 0x0DB4;
public const uint GL_MAP2_TEXTURE_COORD_3 = 0x0DB5;
public const uint GL_MAP2_TEXTURE_COORD_4 = 0x0DB6;
public const uint GL_MAP2_VERTEX_3 = 0x0DB7;
public const uint GL_MAP2_VERTEX_4 = 0x0DB8;
public const uint GL_MAP1_GRID_DOMAIN = 0x0DD0;
public const uint GL_MAP1_GRID_SEGMENTS = 0x0DD1;
public const uint GL_MAP2_GRID_DOMAIN = 0x0DD2;
public const uint GL_MAP2_GRID_SEGMENTS = 0x0DD3;
public const uint GL_TEXTURE_1D = 0x0DE0;
public const uint GL_TEXTURE_2D = 0x0DE1;
public const uint GL_FEEDBACK_BUFFER_POINTER = 0x0DF0;
public const uint GL_FEEDBACK_BUFFER_SIZE = 0x0DF1;
public const uint GL_FEEDBACK_BUFFER_TYPE = 0x0DF2;
public const uint GL_SELECTION_BUFFER_POINTER = 0x0DF3;
public const uint GL_SELECTION_BUFFER_SIZE = 0x0DF4;
public const uint GL_TEXTURE_WIDTH = 0x1000;
public const uint GL_TEXTURE_HEIGHT = 0x1001;
public const uint GL_TEXTURE_INTERNAL_FORMAT = 0x1003;
public const uint GL_TEXTURE_COMPONENTS = 0x1003;
public const uint GL_TEXTURE_BORDER_COLOR = 0x1004;
public const uint GL_TEXTURE_BORDER = 0x1005;
public const uint GL_TEXTURE_TARGET = 0x1006;
public const uint GL_DONT_CARE = 0x1100;
public const uint GL_FASTEST = 0x1101;
public const uint GL_NICEST = 0x1102;
public const uint GL_AMBIENT = 0x1200;
public const uint GL_DIFFUSE = 0x1201;
public const uint GL_SPECULAR = 0x1202;
public const uint GL_POSITION = 0x1203;
public const uint GL_SPOT_DIRECTION = 0x1204;
public const uint GL_SPOT_EXPONENT = 0x1205;
public const uint GL_SPOT_CUTOFF = 0x1206;
public const uint GL_CONSTANT_ATTENUATION = 0x1207;
public const uint GL_LINEAR_ATTENUATION = 0x1208;
public const uint GL_QUADRATIC_ATTENUATION = 0x1209;
public const uint GL_COMPILE = 0x1300;
public const uint GL_COMPILE_AND_EXECUTE = 0x1301;
public const uint GL_BYTE = 0x1400;
public const uint GL_UNSIGNED_BYTE = 0x1401;
public const uint GL_SHORT = 0x1402;
public const uint GL_UNSIGNED_SHORT = 0x1403;
public const uint GL_INT = 0x1404;
public const uint GL_UNSIGNED_INT = 0x1405;
public const uint GL_FLOAT = 0x1406;
public const uint GL_2_BYTES = 0x1407;
public const uint GL_3_BYTES = 0x1408;
public const uint GL_4_BYTES = 0x1409;
public const uint GL_DOUBLE = 0x140A;
public const uint GL_HALF_FLOAT = 0x140B;
public const uint GL_FIXED = 0x140C;
public const uint GL_CLEAR = 0x1500;
public const uint GL_AND = 0x1501;
public const uint GL_AND_REVERSE = 0x1502;
public const uint GL_COPY = 0x1503;
public const uint GL_AND_INVERTED = 0x1504;
public const uint GL_NOOP = 0x1505;
public const uint GL_XOR = 0x1506;
public const uint GL_OR = 0x1507;
public const uint GL_NOR = 0x1508;
public const uint GL_EQUIV = 0x1509;
public const uint GL_INVERT = 0x150A;
public const uint GL_OR_REVERSE = 0x150B;
public const uint GL_COPY_INVERTED = 0x150C;
public const uint GL_OR_INVERTED = 0x150D;
public const uint GL_NAND = 0x150E;
public const uint GL_SET = 0x150F;
public const uint GL_EMISSION = 0x1600;
public const uint GL_SHININESS = 0x1601;
public const uint GL_AMBIENT_AND_DIFFUSE = 0x1602;
public const uint GL_COLOR_INDEXES = 0x1603;
public const uint GL_MODELVIEW = 0x1700;
public const uint GL_PROJECTION = 0x1701;
public const uint GL_TEXTURE = 0x1702;
public const uint GL_COLOR = 0x1800;
public const uint GL_DEPTH = 0x1801;
public const uint GL_STENCIL = 0x1802;
public const uint GL_COLOR_INDEX = 0x1900;
public const uint GL_STENCIL_INDEX = 0x1901;
public const uint GL_DEPTH_COMPONENT = 0x1902;
public const uint GL_RED = 0x1903;
public const uint GL_GREEN = 0x1904;
public const uint GL_BLUE = 0x1905;
public const uint GL_ALPHA = 0x1906;
public const uint GL_RGB = 0x1907;
public const uint GL_RGBA = 0x1908;
public const uint GL_LUMINANCE = 0x1909;
public const uint GL_LUMINANCE_ALPHA = 0x190A;
public const uint GL_BITMAP = 0x1A00;
public const uint GL_POINT = 0x1B00;
public const uint GL_LINE = 0x1B01;
public const uint GL_FILL = 0x1B02;
public const uint GL_RENDER = 0x1C00;
public const uint GL_FEEDBACK = 0x1C01;
public const uint GL_SELECT = 0x1C02;
public const uint GL_FLAT = 0x1D00;
public const uint GL_SMOOTH = 0x1D01;
public const uint GL_KEEP = 0x1E00;
public const uint GL_REPLACE = 0x1E01;
public const uint GL_INCR = 0x1E02;
public const uint GL_DECR = 0x1E03;
public const uint GL_VENDOR = 0x1F00;
public const uint GL_RENDERER = 0x1F01;
public const uint GL_VERSION = 0x1F02;
public const uint GL_EXTENSIONS = 0x1F03;
public const uint GL_S = 0x2000;
public const uint GL_T = 0x2001;
public const uint GL_R = 0x2002;
public const uint GL_Q = 0x2003;
public const uint GL_MODULATE = 0x2100;
public const uint GL_DECAL = 0x2101;
public const uint GL_TEXTURE_ENV_MODE = 0x2200;
public const uint GL_TEXTURE_ENV_COLOR = 0x2201;
public const uint GL_TEXTURE_ENV = 0x2300;
public const uint GL_EYE_LINEAR = 0x2400;
public const uint GL_OBJECT_LINEAR = 0x2401;
public const uint GL_SPHERE_MAP = 0x2402;
public const uint GL_TEXTURE_GEN_MODE = 0x2500;
public const uint GL_OBJECT_PLANE = 0x2501;
public const uint GL_EYE_PLANE = 0x2502;
public const uint GL_NEAREST = 0x2600;
public const uint GL_LINEAR = 0x2601;
public const uint GL_NEAREST_MIPMAP_NEAREST = 0x2700;
public const uint GL_LINEAR_MIPMAP_NEAREST = 0x2701;
public const uint GL_NEAREST_MIPMAP_LINEAR = 0x2702;
public const uint GL_LINEAR_MIPMAP_LINEAR = 0x2703;
public const uint GL_TEXTURE_MAG_FILTER = 0x2800;
public const uint GL_TEXTURE_MIN_FILTER = 0x2801;
public const uint GL_TEXTURE_WRAP_S = 0x2802;
public const uint GL_TEXTURE_WRAP_T = 0x2803;
public const uint GL_CLAMP = 0x2900;
public const uint GL_REPEAT = 0x2901;
public const uint GL_POLYGON_OFFSET_UNITS = 0x2A00;
public const uint GL_POLYGON_OFFSET_POINT = 0x2A01;
public const uint GL_POLYGON_OFFSET_LINE = 0x2A02;
public const uint GL_R3_G3_B2 = 0x2A10;
public const uint GL_V2F = 0x2A20;
public const uint GL_V3F = 0x2A21;
public const uint GL_C4UB_V2F = 0x2A22;
public const uint GL_C4UB_V3F = 0x2A23;
public const uint GL_C3F_V3F = 0x2A24;
public const uint GL_N3F_V3F = 0x2A25;
public const uint GL_C4F_N3F_V3F = 0x2A26;
public const uint GL_T2F_V3F = 0x2A27;
public const uint GL_T4F_V4F = 0x2A28;
public const uint GL_T2F_C4UB_V3F = 0x2A29;
public const uint GL_T2F_C3F_V3F = 0x2A2A;
public const uint GL_T2F_N3F_V3F = 0x2A2B;
public const uint GL_T2F_C4F_N3F_V3F = 0x2A2C;
public const uint GL_T4F_C4F_N3F_V4F = 0x2A2D;
public const uint GL_CLIP_PLANE0 = 0x3000;
public const uint GL_CLIP_DISTANCE0 = 0x3000;
public const uint GL_CLIP_PLANE1 = 0x3001;
public const uint GL_CLIP_DISTANCE1 = 0x3001;
public const uint GL_CLIP_PLANE2 = 0x3002;
public const uint GL_CLIP_DISTANCE2 = 0x3002;
public const uint GL_CLIP_PLANE3 = 0x3003;
public const uint GL_CLIP_DISTANCE3 = 0x3003;
public const uint GL_CLIP_PLANE4 = 0x3004;
public const uint GL_CLIP_DISTANCE4 = 0x3004;
public const uint GL_CLIP_PLANE5 = 0x3005;
public const uint GL_CLIP_DISTANCE5 = 0x3005;
public const uint GL_CLIP_DISTANCE6 = 0x3006;
public const uint GL_CLIP_DISTANCE7 = 0x3007;
public const uint GL_LIGHT0 = 0x4000;
public const uint GL_LIGHT1 = 0x4001;
public const uint GL_LIGHT2 = 0x4002;
public const uint GL_LIGHT3 = 0x4003;
public const uint GL_LIGHT4 = 0x4004;
public const uint GL_LIGHT5 = 0x4005;
public const uint GL_LIGHT6 = 0x4006;
public const uint GL_LIGHT7 = 0x4007;
public const uint GL_CONSTANT_COLOR = 0x8001;
public const uint GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
public const uint GL_CONSTANT_ALPHA = 0x8003;
public const uint GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
public const uint GL_BLEND_COLOR = 0x8005;
public const uint GL_FUNC_ADD = 0x8006;
public const uint GL_MIN = 0x8007;
public const uint GL_MAX = 0x8008;
public const uint GL_BLEND_EQUATION = 0x8009;
public const uint GL_BLEND_EQUATION_RGB = 0x8009;
public const uint GL_FUNC_SUBTRACT = 0x800A;
public const uint GL_FUNC_REVERSE_SUBTRACT = 0x800B;
public const uint GL_CONVOLUTION_1D = 0x8010;
public const uint GL_CONVOLUTION_2D = 0x8011;
public const uint GL_SEPARABLE_2D = 0x8012;
public const uint GL_HISTOGRAM = 0x8024;
public const uint GL_PROXY_HISTOGRAM = 0x8025;
public const uint GL_MINMAX = 0x802E;
public const uint GL_UNSIGNED_BYTE_3_3_2 = 0x8032;
public const uint GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033;
public const uint GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034;
public const uint GL_UNSIGNED_INT_8_8_8_8 = 0x8035;
public const uint GL_UNSIGNED_INT_10_10_10_2 = 0x8036;
public const uint GL_POLYGON_OFFSET_FILL = 0x8037;
public const uint GL_POLYGON_OFFSET_FACTOR = 0x8038;
public const uint GL_RESCALE_NORMAL = 0x803A;
public const uint GL_ALPHA4 = 0x803B;
public const uint GL_ALPHA8 = 0x803C;
public const uint GL_ALPHA12 = 0x803D;
public const uint GL_ALPHA16 = 0x803E;
public const uint GL_LUMINANCE4 = 0x803F;
public const uint GL_LUMINANCE8 = 0x8040;
public const uint GL_LUMINANCE12 = 0x8041;
public const uint GL_LUMINANCE16 = 0x8042;
public const uint GL_LUMINANCE4_ALPHA4 = 0x8043;
public const uint GL_LUMINANCE6_ALPHA2 = 0x8044;
public const uint GL_LUMINANCE8_ALPHA8 = 0x8045;
public const uint GL_LUMINANCE12_ALPHA4 = 0x8046;
public const uint GL_LUMINANCE12_ALPHA12 = 0x8047;
public const uint GL_LUMINANCE16_ALPHA16 = 0x8048;
public const uint GL_INTENSITY = 0x8049;
public const uint GL_INTENSITY4 = 0x804A;
public const uint GL_INTENSITY8 = 0x804B;
public const uint GL_INTENSITY12 = 0x804C;
public const uint GL_INTENSITY16 = 0x804D;
public const uint GL_RGB4 = 0x804F;
public const uint GL_RGB5 = 0x8050;
public const uint GL_RGB8 = 0x8051;
public const uint GL_RGB10 = 0x8052;
public const uint GL_RGB12 = 0x8053;
public const uint GL_RGB16 = 0x8054;
public const uint GL_RGBA2 = 0x8055;
public const uint GL_RGBA4 = 0x8056;
public const uint GL_RGB5_A1 = 0x8057;
public const uint GL_RGBA8 = 0x8058;
public const uint GL_RGB10_A2 = 0x8059;
public const uint GL_RGBA12 = 0x805A;
public const uint GL_RGBA16 = 0x805B;
public const uint GL_TEXTURE_RED_SIZE = 0x805C;
public const uint GL_TEXTURE_GREEN_SIZE = 0x805D;
public const uint GL_TEXTURE_BLUE_SIZE = 0x805E;
public const uint GL_TEXTURE_ALPHA_SIZE = 0x805F;
public const uint GL_TEXTURE_LUMINANCE_SIZE = 0x8060;
public const uint GL_TEXTURE_INTENSITY_SIZE = 0x8061;
public const uint GL_PROXY_TEXTURE_1D = 0x8063;
public const uint GL_PROXY_TEXTURE_2D = 0x8064;
public const uint GL_TEXTURE_PRIORITY = 0x8066;
public const uint GL_TEXTURE_RESIDENT = 0x8067;
public const uint GL_TEXTURE_BINDING_1D = 0x8068;
public const uint GL_TEXTURE_BINDING_2D = 0x8069;
public const uint GL_TEXTURE_BINDING_3D = 0x806A;
public const uint GL_PACK_SKIP_IMAGES = 0x806B;
public const uint GL_PACK_IMAGE_HEIGHT = 0x806C;
public const uint GL_UNPACK_SKIP_IMAGES = 0x806D;
public const uint GL_UNPACK_IMAGE_HEIGHT = 0x806E;
public const uint GL_TEXTURE_3D = 0x806F;
public const uint GL_PROXY_TEXTURE_3D = 0x8070;
public const uint GL_TEXTURE_DEPTH = 0x8071;
public const uint GL_TEXTURE_WRAP_R = 0x8072;
public const uint GL_MAX_3D_TEXTURE_SIZE = 0x8073;
public const uint GL_VERTEX_ARRAY = 0x8074;
public const uint GL_NORMAL_ARRAY = 0x8075;
public const uint GL_COLOR_ARRAY = 0x8076;
public const uint GL_INDEX_ARRAY = 0x8077;
public const uint GL_TEXTURE_COORD_ARRAY = 0x8078;
public const uint GL_EDGE_FLAG_ARRAY = 0x8079;
public const uint GL_VERTEX_ARRAY_SIZE = 0x807A;
public const uint GL_VERTEX_ARRAY_TYPE = 0x807B;
public const uint GL_VERTEX_ARRAY_STRIDE = 0x807C;
public const uint GL_NORMAL_ARRAY_TYPE = 0x807E;
public const uint GL_NORMAL_ARRAY_STRIDE = 0x807F;
public const uint GL_COLOR_ARRAY_SIZE = 0x8081;
public const uint GL_COLOR_ARRAY_TYPE = 0x8082;
public const uint GL_COLOR_ARRAY_STRIDE = 0x8083;
public const uint GL_INDEX_ARRAY_TYPE = 0x8085;
public const uint GL_INDEX_ARRAY_STRIDE = 0x8086;
public const uint GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088;
public const uint GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089;
public const uint GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808A;
public const uint GL_EDGE_FLAG_ARRAY_STRIDE = 0x808C;
public const uint GL_VERTEX_ARRAY_POINTER = 0x808E;
public const uint GL_NORMAL_ARRAY_POINTER = 0x808F;
public const uint GL_COLOR_ARRAY_POINTER = 0x8090;
public const uint GL_INDEX_ARRAY_POINTER = 0x8091;
public const uint GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092;
public const uint GL_EDGE_FLAG_ARRAY_POINTER = 0x8093;
public const uint GL_MULTISAMPLE = 0x809D;
public const uint GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E;
public const uint GL_SAMPLE_ALPHA_TO_ONE = 0x809F;
public const uint GL_SAMPLE_COVERAGE = 0x80A0;
public const uint GL_SAMPLE_BUFFERS = 0x80A8;
public const uint GL_SAMPLES = 0x80A9;
public const uint GL_SAMPLE_COVERAGE_VALUE = 0x80AA;
public const uint GL_SAMPLE_COVERAGE_INVERT = 0x80AB;
public const uint GL_BLEND_DST_RGB = 0x80C8;
public const uint GL_BLEND_SRC_RGB = 0x80C9;
public const uint GL_BLEND_DST_ALPHA = 0x80CA;
public const uint GL_BLEND_SRC_ALPHA = 0x80CB;
public const uint GL_COLOR_TABLE = 0x80D0;
public const uint GL_POST_CONVOLUTION_COLOR_TABLE = 0x80D1;
public const uint GL_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D2;
public const uint GL_PROXY_COLOR_TABLE = 0x80D3;
public const uint GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = 0x80D4;
public const uint GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = 0x80D5;
public const uint GL_BGR = 0x80E0;
public const uint GL_BGRA = 0x80E1;
public const uint GL_MAX_ELEMENTS_VERTICES = 0x80E8;
public const uint GL_MAX_ELEMENTS_INDICES = 0x80E9;
public const uint GL_PARAMETER_BUFFER = 0x80EE;
public const uint GL_PARAMETER_BUFFER_BINDING = 0x80EF;
public const uint GL_POINT_SIZE_MIN = 0x8126;
public const uint GL_POINT_SIZE_MAX = 0x8127;
public const uint GL_POINT_FADE_THRESHOLD_SIZE = 0x8128;
public const uint GL_POINT_DISTANCE_ATTENUATION = 0x8129;
public const uint GL_CLAMP_TO_BORDER = 0x812D;
public const uint GL_CLAMP_TO_EDGE = 0x812F;
public const uint GL_TEXTURE_MIN_LOD = 0x813A;
public const uint GL_TEXTURE_MAX_LOD = 0x813B;
public const uint GL_TEXTURE_BASE_LEVEL = 0x813C;
public const uint GL_TEXTURE_MAX_LEVEL = 0x813D;
public const uint GL_GENERATE_MIPMAP = 0x8191;
public const uint GL_GENERATE_MIPMAP_HINT = 0x8192;
public const uint GL_DEPTH_COMPONENT16 = 0x81A5;
public const uint GL_DEPTH_COMPONENT24 = 0x81A6;
public const uint GL_DEPTH_COMPONENT32 = 0x81A7;
public const uint GL_LIGHT_MODEL_COLOR_CONTROL = 0x81F8;
public const uint GL_SINGLE_COLOR = 0x81F9;
public const uint GL_SEPARATE_SPECULAR_COLOR = 0x81FA;
public const uint GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;
public const uint GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;
public const uint GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212;
public const uint GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213;
public const uint GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214;
public const uint GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215;
public const uint GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216;
public const uint GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217;
public const uint GL_FRAMEBUFFER_DEFAULT = 0x8218;
public const uint GL_FRAMEBUFFER_UNDEFINED = 0x8219;
public const uint GL_DEPTH_STENCIL_ATTACHMENT = 0x821A;
public const uint GL_MAJOR_VERSION = 0x821B;
public const uint GL_MINOR_VERSION = 0x821C;
public const uint GL_NUM_EXTENSIONS = 0x821D;
public const uint GL_CONTEXT_FLAGS = 0x821E;
public const uint GL_BUFFER_IMMUTABLE_STORAGE = 0x821F;
public const uint GL_BUFFER_STORAGE_FLAGS = 0x8220;
public const uint GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED = 0x8221;
public const uint GL_INDEX = 0x8222;
public const uint GL_COMPRESSED_RED = 0x8225;
public const uint GL_COMPRESSED_RG = 0x8226;
public const uint GL_RG = 0x8227;
public const uint GL_RG_INTEGER = 0x8228;
public const uint GL_R8 = 0x8229;
public const uint GL_R16 = 0x822A;
public const uint GL_RG8 = 0x822B;
public const uint GL_RG16 = 0x822C;
public const uint GL_R16F = 0x822D;
public const uint GL_R32F = 0x822E;
public const uint GL_RG16F = 0x822F;
public const uint GL_RG32F = 0x8230;
public const uint GL_R8I = 0x8231;
public const uint GL_R8UI = 0x8232;
public const uint GL_R16I = 0x8233;
public const uint GL_R16UI = 0x8234;
public const uint GL_R32I = 0x8235;
public const uint GL_R32UI = 0x8236;
public const uint GL_RG8I = 0x8237;
public const uint GL_RG8UI = 0x8238;
public const uint GL_RG16I = 0x8239;
public const uint GL_RG16UI = 0x823A;
public const uint GL_RG32I = 0x823B;
public const uint GL_RG32UI = 0x823C;
public const uint GL_DEBUG_OUTPUT_SYNCHRONOUS = 0x8242;
public const uint GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH = 0x8243;
public const uint GL_DEBUG_CALLBACK_FUNCTION = 0x8244;
public const uint GL_DEBUG_CALLBACK_USER_PARAM = 0x8245;
public const uint GL_DEBUG_SOURCE_API = 0x8246;
public const uint GL_DEBUG_SOURCE_WINDOW_SYSTEM = 0x8247;
public const uint GL_DEBUG_SOURCE_SHADER_COMPILER = 0x8248;
public const uint GL_DEBUG_SOURCE_THIRD_PARTY = 0x8249;
public const uint GL_DEBUG_SOURCE_APPLICATION = 0x824A;
public const uint GL_DEBUG_SOURCE_OTHER = 0x824B;
public const uint GL_DEBUG_TYPE_ERROR = 0x824C;
public const uint GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR = 0x824D;
public const uint GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR = 0x824E;
public const uint GL_DEBUG_TYPE_PORTABILITY = 0x824F;
public const uint GL_DEBUG_TYPE_PERFORMANCE = 0x8250;
public const uint GL_DEBUG_TYPE_OTHER = 0x8251;
public const uint GL_LOSE_CONTEXT_ON_RESET = 0x8252;
public const uint GL_GUILTY_CONTEXT_RESET = 0x8253;
public const uint GL_INNOCENT_CONTEXT_RESET = 0x8254;
public const uint GL_UNKNOWN_CONTEXT_RESET = 0x8255;
public const uint GL_RESET_NOTIFICATION_STRATEGY = 0x8256;
public const uint GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 0x8257;
public const uint GL_PROGRAM_SEPARABLE = 0x8258;
public const uint GL_ACTIVE_PROGRAM = 0x8259;
public const uint GL_PROGRAM_PIPELINE_BINDING = 0x825A;
public const uint GL_MAX_VIEWPORTS = 0x825B;
public const uint GL_VIEWPORT_SUBPIXEL_BITS = 0x825C;
public const uint GL_VIEWPORT_BOUNDS_RANGE = 0x825D;
public const uint GL_LAYER_PROVOKING_VERTEX = 0x825E;
public const uint GL_VIEWPORT_INDEX_PROVOKING_VERTEX = 0x825F;
public const uint GL_UNDEFINED_VERTEX = 0x8260;
public const uint GL_NO_RESET_NOTIFICATION = 0x8261;
public const uint GL_MAX_COMPUTE_SHARED_MEMORY_SIZE = 0x8262;
public const uint GL_MAX_COMPUTE_UNIFORM_COMPONENTS = 0x8263;
public const uint GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS = 0x8264;
public const uint GL_MAX_COMPUTE_ATOMIC_COUNTERS = 0x8265;
public const uint GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS = 0x8266;
public const uint GL_COMPUTE_WORK_GROUP_SIZE = 0x8267;
public const uint GL_DEBUG_TYPE_MARKER = 0x8268;
public const uint GL_DEBUG_TYPE_PUSH_GROUP = 0x8269;
public const uint GL_DEBUG_TYPE_POP_GROUP = 0x826A;
public const uint GL_DEBUG_SEVERITY_NOTIFICATION = 0x826B;
public const uint GL_MAX_DEBUG_GROUP_STACK_DEPTH = 0x826C;
public const uint GL_DEBUG_GROUP_STACK_DEPTH = 0x826D;
public const uint GL_MAX_UNIFORM_LOCATIONS = 0x826E;
public const uint GL_INTERNALFORMAT_SUPPORTED = 0x826F;
public const uint GL_INTERNALFORMAT_PREFERRED = 0x8270;
public const uint GL_INTERNALFORMAT_RED_SIZE = 0x8271;
public const uint GL_INTERNALFORMAT_GREEN_SIZE = 0x8272;
public const uint GL_INTERNALFORMAT_BLUE_SIZE = 0x8273;
public const uint GL_INTERNALFORMAT_ALPHA_SIZE = 0x8274;
public const uint GL_INTERNALFORMAT_DEPTH_SIZE = 0x8275;
public const uint GL_INTERNALFORMAT_STENCIL_SIZE = 0x8276;
public const uint GL_INTERNALFORMAT_SHARED_SIZE = 0x8277;
public const uint GL_INTERNALFORMAT_RED_TYPE = 0x8278;
public const uint GL_INTERNALFORMAT_GREEN_TYPE = 0x8279;
public const uint GL_INTERNALFORMAT_BLUE_TYPE = 0x827A;
public const uint GL_INTERNALFORMAT_ALPHA_TYPE = 0x827B;
public const uint GL_INTERNALFORMAT_DEPTH_TYPE = 0x827C;
public const uint GL_INTERNALFORMAT_STENCIL_TYPE = 0x827D;
public const uint GL_MAX_WIDTH = 0x827E;
public const uint GL_MAX_HEIGHT = 0x827F;
public const uint GL_MAX_DEPTH = 0x8280;
public const uint GL_MAX_LAYERS = 0x8281;
public const uint GL_MAX_COMBINED_DIMENSIONS = 0x8282;
public const uint GL_COLOR_COMPONENTS = 0x8283;
public const uint GL_DEPTH_COMPONENTS = 0x8284;
public const uint GL_STENCIL_COMPONENTS = 0x8285;
public const uint GL_COLOR_RENDERABLE = 0x8286;
public const uint GL_DEPTH_RENDERABLE = 0x8287;
public const uint GL_STENCIL_RENDERABLE = 0x8288;
public const uint GL_FRAMEBUFFER_RENDERABLE = 0x8289;
public const uint GL_FRAMEBUFFER_RENDERABLE_LAYERED = 0x828A;
public const uint GL_FRAMEBUFFER_BLEND = 0x828B;
public const uint GL_READ_PIXELS = 0x828C;
public const uint GL_READ_PIXELS_FORMAT = 0x828D;
public const uint GL_READ_PIXELS_TYPE = 0x828E;
public const uint GL_TEXTURE_IMAGE_FORMAT = 0x828F;
public const uint GL_TEXTURE_IMAGE_TYPE = 0x8290;
public const uint GL_GET_TEXTURE_IMAGE_FORMAT = 0x8291;
public const uint GL_GET_TEXTURE_IMAGE_TYPE = 0x8292;
public const uint GL_MIPMAP = 0x8293;
public const uint GL_MANUAL_GENERATE_MIPMAP = 0x8294;
public const uint GL_AUTO_GENERATE_MIPMAP = 0x8295;
public const uint GL_COLOR_ENCODING = 0x8296;
public const uint GL_SRGB_READ = 0x8297;
public const uint GL_SRGB_WRITE = 0x8298;
public const uint GL_FILTER = 0x829A;
public const uint GL_VERTEX_TEXTURE = 0x829B;
public const uint GL_TESS_CONTROL_TEXTURE = 0x829C;
public const uint GL_TESS_EVALUATION_TEXTURE = 0x829D;
public const uint GL_GEOMETRY_TEXTURE = 0x829E;
public const uint GL_FRAGMENT_TEXTURE = 0x829F;
public const uint GL_COMPUTE_TEXTURE = 0x82A0;
public const uint GL_TEXTURE_SHADOW = 0x82A1;
public const uint GL_TEXTURE_GATHER = 0x82A2;
public const uint GL_TEXTURE_GATHER_SHADOW = 0x82A3;
public const uint GL_SHADER_IMAGE_LOAD = 0x82A4;
public const uint GL_SHADER_IMAGE_STORE = 0x82A5;
public const uint GL_SHADER_IMAGE_ATOMIC = 0x82A6;
public const uint GL_IMAGE_TEXEL_SIZE = 0x82A7;
public const uint GL_IMAGE_COMPATIBILITY_CLASS = 0x82A8;
public const uint GL_IMAGE_PIXEL_FORMAT = 0x82A9;
public const uint GL_IMAGE_PIXEL_TYPE = 0x82AA;
public const uint GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST = 0x82AC;
public const uint GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST = 0x82AD;
public const uint GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE = 0x82AE;
public const uint GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE = 0x82AF;
public const uint GL_TEXTURE_COMPRESSED_BLOCK_WIDTH = 0x82B1;
public const uint GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT = 0x82B2;
public const uint GL_TEXTURE_COMPRESSED_BLOCK_SIZE = 0x82B3;
public const uint GL_CLEAR_BUFFER = 0x82B4;
public const uint GL_TEXTURE_VIEW = 0x82B5;
public const uint GL_VIEW_COMPATIBILITY_CLASS = 0x82B6;
public const uint GL_FULL_SUPPORT = 0x82B7;
public const uint GL_CAVEAT_SUPPORT = 0x82B8;
public const uint GL_IMAGE_CLASS_4_X_32 = 0x82B9;
public const uint GL_IMAGE_CLASS_2_X_32 = 0x82BA;
public const uint GL_IMAGE_CLASS_1_X_32 = 0x82BB;
public const uint GL_IMAGE_CLASS_4_X_16 = 0x82BC;
public const uint GL_IMAGE_CLASS_2_X_16 = 0x82BD;
public const uint GL_IMAGE_CLASS_1_X_16 = 0x82BE;
public const uint GL_IMAGE_CLASS_4_X_8 = 0x82BF;
public const uint GL_IMAGE_CLASS_2_X_8 = 0x82C0;
public const uint GL_IMAGE_CLASS_1_X_8 = 0x82C1;
public const uint GL_IMAGE_CLASS_11_11_10 = 0x82C2;
public const uint GL_IMAGE_CLASS_10_10_10_2 = 0x82C3;
public const uint GL_VIEW_CLASS_128_BITS = 0x82C4;
public const uint GL_VIEW_CLASS_96_BITS = 0x82C5;
public const uint GL_VIEW_CLASS_64_BITS = 0x82C6;
public const uint GL_VIEW_CLASS_48_BITS = 0x82C7;
public const uint GL_VIEW_CLASS_32_BITS = 0x82C8;
public const uint GL_VIEW_CLASS_24_BITS = 0x82C9;
public const uint GL_VIEW_CLASS_16_BITS = 0x82CA;
public const uint GL_VIEW_CLASS_8_BITS = 0x82CB;
public const uint GL_VIEW_CLASS_S3TC_DXT1_RGB = 0x82CC;
public const uint GL_VIEW_CLASS_S3TC_DXT1_RGBA = 0x82CD;
public const uint GL_VIEW_CLASS_S3TC_DXT3_RGBA = 0x82CE;
public const uint GL_VIEW_CLASS_S3TC_DXT5_RGBA = 0x82CF;
public const uint GL_VIEW_CLASS_RGTC1_RED = 0x82D0;
public const uint GL_VIEW_CLASS_RGTC2_RG = 0x82D1;
public const uint GL_VIEW_CLASS_BPTC_UNORM = 0x82D2;
public const uint GL_VIEW_CLASS_BPTC_FLOAT = 0x82D3;
public const uint GL_VERTEX_ATTRIB_BINDING = 0x82D4;
public const uint GL_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D5;
public const uint GL_VERTEX_BINDING_DIVISOR = 0x82D6;
public const uint GL_VERTEX_BINDING_OFFSET = 0x82D7;
public const uint GL_VERTEX_BINDING_STRIDE = 0x82D8;
public const uint GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET = 0x82D9;
public const uint GL_MAX_VERTEX_ATTRIB_BINDINGS = 0x82DA;
public const uint GL_TEXTURE_VIEW_MIN_LEVEL = 0x82DB;
public const uint GL_TEXTURE_VIEW_NUM_LEVELS = 0x82DC;
public const uint GL_TEXTURE_VIEW_MIN_LAYER = 0x82DD;
public const uint GL_TEXTURE_VIEW_NUM_LAYERS = 0x82DE;
public const uint GL_TEXTURE_IMMUTABLE_LEVELS = 0x82DF;
public const uint GL_BUFFER = 0x82E0;
public const uint GL_SHADER = 0x82E1;
public const uint GL_PROGRAM = 0x82E2;
public const uint GL_QUERY = 0x82E3;
public const uint GL_PROGRAM_PIPELINE = 0x82E4;
public const uint GL_MAX_VERTEX_ATTRIB_STRIDE = 0x82E5;
public const uint GL_SAMPLER = 0x82E6;
public const uint GL_DISPLAY_LIST = 0x82E7;
public const uint GL_MAX_LABEL_LENGTH = 0x82E8;
public const uint GL_NUM_SHADING_LANGUAGE_VERSIONS = 0x82E9;
public const uint GL_QUERY_TARGET = 0x82EA;
public const uint GL_TRANSFORM_FEEDBACK_OVERFLOW = 0x82EC;
public const uint GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW = 0x82ED;
public const uint GL_VERTICES_SUBMITTED = 0x82EE;
public const uint GL_PRIMITIVES_SUBMITTED = 0x82EF;
public const uint GL_VERTEX_SHADER_INVOCATIONS = 0x82F0;
public const uint GL_TESS_CONTROL_SHADER_PATCHES = 0x82F1;
public const uint GL_TESS_EVALUATION_SHADER_INVOCATIONS = 0x82F2;
public const uint GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED = 0x82F3;
public const uint GL_FRAGMENT_SHADER_INVOCATIONS = 0x82F4;
public const uint GL_COMPUTE_SHADER_INVOCATIONS = 0x82F5;
public const uint GL_CLIPPING_INPUT_PRIMITIVES = 0x82F6;
public const uint GL_CLIPPING_OUTPUT_PRIMITIVES = 0x82F7;
public const uint GL_MAX_CULL_DISTANCES = 0x82F9;
public const uint GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES = 0x82FA;
public const uint GL_CONTEXT_RELEASE_BEHAVIOR = 0x82FB;
public const uint GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH = 0x82FC;
public const uint GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362;
public const uint GL_UNSIGNED_SHORT_5_6_5 = 0x8363;
public const uint GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364;
public const uint GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365;
public const uint GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366;
public const uint GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367;
public const uint GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;
public const uint GL_MIRRORED_REPEAT = 0x8370;
public const uint GL_FOG_COORDINATE_SOURCE = 0x8450;
public const uint GL_FOG_COORD_SRC = 0x8450;
public const uint GL_FOG_COORDINATE = 0x8451;
public const uint GL_FOG_COORD = 0x8451;
public const uint GL_FRAGMENT_DEPTH = 0x8452;
public const uint GL_CURRENT_FOG_COORDINATE = 0x8453;
public const uint GL_CURRENT_FOG_COORD = 0x8453;
public const uint GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454;
public const uint GL_FOG_COORD_ARRAY_TYPE = 0x8454;
public const uint GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455;
public const uint GL_FOG_COORD_ARRAY_STRIDE = 0x8455;
public const uint GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456;
public const uint GL_FOG_COORD_ARRAY_POINTER = 0x8456;
public const uint GL_FOG_COORDINATE_ARRAY = 0x8457;
public const uint GL_FOG_COORD_ARRAY = 0x8457;
public const uint GL_COLOR_SUM = 0x8458;
public const uint GL_CURRENT_SECONDARY_COLOR = 0x8459;
public const uint GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845A;
public const uint GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845B;
public const uint GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845C;
public const uint GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845D;
public const uint GL_SECONDARY_COLOR_ARRAY = 0x845E;
public const uint GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845F;
public const uint GL_ALIASED_POINT_SIZE_RANGE = 0x846D;
public const uint GL_ALIASED_LINE_WIDTH_RANGE = 0x846E;
public const uint GL_TEXTURE0 = 0x84C0;
public const uint GL_TEXTURE1 = 0x84C1;
public const uint GL_TEXTURE2 = 0x84C2;
public const uint GL_TEXTURE3 = 0x84C3;
public const uint GL_TEXTURE4 = 0x84C4;
public const uint GL_TEXTURE5 = 0x84C5;
public const uint GL_TEXTURE6 = 0x84C6;
public const uint GL_TEXTURE7 = 0x84C7;
public const uint GL_TEXTURE8 = 0x84C8;
public const uint GL_TEXTURE9 = 0x84C9;
public const uint GL_TEXTURE10 = 0x84CA;
public const uint GL_TEXTURE11 = 0x84CB;
public const uint GL_TEXTURE12 = 0x84CC;
public const uint GL_TEXTURE13 = 0x84CD;
public const uint GL_TEXTURE14 = 0x84CE;
public const uint GL_TEXTURE15 = 0x84CF;
public const uint GL_TEXTURE16 = 0x84D0;
public const uint GL_TEXTURE17 = 0x84D1;
public const uint GL_TEXTURE18 = 0x84D2;
public const uint GL_TEXTURE19 = 0x84D3;
public const uint GL_TEXTURE20 = 0x84D4;
public const uint GL_TEXTURE21 = 0x84D5;
public const uint GL_TEXTURE22 = 0x84D6;
public const uint GL_TEXTURE23 = 0x84D7;
public const uint GL_TEXTURE24 = 0x84D8;
public const uint GL_TEXTURE25 = 0x84D9;
public const uint GL_TEXTURE26 = 0x84DA;
public const uint GL_TEXTURE27 = 0x84DB;
public const uint GL_TEXTURE28 = 0x84DC;
public const uint GL_TEXTURE29 = 0x84DD;
public const uint GL_TEXTURE30 = 0x84DE;
public const uint GL_TEXTURE31 = 0x84DF;
public const uint GL_ACTIVE_TEXTURE = 0x84E0;
public const uint GL_CLIENT_ACTIVE_TEXTURE = 0x84E1;
public const uint GL_MAX_TEXTURE_UNITS = 0x84E2;
public const uint GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84E3;
public const uint GL_TRANSPOSE_PROJECTION_MATRIX = 0x84E4;
public const uint GL_TRANSPOSE_TEXTURE_MATRIX = 0x84E5;
public const uint GL_TRANSPOSE_COLOR_MATRIX = 0x84E6;
public const uint GL_SUBTRACT = 0x84E7;
public const uint GL_MAX_RENDERBUFFER_SIZE = 0x84E8;
public const uint GL_COMPRESSED_ALPHA = 0x84E9;
public const uint GL_COMPRESSED_LUMINANCE = 0x84EA;
public const uint GL_COMPRESSED_LUMINANCE_ALPHA = 0x84EB;
public const uint GL_COMPRESSED_INTENSITY = 0x84EC;
public const uint GL_COMPRESSED_RGB = 0x84ED;
public const uint GL_COMPRESSED_RGBA = 0x84EE;
public const uint GL_TEXTURE_COMPRESSION_HINT = 0x84EF;
public const uint GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0;
public const uint GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1;
public const uint GL_TEXTURE_RECTANGLE = 0x84F5;
public const uint GL_TEXTURE_BINDING_RECTANGLE = 0x84F6;
public const uint GL_PROXY_TEXTURE_RECTANGLE = 0x84F7;
public const uint GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8;
public const uint GL_DEPTH_STENCIL = 0x84F9;
public const uint GL_UNSIGNED_INT_24_8 = 0x84FA;
public const uint GL_MAX_TEXTURE_LOD_BIAS = 0x84FD;
public const uint GL_TEXTURE_MAX_ANISOTROPY = 0x84FE;
public const uint GL_MAX_TEXTURE_MAX_ANISOTROPY = 0x84FF;
public const uint GL_TEXTURE_FILTER_CONTROL = 0x8500;
public const uint GL_TEXTURE_LOD_BIAS = 0x8501;
public const uint GL_INCR_WRAP = 0x8507;
public const uint GL_DECR_WRAP = 0x8508;
public const uint GL_NORMAL_MAP = 0x8511;
public const uint GL_REFLECTION_MAP = 0x8512;
public const uint GL_TEXTURE_CUBE_MAP = 0x8513;
public const uint GL_TEXTURE_BINDING_CUBE_MAP = 0x8514;
public const uint GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515;
public const uint GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516;
public const uint GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517;
public const uint GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518;
public const uint GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519;
public const uint GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A;
public const uint GL_PROXY_TEXTURE_CUBE_MAP = 0x851B;
public const uint GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C;
public const uint GL_COMBINE = 0x8570;
public const uint GL_COMBINE_RGB = 0x8571;
public const uint GL_COMBINE_ALPHA = 0x8572;
public const uint GL_RGB_SCALE = 0x8573;
public const uint GL_ADD_SIGNED = 0x8574;
public const uint GL_INTERPOLATE = 0x8575;
public const uint GL_CONSTANT = 0x8576;
public const uint GL_PRIMARY_COLOR = 0x8577;
public const uint GL_PREVIOUS = 0x8578;
public const uint GL_SOURCE0_RGB = 0x8580;
public const uint GL_SRC0_RGB = 0x8580;
public const uint GL_SOURCE1_RGB = 0x8581;
public const uint GL_SRC1_RGB = 0x8581;
public const uint GL_SOURCE2_RGB = 0x8582;
public const uint GL_SRC2_RGB = 0x8582;
public const uint GL_SOURCE0_ALPHA = 0x8588;
public const uint GL_SRC0_ALPHA = 0x8588;
public const uint GL_SOURCE1_ALPHA = 0x8589;
public const uint GL_SRC1_ALPHA = 0x8589;
public const uint GL_SOURCE2_ALPHA = 0x858A;
public const uint GL_SRC2_ALPHA = 0x858A;
public const uint GL_OPERAND0_RGB = 0x8590;
public const uint GL_OPERAND1_RGB = 0x8591;
public const uint GL_OPERAND2_RGB = 0x8592;
public const uint GL_OPERAND0_ALPHA = 0x8598;
public const uint GL_OPERAND1_ALPHA = 0x8599;
public const uint GL_OPERAND2_ALPHA = 0x859A;
public const uint GL_VERTEX_ARRAY_BINDING = 0x85B5;
public const uint GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
public const uint GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
public const uint GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
public const uint GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
public const uint GL_CURRENT_VERTEX_ATTRIB = 0x8626;
public const uint GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642;
public const uint GL_PROGRAM_POINT_SIZE = 0x8642;
public const uint GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643;
public const uint GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
public const uint GL_DEPTH_CLAMP = 0x864F;
public const uint GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0;
public const uint GL_TEXTURE_COMPRESSED = 0x86A1;
public const uint GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2;
public const uint GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3;
public const uint GL_DOT3_RGB = 0x86AE;
public const uint GL_DOT3_RGBA = 0x86AF;
public const uint GL_PROGRAM_BINARY_LENGTH = 0x8741;
public const uint GL_MIRROR_CLAMP_TO_EDGE = 0x8743;
public const uint GL_VERTEX_ATTRIB_ARRAY_LONG = 0x874E;
public const uint GL_BUFFER_SIZE = 0x8764;
public const uint GL_BUFFER_USAGE = 0x8765;
public const uint GL_NUM_PROGRAM_BINARY_FORMATS = 0x87FE;
public const uint GL_PROGRAM_BINARY_FORMATS = 0x87FF;
public const uint GL_STENCIL_BACK_FUNC = 0x8800;
public const uint GL_STENCIL_BACK_FAIL = 0x8801;
public const uint GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
public const uint GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
public const uint GL_RGBA32F = 0x8814;
public const uint GL_RGB32F = 0x8815;
public const uint GL_RGBA16F = 0x881A;
public const uint GL_RGB16F = 0x881B;
public const uint GL_MAX_DRAW_BUFFERS = 0x8824;
public const uint GL_DRAW_BUFFER0 = 0x8825;
public const uint GL_DRAW_BUFFER1 = 0x8826;
public const uint GL_DRAW_BUFFER2 = 0x8827;
public const uint GL_DRAW_BUFFER3 = 0x8828;
public const uint GL_DRAW_BUFFER4 = 0x8829;
public const uint GL_DRAW_BUFFER5 = 0x882A;
public const uint GL_DRAW_BUFFER6 = 0x882B;
public const uint GL_DRAW_BUFFER7 = 0x882C;
public const uint GL_DRAW_BUFFER8 = 0x882D;
public const uint GL_DRAW_BUFFER9 = 0x882E;
public const uint GL_DRAW_BUFFER10 = 0x882F;
public const uint GL_DRAW_BUFFER11 = 0x8830;
public const uint GL_DRAW_BUFFER12 = 0x8831;
public const uint GL_DRAW_BUFFER13 = 0x8832;
public const uint GL_DRAW_BUFFER14 = 0x8833;
public const uint GL_DRAW_BUFFER15 = 0x8834;
public const uint GL_BLEND_EQUATION_ALPHA = 0x883D;
public const uint GL_TEXTURE_DEPTH_SIZE = 0x884A;
public const uint GL_DEPTH_TEXTURE_MODE = 0x884B;
public const uint GL_TEXTURE_COMPARE_MODE = 0x884C;
public const uint GL_TEXTURE_COMPARE_FUNC = 0x884D;
public const uint GL_COMPARE_R_TO_TEXTURE = 0x884E;
public const uint GL_COMPARE_REF_TO_TEXTURE = 0x884E;
public const uint GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F;
public const uint GL_POINT_SPRITE = 0x8861;
public const uint GL_COORD_REPLACE = 0x8862;
public const uint GL_QUERY_COUNTER_BITS = 0x8864;
public const uint GL_CURRENT_QUERY = 0x8865;
public const uint GL_QUERY_RESULT = 0x8866;
public const uint GL_QUERY_RESULT_AVAILABLE = 0x8867;
public const uint GL_MAX_VERTEX_ATTRIBS = 0x8869;
public const uint GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
public const uint GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C;
public const uint GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D;
public const uint GL_MAX_TEXTURE_COORDS = 0x8871;
public const uint GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;
public const uint GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F;
public const uint GL_ARRAY_BUFFER = 0x8892;
public const uint GL_ELEMENT_ARRAY_BUFFER = 0x8893;
public const uint GL_ARRAY_BUFFER_BINDING = 0x8894;
public const uint GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;
public const uint GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896;
public const uint GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897;
public const uint GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898;
public const uint GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899;
public const uint GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889A;
public const uint GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889B;
public const uint GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889C;
public const uint GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889D;
public const uint GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889D;
public const uint GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889E;
public const uint GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;
public const uint GL_READ_ONLY = 0x88B8;
public const uint GL_WRITE_ONLY = 0x88B9;
public const uint GL_READ_WRITE = 0x88BA;
public const uint GL_BUFFER_ACCESS = 0x88BB;
public const uint GL_BUFFER_MAPPED = 0x88BC;
public const uint GL_BUFFER_MAP_POINTER = 0x88BD;
public const uint GL_TIME_ELAPSED = 0x88BF;
public const uint GL_STREAM_DRAW = 0x88E0;
public const uint GL_STREAM_READ = 0x88E1;
public const uint GL_STREAM_COPY = 0x88E2;
public const uint GL_STATIC_DRAW = 0x88E4;
public const uint GL_STATIC_READ = 0x88E5;
public const uint GL_STATIC_COPY = 0x88E6;
public const uint GL_DYNAMIC_DRAW = 0x88E8;
public const uint GL_DYNAMIC_READ = 0x88E9;
public const uint GL_DYNAMIC_COPY = 0x88EA;
public const uint GL_PIXEL_PACK_BUFFER = 0x88EB;
public const uint GL_PIXEL_UNPACK_BUFFER = 0x88EC;
public const uint GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED;
public const uint GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF;
public const uint GL_DEPTH24_STENCIL8 = 0x88F0;
public const uint GL_TEXTURE_STENCIL_SIZE = 0x88F1;
public const uint GL_SRC1_COLOR = 0x88F9;
public const uint GL_ONE_MINUS_SRC1_COLOR = 0x88FA;
public const uint GL_ONE_MINUS_SRC1_ALPHA = 0x88FB;
public const uint GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC;
public const uint GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD;
public const uint GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE;
public const uint GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF;
public const uint GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904;
public const uint GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905;
public const uint GL_SAMPLES_PASSED = 0x8914;
public const uint GL_GEOMETRY_VERTICES_OUT = 0x8916;
public const uint GL_GEOMETRY_INPUT_TYPE = 0x8917;
public const uint GL_GEOMETRY_OUTPUT_TYPE = 0x8918;
public const uint GL_SAMPLER_BINDING = 0x8919;
public const uint GL_CLAMP_VERTEX_COLOR = 0x891A;
public const uint GL_CLAMP_FRAGMENT_COLOR = 0x891B;
public const uint GL_CLAMP_READ_COLOR = 0x891C;
public const uint GL_FIXED_ONLY = 0x891D;
public const uint GL_UNIFORM_BUFFER = 0x8A11;
public const uint GL_UNIFORM_BUFFER_BINDING = 0x8A28;
public const uint GL_UNIFORM_BUFFER_START = 0x8A29;
public const uint GL_UNIFORM_BUFFER_SIZE = 0x8A2A;
public const uint GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B;
public const uint GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8A2C;
public const uint GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D;
public const uint GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E;
public const uint GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F;
public const uint GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30;
public const uint GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31;
public const uint GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8A32;
public const uint GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33;
public const uint GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34;
public const uint GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35;
public const uint GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36;
public const uint GL_UNIFORM_TYPE = 0x8A37;
public const uint GL_UNIFORM_SIZE = 0x8A38;
public const uint GL_UNIFORM_NAME_LENGTH = 0x8A39;
public const uint GL_UNIFORM_BLOCK_INDEX = 0x8A3A;
public const uint GL_UNIFORM_OFFSET = 0x8A3B;
public const uint GL_UNIFORM_ARRAY_STRIDE = 0x8A3C;
public const uint GL_UNIFORM_MATRIX_STRIDE = 0x8A3D;
public const uint GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E;
public const uint GL_UNIFORM_BLOCK_BINDING = 0x8A3F;
public const uint GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40;
public const uint GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41;
public const uint GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42;
public const uint GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43;
public const uint GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44;
public const uint GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8A45;
public const uint GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46;
public const uint GL_FRAGMENT_SHADER = 0x8B30;
public const uint GL_VERTEX_SHADER = 0x8B31;
public const uint GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49;
public const uint GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A;
public const uint GL_MAX_VARYING_FLOATS = 0x8B4B;
public const uint GL_MAX_VARYING_COMPONENTS = 0x8B4B;
public const uint GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
public const uint GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
public const uint GL_SHADER_TYPE = 0x8B4F;
public const uint GL_FLOAT_VEC2 = 0x8B50;
public const uint GL_FLOAT_VEC3 = 0x8B51;
public const uint GL_FLOAT_VEC4 = 0x8B52;
public const uint GL_INT_VEC2 = 0x8B53;
public const uint GL_INT_VEC3 = 0x8B54;
public const uint GL_INT_VEC4 = 0x8B55;
public const uint GL_BOOL = 0x8B56;
public const uint GL_BOOL_VEC2 = 0x8B57;
public const uint GL_BOOL_VEC3 = 0x8B58;
public const uint GL_BOOL_VEC4 = 0x8B59;
public const uint GL_FLOAT_MAT2 = 0x8B5A;
public const uint GL_FLOAT_MAT3 = 0x8B5B;
public const uint GL_FLOAT_MAT4 = 0x8B5C;
public const uint GL_SAMPLER_1D = 0x8B5D;
public const uint GL_SAMPLER_2D = 0x8B5E;
public const uint GL_SAMPLER_3D = 0x8B5F;
public const uint GL_SAMPLER_CUBE = 0x8B60;
public const uint GL_SAMPLER_1D_SHADOW = 0x8B61;
public const uint GL_SAMPLER_2D_SHADOW = 0x8B62;
public const uint GL_SAMPLER_2D_RECT = 0x8B63;
public const uint GL_SAMPLER_2D_RECT_SHADOW = 0x8B64;
public const uint GL_FLOAT_MAT2x3 = 0x8B65;
public const uint GL_FLOAT_MAT2x4 = 0x8B66;
public const uint GL_FLOAT_MAT3x2 = 0x8B67;
public const uint GL_FLOAT_MAT3x4 = 0x8B68;
public const uint GL_FLOAT_MAT4x2 = 0x8B69;
public const uint GL_FLOAT_MAT4x3 = 0x8B6A;
public const uint GL_DELETE_STATUS = 0x8B80;
public const uint GL_COMPILE_STATUS = 0x8B81;
public const uint GL_LINK_STATUS = 0x8B82;
public const uint GL_VALIDATE_STATUS = 0x8B83;
public const uint GL_INFO_LOG_LENGTH = 0x8B84;
public const uint GL_ATTACHED_SHADERS = 0x8B85;
public const uint GL_ACTIVE_UNIFORMS = 0x8B86;
public const uint GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
public const uint GL_SHADER_SOURCE_LENGTH = 0x8B88;
public const uint GL_ACTIVE_ATTRIBUTES = 0x8B89;
public const uint GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
public const uint GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
public const uint GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
public const uint GL_CURRENT_PROGRAM = 0x8B8D;
public const uint GL_IMPLEMENTATION_COLOR_READ_TYPE = 0x8B9A;
public const uint GL_IMPLEMENTATION_COLOR_READ_FORMAT = 0x8B9B;
public const uint GL_TEXTURE_RED_TYPE = 0x8C10;
public const uint GL_TEXTURE_GREEN_TYPE = 0x8C11;
public const uint GL_TEXTURE_BLUE_TYPE = 0x8C12;
public const uint GL_TEXTURE_ALPHA_TYPE = 0x8C13;
public const uint GL_TEXTURE_LUMINANCE_TYPE = 0x8C14;
public const uint GL_TEXTURE_INTENSITY_TYPE = 0x8C15;
public const uint GL_TEXTURE_DEPTH_TYPE = 0x8C16;
public const uint GL_UNSIGNED_NORMALIZED = 0x8C17;
public const uint GL_TEXTURE_1D_ARRAY = 0x8C18;
public const uint GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19;
public const uint GL_TEXTURE_2D_ARRAY = 0x8C1A;
public const uint GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B;
public const uint GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C;
public const uint GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D;
public const uint GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29;
public const uint GL_TEXTURE_BUFFER = 0x8C2A;
public const uint GL_TEXTURE_BUFFER_BINDING = 0x8C2A;
public const uint GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B;
public const uint GL_TEXTURE_BINDING_BUFFER = 0x8C2C;
public const uint GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D;
public const uint GL_ANY_SAMPLES_PASSED = 0x8C2F;
public const uint GL_SAMPLE_SHADING = 0x8C36;
public const uint GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37;
public const uint GL_R11F_G11F_B10F = 0x8C3A;
public const uint GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B;
public const uint GL_RGB9_E5 = 0x8C3D;
public const uint GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E;
public const uint GL_TEXTURE_SHARED_SIZE = 0x8C3F;
public const uint GL_SRGB = 0x8C40;
public const uint GL_SRGB8 = 0x8C41;
public const uint GL_SRGB_ALPHA = 0x8C42;
public const uint GL_SRGB8_ALPHA8 = 0x8C43;
public const uint GL_SLUMINANCE_ALPHA = 0x8C44;
public const uint GL_SLUMINANCE8_ALPHA8 = 0x8C45;
public const uint GL_SLUMINANCE = 0x8C46;
public const uint GL_SLUMINANCE8 = 0x8C47;
public const uint GL_COMPRESSED_SRGB = 0x8C48;
public const uint GL_COMPRESSED_SRGB_ALPHA = 0x8C49;
public const uint GL_COMPRESSED_SLUMINANCE = 0x8C4A;
public const uint GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8C4B;
public const uint GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F;
public const uint GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80;
public const uint GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85;
public const uint GL_PRIMITIVES_GENERATED = 0x8C87;
public const uint GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88;
public const uint GL_RASTERIZER_DISCARD = 0x8C89;
public const uint GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A;
public const uint GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B;
public const uint GL_INTERLEAVED_ATTRIBS = 0x8C8C;
public const uint GL_SEPARATE_ATTRIBS = 0x8C8D;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F;
public const uint GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0;
public const uint GL_LOWER_LEFT = 0x8CA1;
public const uint GL_UPPER_LEFT = 0x8CA2;
public const uint GL_STENCIL_BACK_REF = 0x8CA3;
public const uint GL_STENCIL_BACK_VALUE_MASK = 0x8CA4;
public const uint GL_STENCIL_BACK_WRITEMASK = 0x8CA5;
public const uint GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6;
public const uint GL_FRAMEBUFFER_BINDING = 0x8CA6;
public const uint GL_RENDERBUFFER_BINDING = 0x8CA7;
public const uint GL_READ_FRAMEBUFFER = 0x8CA8;
public const uint GL_DRAW_FRAMEBUFFER = 0x8CA9;
public const uint GL_READ_FRAMEBUFFER_BINDING = 0x8CAA;
public const uint GL_RENDERBUFFER_SAMPLES = 0x8CAB;
public const uint GL_DEPTH_COMPONENT32F = 0x8CAC;
public const uint GL_DEPTH32F_STENCIL8 = 0x8CAD;
public const uint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0;
public const uint GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1;
public const uint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2;
public const uint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3;
public const uint GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4;
public const uint GL_FRAMEBUFFER_COMPLETE = 0x8CD5;
public const uint GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6;
public const uint GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7;
public const uint GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB;
public const uint GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC;
public const uint GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD;
public const uint GL_MAX_COLOR_ATTACHMENTS = 0x8CDF;
public const uint GL_COLOR_ATTACHMENT0 = 0x8CE0;
public const uint GL_COLOR_ATTACHMENT1 = 0x8CE1;
public const uint GL_COLOR_ATTACHMENT2 = 0x8CE2;
public const uint GL_COLOR_ATTACHMENT3 = 0x8CE3;
public const uint GL_COLOR_ATTACHMENT4 = 0x8CE4;
public const uint GL_COLOR_ATTACHMENT5 = 0x8CE5;
public const uint GL_COLOR_ATTACHMENT6 = 0x8CE6;
public const uint GL_COLOR_ATTACHMENT7 = 0x8CE7;
public const uint GL_COLOR_ATTACHMENT8 = 0x8CE8;
public const uint GL_COLOR_ATTACHMENT9 = 0x8CE9;
public const uint GL_COLOR_ATTACHMENT10 = 0x8CEA;
public const uint GL_COLOR_ATTACHMENT11 = 0x8CEB;
public const uint GL_COLOR_ATTACHMENT12 = 0x8CEC;
public const uint GL_COLOR_ATTACHMENT13 = 0x8CED;
public const uint GL_COLOR_ATTACHMENT14 = 0x8CEE;
public const uint GL_COLOR_ATTACHMENT15 = 0x8CEF;
public const uint GL_COLOR_ATTACHMENT16 = 0x8CF0;
public const uint GL_COLOR_ATTACHMENT17 = 0x8CF1;
public const uint GL_COLOR_ATTACHMENT18 = 0x8CF2;
public const uint GL_COLOR_ATTACHMENT19 = 0x8CF3;
public const uint GL_COLOR_ATTACHMENT20 = 0x8CF4;
public const uint GL_COLOR_ATTACHMENT21 = 0x8CF5;
public const uint GL_COLOR_ATTACHMENT22 = 0x8CF6;
public const uint GL_COLOR_ATTACHMENT23 = 0x8CF7;
public const uint GL_COLOR_ATTACHMENT24 = 0x8CF8;
public const uint GL_COLOR_ATTACHMENT25 = 0x8CF9;
public const uint GL_COLOR_ATTACHMENT26 = 0x8CFA;
public const uint GL_COLOR_ATTACHMENT27 = 0x8CFB;
public const uint GL_COLOR_ATTACHMENT28 = 0x8CFC;
public const uint GL_COLOR_ATTACHMENT29 = 0x8CFD;
public const uint GL_COLOR_ATTACHMENT30 = 0x8CFE;
public const uint GL_COLOR_ATTACHMENT31 = 0x8CFF;
public const uint GL_DEPTH_ATTACHMENT = 0x8D00;
public const uint GL_STENCIL_ATTACHMENT = 0x8D20;
public const uint GL_FRAMEBUFFER = 0x8D40;
public const uint GL_RENDERBUFFER = 0x8D41;
public const uint GL_RENDERBUFFER_WIDTH = 0x8D42;
public const uint GL_RENDERBUFFER_HEIGHT = 0x8D43;
public const uint GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44;
public const uint GL_STENCIL_INDEX1 = 0x8D46;
public const uint GL_STENCIL_INDEX4 = 0x8D47;
public const uint GL_STENCIL_INDEX8 = 0x8D48;
public const uint GL_STENCIL_INDEX16 = 0x8D49;
public const uint GL_RENDERBUFFER_RED_SIZE = 0x8D50;
public const uint GL_RENDERBUFFER_GREEN_SIZE = 0x8D51;
public const uint GL_RENDERBUFFER_BLUE_SIZE = 0x8D52;
public const uint GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53;
public const uint GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54;
public const uint GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55;
public const uint GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56;
public const uint GL_MAX_SAMPLES = 0x8D57;
public const uint GL_RGB565 = 0x8D62;
public const uint GL_PRIMITIVE_RESTART_FIXED_INDEX = 0x8D69;
public const uint GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;
public const uint GL_MAX_ELEMENT_INDEX = 0x8D6B;
public const uint GL_RGBA32UI = 0x8D70;
public const uint GL_RGB32UI = 0x8D71;
public const uint GL_RGBA16UI = 0x8D76;
public const uint GL_RGB16UI = 0x8D77;
public const uint GL_RGBA8UI = 0x8D7C;
public const uint GL_RGB8UI = 0x8D7D;
public const uint GL_RGBA32I = 0x8D82;
public const uint GL_RGB32I = 0x8D83;
public const uint GL_RGBA16I = 0x8D88;
public const uint GL_RGB16I = 0x8D89;
public const uint GL_RGBA8I = 0x8D8E;
public const uint GL_RGB8I = 0x8D8F;
public const uint GL_RED_INTEGER = 0x8D94;
public const uint GL_GREEN_INTEGER = 0x8D95;
public const uint GL_BLUE_INTEGER = 0x8D96;
public const uint GL_ALPHA_INTEGER = 0x8D97;
public const uint GL_RGB_INTEGER = 0x8D98;
public const uint GL_RGBA_INTEGER = 0x8D99;
public const uint GL_BGR_INTEGER = 0x8D9A;
public const uint GL_BGRA_INTEGER = 0x8D9B;
public const uint GL_INT_2_10_10_10_REV = 0x8D9F;
public const uint GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7;
public const uint GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8;
public const uint GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD;
public const uint GL_FRAMEBUFFER_SRGB = 0x8DB9;
public const uint GL_COMPRESSED_RED_RGTC1 = 0x8DBB;
public const uint GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC;
public const uint GL_COMPRESSED_RG_RGTC2 = 0x8DBD;
public const uint GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE;
public const uint GL_SAMPLER_1D_ARRAY = 0x8DC0;
public const uint GL_SAMPLER_2D_ARRAY = 0x8DC1;
public const uint GL_SAMPLER_BUFFER = 0x8DC2;
public const uint GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3;
public const uint GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4;
public const uint GL_SAMPLER_CUBE_SHADOW = 0x8DC5;
public const uint GL_UNSIGNED_INT_VEC2 = 0x8DC6;
public const uint GL_UNSIGNED_INT_VEC3 = 0x8DC7;
public const uint GL_UNSIGNED_INT_VEC4 = 0x8DC8;
public const uint GL_INT_SAMPLER_1D = 0x8DC9;
public const uint GL_INT_SAMPLER_2D = 0x8DCA;
public const uint GL_INT_SAMPLER_3D = 0x8DCB;
public const uint GL_INT_SAMPLER_CUBE = 0x8DCC;
public const uint GL_INT_SAMPLER_2D_RECT = 0x8DCD;
public const uint GL_INT_SAMPLER_1D_ARRAY = 0x8DCE;
public const uint GL_INT_SAMPLER_2D_ARRAY = 0x8DCF;
public const uint GL_INT_SAMPLER_BUFFER = 0x8DD0;
public const uint GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1;
public const uint GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2;
public const uint GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3;
public const uint GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4;
public const uint GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5;
public const uint GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6;
public const uint GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7;
public const uint GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8;
public const uint GL_GEOMETRY_SHADER = 0x8DD9;
public const uint GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF;
public const uint GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0;
public const uint GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1;
public const uint GL_ACTIVE_SUBROUTINES = 0x8DE5;
public const uint GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6;
public const uint GL_MAX_SUBROUTINES = 0x8DE7;
public const uint GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8;
public const uint GL_LOW_FLOAT = 0x8DF0;
public const uint GL_MEDIUM_FLOAT = 0x8DF1;
public const uint GL_HIGH_FLOAT = 0x8DF2;
public const uint GL_LOW_INT = 0x8DF3;
public const uint GL_MEDIUM_INT = 0x8DF4;
public const uint GL_HIGH_INT = 0x8DF5;
public const uint GL_SHADER_BINARY_FORMATS = 0x8DF8;
public const uint GL_NUM_SHADER_BINARY_FORMATS = 0x8DF9;
public const uint GL_SHADER_COMPILER = 0x8DFA;
public const uint GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;
public const uint GL_MAX_VARYING_VECTORS = 0x8DFC;
public const uint GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;
public const uint GL_QUERY_WAIT = 0x8E13;
public const uint GL_QUERY_NO_WAIT = 0x8E14;
public const uint GL_QUERY_BY_REGION_WAIT = 0x8E15;
public const uint GL_QUERY_BY_REGION_NO_WAIT = 0x8E16;
public const uint GL_QUERY_WAIT_INVERTED = 0x8E17;
public const uint GL_QUERY_NO_WAIT_INVERTED = 0x8E18;
public const uint GL_QUERY_BY_REGION_WAIT_INVERTED = 0x8E19;
public const uint GL_QUERY_BY_REGION_NO_WAIT_INVERTED = 0x8E1A;
public const uint GL_POLYGON_OFFSET_CLAMP = 0x8E1B;
public const uint GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E;
public const uint GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F;
public const uint GL_TRANSFORM_FEEDBACK = 0x8E22;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23;
public const uint GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24;
public const uint GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24;
public const uint GL_TRANSFORM_FEEDBACK_BINDING = 0x8E25;
public const uint GL_TIMESTAMP = 0x8E28;
public const uint GL_TEXTURE_SWIZZLE_R = 0x8E42;
public const uint GL_TEXTURE_SWIZZLE_G = 0x8E43;
public const uint GL_TEXTURE_SWIZZLE_B = 0x8E44;
public const uint GL_TEXTURE_SWIZZLE_A = 0x8E45;
public const uint GL_TEXTURE_SWIZZLE_RGBA = 0x8E46;
public const uint GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47;
public const uint GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48;
public const uint GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49;
public const uint GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A;
public const uint GL_COMPATIBLE_SUBROUTINES = 0x8E4B;
public const uint GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C;
public const uint GL_FIRST_VERTEX_CONVENTION = 0x8E4D;
public const uint GL_LAST_VERTEX_CONVENTION = 0x8E4E;
public const uint GL_PROVOKING_VERTEX = 0x8E4F;
public const uint GL_SAMPLE_POSITION = 0x8E50;
public const uint GL_SAMPLE_MASK = 0x8E51;
public const uint GL_SAMPLE_MASK_VALUE = 0x8E52;
public const uint GL_MAX_SAMPLE_MASK_WORDS = 0x8E59;
public const uint GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A;
public const uint GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B;
public const uint GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C;
public const uint GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D;
public const uint GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E;
public const uint GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F;
public const uint GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70;
public const uint GL_MAX_VERTEX_STREAMS = 0x8E71;
public const uint GL_PATCH_VERTICES = 0x8E72;
public const uint GL_PATCH_DEFAULT_INNER_LEVEL = 0x8E73;
public const uint GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74;
public const uint GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75;
public const uint GL_TESS_GEN_MODE = 0x8E76;
public const uint GL_TESS_GEN_SPACING = 0x8E77;
public const uint GL_TESS_GEN_VERTEX_ORDER = 0x8E78;
public const uint GL_TESS_GEN_POINT_MODE = 0x8E79;
public const uint GL_ISOLINES = 0x8E7A;
public const uint GL_FRACTIONAL_ODD = 0x8E7B;
public const uint GL_FRACTIONAL_EVEN = 0x8E7C;
public const uint GL_MAX_PATCH_VERTICES = 0x8E7D;
public const uint GL_MAX_TESS_GEN_LEVEL = 0x8E7E;
public const uint GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F;
public const uint GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80;
public const uint GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81;
public const uint GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82;
public const uint GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83;
public const uint GL_MAX_TESS_PATCH_COMPONENTS = 0x8E84;
public const uint GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85;
public const uint GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86;
public const uint GL_TESS_EVALUATION_SHADER = 0x8E87;
public const uint GL_TESS_CONTROL_SHADER = 0x8E88;
public const uint GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89;
public const uint GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A;
public const uint GL_COMPRESSED_RGBA_BPTC_UNORM = 0x8E8C;
public const uint GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 0x8E8D;
public const uint GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 0x8E8E;
public const uint GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 0x8E8F;
public const uint GL_COPY_READ_BUFFER = 0x8F36;
public const uint GL_COPY_READ_BUFFER_BINDING = 0x8F36;
public const uint GL_COPY_WRITE_BUFFER = 0x8F37;
public const uint GL_COPY_WRITE_BUFFER_BINDING = 0x8F37;
public const uint GL_MAX_IMAGE_UNITS = 0x8F38;
public const uint GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS = 0x8F39;
public const uint GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES = 0x8F39;
public const uint GL_IMAGE_BINDING_NAME = 0x8F3A;
public const uint GL_IMAGE_BINDING_LEVEL = 0x8F3B;
public const uint GL_IMAGE_BINDING_LAYERED = 0x8F3C;
public const uint GL_IMAGE_BINDING_LAYER = 0x8F3D;
public const uint GL_IMAGE_BINDING_ACCESS = 0x8F3E;
public const uint GL_DRAW_INDIRECT_BUFFER = 0x8F3F;
public const uint GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43;
public const uint GL_DOUBLE_MAT2 = 0x8F46;
public const uint GL_DOUBLE_MAT3 = 0x8F47;
public const uint GL_DOUBLE_MAT4 = 0x8F48;
public const uint GL_DOUBLE_MAT2x3 = 0x8F49;
public const uint GL_DOUBLE_MAT2x4 = 0x8F4A;
public const uint GL_DOUBLE_MAT3x2 = 0x8F4B;
public const uint GL_DOUBLE_MAT3x4 = 0x8F4C;
public const uint GL_DOUBLE_MAT4x2 = 0x8F4D;
public const uint GL_DOUBLE_MAT4x3 = 0x8F4E;
public const uint GL_VERTEX_BINDING_BUFFER = 0x8F4F;
public const uint GL_R8_SNORM = 0x8F94;
public const uint GL_RG8_SNORM = 0x8F95;
public const uint GL_RGB8_SNORM = 0x8F96;
public const uint GL_RGBA8_SNORM = 0x8F97;
public const uint GL_R16_SNORM = 0x8F98;
public const uint GL_RG16_SNORM = 0x8F99;
public const uint GL_RGB16_SNORM = 0x8F9A;
public const uint GL_RGBA16_SNORM = 0x8F9B;
public const uint GL_SIGNED_NORMALIZED = 0x8F9C;
public const uint GL_PRIMITIVE_RESTART = 0x8F9D;
public const uint GL_PRIMITIVE_RESTART_INDEX = 0x8F9E;
public const uint GL_DOUBLE_VEC2 = 0x8FFC;
public const uint GL_DOUBLE_VEC3 = 0x8FFD;
public const uint GL_DOUBLE_VEC4 = 0x8FFE;
public const uint GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009;
public const uint GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A;
public const uint GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B;
public const uint GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C;
public const uint GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D;
public const uint GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E;
public const uint GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F;
public const uint GL_IMAGE_1D = 0x904C;
public const uint GL_IMAGE_2D = 0x904D;
public const uint GL_IMAGE_3D = 0x904E;
public const uint GL_IMAGE_2D_RECT = 0x904F;
public const uint GL_IMAGE_CUBE = 0x9050;
public const uint GL_IMAGE_BUFFER = 0x9051;
public const uint GL_IMAGE_1D_ARRAY = 0x9052;
public const uint GL_IMAGE_2D_ARRAY = 0x9053;
public const uint GL_IMAGE_CUBE_MAP_ARRAY = 0x9054;
public const uint GL_IMAGE_2D_MULTISAMPLE = 0x9055;
public const uint GL_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9056;
public const uint GL_INT_IMAGE_1D = 0x9057;
public const uint GL_INT_IMAGE_2D = 0x9058;
public const uint GL_INT_IMAGE_3D = 0x9059;
public const uint GL_INT_IMAGE_2D_RECT = 0x905A;
public const uint GL_INT_IMAGE_CUBE = 0x905B;
public const uint GL_INT_IMAGE_BUFFER = 0x905C;
public const uint GL_INT_IMAGE_1D_ARRAY = 0x905D;
public const uint GL_INT_IMAGE_2D_ARRAY = 0x905E;
public const uint GL_INT_IMAGE_CUBE_MAP_ARRAY = 0x905F;
public const uint GL_INT_IMAGE_2D_MULTISAMPLE = 0x9060;
public const uint GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x9061;
public const uint GL_UNSIGNED_INT_IMAGE_1D = 0x9062;
public const uint GL_UNSIGNED_INT_IMAGE_2D = 0x9063;
public const uint GL_UNSIGNED_INT_IMAGE_3D = 0x9064;
public const uint GL_UNSIGNED_INT_IMAGE_2D_RECT = 0x9065;
public const uint GL_UNSIGNED_INT_IMAGE_CUBE = 0x9066;
public const uint GL_UNSIGNED_INT_IMAGE_BUFFER = 0x9067;
public const uint GL_UNSIGNED_INT_IMAGE_1D_ARRAY = 0x9068;
public const uint GL_UNSIGNED_INT_IMAGE_2D_ARRAY = 0x9069;
public const uint GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY = 0x906A;
public const uint GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE = 0x906B;
public const uint GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY = 0x906C;
public const uint GL_MAX_IMAGE_SAMPLES = 0x906D;
public const uint GL_IMAGE_BINDING_FORMAT = 0x906E;
public const uint GL_RGB10_A2UI = 0x906F;
public const uint GL_MIN_MAP_BUFFER_ALIGNMENT = 0x90BC;
public const uint GL_IMAGE_FORMAT_COMPATIBILITY_TYPE = 0x90C7;
public const uint GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE = 0x90C8;
public const uint GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS = 0x90C9;
public const uint GL_MAX_VERTEX_IMAGE_UNIFORMS = 0x90CA;
public const uint GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS = 0x90CB;
public const uint GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS = 0x90CC;
public const uint GL_MAX_GEOMETRY_IMAGE_UNIFORMS = 0x90CD;
public const uint GL_MAX_FRAGMENT_IMAGE_UNIFORMS = 0x90CE;
public const uint GL_MAX_COMBINED_IMAGE_UNIFORMS = 0x90CF;
public const uint GL_SHADER_STORAGE_BUFFER = 0x90D2;
public const uint GL_SHADER_STORAGE_BUFFER_BINDING = 0x90D3;
public const uint GL_SHADER_STORAGE_BUFFER_START = 0x90D4;
public const uint GL_SHADER_STORAGE_BUFFER_SIZE = 0x90D5;
public const uint GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS = 0x90D6;
public const uint GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS = 0x90D7;
public const uint GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS = 0x90D8;
public const uint GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS = 0x90D9;
public const uint GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS = 0x90DA;
public const uint GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS = 0x90DB;
public const uint GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS = 0x90DC;
public const uint GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS = 0x90DD;
public const uint GL_MAX_SHADER_STORAGE_BLOCK_SIZE = 0x90DE;
public const uint GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT = 0x90DF;
public const uint GL_DEPTH_STENCIL_TEXTURE_MODE = 0x90EA;
public const uint GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS = 0x90EB;
public const uint GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER = 0x90EC;
public const uint GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER = 0x90ED;
public const uint GL_DISPATCH_INDIRECT_BUFFER = 0x90EE;
public const uint GL_DISPATCH_INDIRECT_BUFFER_BINDING = 0x90EF;
public const uint GL_TEXTURE_2D_MULTISAMPLE = 0x9100;
public const uint GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101;
public const uint GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102;
public const uint GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103;
public const uint GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104;
public const uint GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105;
public const uint GL_TEXTURE_SAMPLES = 0x9106;
public const uint GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107;
public const uint GL_SAMPLER_2D_MULTISAMPLE = 0x9108;
public const uint GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109;
public const uint GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A;
public const uint GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B;
public const uint GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C;
public const uint GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D;
public const uint GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E;
public const uint GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F;
public const uint GL_MAX_INTEGER_SAMPLES = 0x9110;
public const uint GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111;
public const uint GL_OBJECT_TYPE = 0x9112;
public const uint GL_SYNC_CONDITION = 0x9113;
public const uint GL_SYNC_STATUS = 0x9114;
public const uint GL_SYNC_FLAGS = 0x9115;
public const uint GL_SYNC_FENCE = 0x9116;
public const uint GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117;
public const uint GL_UNSIGNALED = 0x9118;
public const uint GL_SIGNALED = 0x9119;
public const uint GL_ALREADY_SIGNALED = 0x911A;
public const uint GL_TIMEOUT_EXPIRED = 0x911B;
public const uint GL_CONDITION_SATISFIED = 0x911C;
public const uint GL_WAIT_FAILED = 0x911D;
public const uint GL_BUFFER_ACCESS_FLAGS = 0x911F;
public const uint GL_BUFFER_MAP_LENGTH = 0x9120;
public const uint GL_BUFFER_MAP_OFFSET = 0x9121;
public const uint GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122;
public const uint GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123;
public const uint GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124;
public const uint GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125;
public const uint GL_CONTEXT_PROFILE_MASK = 0x9126;
public const uint GL_UNPACK_COMPRESSED_BLOCK_WIDTH = 0x9127;
public const uint GL_UNPACK_COMPRESSED_BLOCK_HEIGHT = 0x9128;
public const uint GL_UNPACK_COMPRESSED_BLOCK_DEPTH = 0x9129;
public const uint GL_UNPACK_COMPRESSED_BLOCK_SIZE = 0x912A;
public const uint GL_PACK_COMPRESSED_BLOCK_WIDTH = 0x912B;
public const uint GL_PACK_COMPRESSED_BLOCK_HEIGHT = 0x912C;
public const uint GL_PACK_COMPRESSED_BLOCK_DEPTH = 0x912D;
public const uint GL_PACK_COMPRESSED_BLOCK_SIZE = 0x912E;
public const uint GL_TEXTURE_IMMUTABLE_FORMAT = 0x912F;
public const uint GL_MAX_DEBUG_MESSAGE_LENGTH = 0x9143;
public const uint GL_MAX_DEBUG_LOGGED_MESSAGES = 0x9144;
public const uint GL_DEBUG_LOGGED_MESSAGES = 0x9145;
public const uint GL_DEBUG_SEVERITY_HIGH = 0x9146;
public const uint GL_DEBUG_SEVERITY_MEDIUM = 0x9147;
public const uint GL_DEBUG_SEVERITY_LOW = 0x9148;
public const uint GL_QUERY_BUFFER = 0x9192;
public const uint GL_QUERY_BUFFER_BINDING = 0x9193;
public const uint GL_QUERY_RESULT_NO_WAIT = 0x9194;
public const uint GL_TEXTURE_BUFFER_OFFSET = 0x919D;
public const uint GL_TEXTURE_BUFFER_SIZE = 0x919E;
public const uint GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT = 0x919F;
public const uint GL_COMPUTE_SHADER = 0x91B9;
public const uint GL_MAX_COMPUTE_UNIFORM_BLOCKS = 0x91BB;
public const uint GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS = 0x91BC;
public const uint GL_MAX_COMPUTE_IMAGE_UNIFORMS = 0x91BD;
public const uint GL_MAX_COMPUTE_WORK_GROUP_COUNT = 0x91BE;
public const uint GL_MAX_COMPUTE_WORK_GROUP_SIZE = 0x91BF;
public const uint GL_COMPRESSED_R11_EAC = 0x9270;
public const uint GL_COMPRESSED_SIGNED_R11_EAC = 0x9271;
public const uint GL_COMPRESSED_RG11_EAC = 0x9272;
public const uint GL_COMPRESSED_SIGNED_RG11_EAC = 0x9273;
public const uint GL_COMPRESSED_RGB8_ETC2 = 0x9274;
public const uint GL_COMPRESSED_SRGB8_ETC2 = 0x9275;
public const uint GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276;
public const uint GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277;
public const uint GL_COMPRESSED_RGBA8_ETC2_EAC = 0x9278;
public const uint GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279;
public const uint GL_ATOMIC_COUNTER_BUFFER = 0x92C0;
public const uint GL_ATOMIC_COUNTER_BUFFER_BINDING = 0x92C1;
public const uint GL_ATOMIC_COUNTER_BUFFER_START = 0x92C2;
public const uint GL_ATOMIC_COUNTER_BUFFER_SIZE = 0x92C3;
public const uint GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE = 0x92C4;
public const uint GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS = 0x92C5;
public const uint GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES = 0x92C6;
public const uint GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER = 0x92C7;
public const uint GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER = 0x92C8;
public const uint GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x92C9;
public const uint GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER = 0x92CA;
public const uint GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER = 0x92CB;
public const uint GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS = 0x92CC;
public const uint GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS = 0x92CD;
public const uint GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS = 0x92CE;
public const uint GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS = 0x92CF;
public const uint GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS = 0x92D0;
public const uint GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS = 0x92D1;
public const uint GL_MAX_VERTEX_ATOMIC_COUNTERS = 0x92D2;
public const uint GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS = 0x92D3;
public const uint GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS = 0x92D4;
public const uint GL_MAX_GEOMETRY_ATOMIC_COUNTERS = 0x92D5;
public const uint GL_MAX_FRAGMENT_ATOMIC_COUNTERS = 0x92D6;
public const uint GL_MAX_COMBINED_ATOMIC_COUNTERS = 0x92D7;
public const uint GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE = 0x92D8;
public const uint GL_ACTIVE_ATOMIC_COUNTER_BUFFERS = 0x92D9;
public const uint GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX = 0x92DA;
public const uint GL_UNSIGNED_INT_ATOMIC_COUNTER = 0x92DB;
public const uint GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS = 0x92DC;
public const uint GL_DEBUG_OUTPUT = 0x92E0;
public const uint GL_UNIFORM = 0x92E1;
public const uint GL_UNIFORM_BLOCK = 0x92E2;
public const uint GL_PROGRAM_INPUT = 0x92E3;
public const uint GL_PROGRAM_OUTPUT = 0x92E4;
public const uint GL_BUFFER_VARIABLE = 0x92E5;
public const uint GL_SHADER_STORAGE_BLOCK = 0x92E6;
public const uint GL_IS_PER_PATCH = 0x92E7;
public const uint GL_VERTEX_SUBROUTINE = 0x92E8;
public const uint GL_TESS_CONTROL_SUBROUTINE = 0x92E9;
public const uint GL_TESS_EVALUATION_SUBROUTINE = 0x92EA;
public const uint GL_GEOMETRY_SUBROUTINE = 0x92EB;
public const uint GL_FRAGMENT_SUBROUTINE = 0x92EC;
public const uint GL_COMPUTE_SUBROUTINE = 0x92ED;
public const uint GL_VERTEX_SUBROUTINE_UNIFORM = 0x92EE;
public const uint GL_TESS_CONTROL_SUBROUTINE_UNIFORM = 0x92EF;
public const uint GL_TESS_EVALUATION_SUBROUTINE_UNIFORM = 0x92F0;
public const uint GL_GEOMETRY_SUBROUTINE_UNIFORM = 0x92F1;
public const uint GL_FRAGMENT_SUBROUTINE_UNIFORM = 0x92F2;
public const uint GL_COMPUTE_SUBROUTINE_UNIFORM = 0x92F3;
public const uint GL_TRANSFORM_FEEDBACK_VARYING = 0x92F4;
public const uint GL_ACTIVE_RESOURCES = 0x92F5;
public const uint GL_MAX_NAME_LENGTH = 0x92F6;
public const uint GL_MAX_NUM_ACTIVE_VARIABLES = 0x92F7;
public const uint GL_MAX_NUM_COMPATIBLE_SUBROUTINES = 0x92F8;
public const uint GL_NAME_LENGTH = 0x92F9;
public const uint GL_TYPE = 0x92FA;
public const uint GL_ARRAY_SIZE = 0x92FB;
public const uint GL_OFFSET = 0x92FC;
public const uint GL_BLOCK_INDEX = 0x92FD;
public const uint GL_ARRAY_STRIDE = 0x92FE;
public const uint GL_MATRIX_STRIDE = 0x92FF;
public const uint GL_IS_ROW_MAJOR = 0x9300;
public const uint GL_ATOMIC_COUNTER_BUFFER_INDEX = 0x9301;
public const uint GL_BUFFER_BINDING = 0x9302;
public const uint GL_BUFFER_DATA_SIZE = 0x9303;
public const uint GL_NUM_ACTIVE_VARIABLES = 0x9304;
public const uint GL_ACTIVE_VARIABLES = 0x9305;
public const uint GL_REFERENCED_BY_VERTEX_SHADER = 0x9306;
public const uint GL_REFERENCED_BY_TESS_CONTROL_SHADER = 0x9307;
public const uint GL_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x9308;
public const uint GL_REFERENCED_BY_GEOMETRY_SHADER = 0x9309;
public const uint GL_REFERENCED_BY_FRAGMENT_SHADER = 0x930A;
public const uint GL_REFERENCED_BY_COMPUTE_SHADER = 0x930B;
public const uint GL_TOP_LEVEL_ARRAY_SIZE = 0x930C;
public const uint GL_TOP_LEVEL_ARRAY_STRIDE = 0x930D;
public const uint GL_LOCATION = 0x930E;
public const uint GL_LOCATION_INDEX = 0x930F;
public const uint GL_FRAMEBUFFER_DEFAULT_WIDTH = 0x9310;
public const uint GL_FRAMEBUFFER_DEFAULT_HEIGHT = 0x9311;
public const uint GL_FRAMEBUFFER_DEFAULT_LAYERS = 0x9312;
public const uint GL_FRAMEBUFFER_DEFAULT_SAMPLES = 0x9313;
public const uint GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS = 0x9314;
public const uint GL_MAX_FRAMEBUFFER_WIDTH = 0x9315;
public const uint GL_MAX_FRAMEBUFFER_HEIGHT = 0x9316;
public const uint GL_MAX_FRAMEBUFFER_LAYERS = 0x9317;
public const uint GL_MAX_FRAMEBUFFER_SAMPLES = 0x9318;
public const uint GL_LOCATION_COMPONENT = 0x934A;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER_INDEX = 0x934B;
public const uint GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE = 0x934C;
public const uint GL_CLIP_ORIGIN = 0x935C;
public const uint GL_CLIP_DEPTH_MODE = 0x935D;
public const uint GL_NEGATIVE_ONE_TO_ONE = 0x935E;
public const uint GL_ZERO_TO_ONE = 0x935F;
public const uint GL_CLEAR_TEXTURE = 0x9365;
public const uint GL_NUM_SAMPLE_COUNTS = 0x9380;
public const uint GL_SHADER_BINARY_FORMAT_SPIR_V = 0x9551;
public const uint GL_SPIR_V_BINARY = 0x9552;
public const uint GL_SPIR_V_EXTENSIONS = 0x9553;
public const uint GL_NUM_SPIR_V_EXTENSIONS = 0x9554;
public static glAccumDelegate glAccum;
public static glActiveShaderProgramDelegate glActiveShaderProgram;
public static glActiveTextureDelegate glActiveTexture;
public static glAlphaFuncDelegate glAlphaFunc;
public static glAreTexturesResidentDelegate glAreTexturesResident;
public static glArrayElementDelegate glArrayElement;
public static glAttachShaderDelegate glAttachShader;
public static glBeginDelegate glBegin;
public static glBeginConditionalRenderDelegate glBeginConditionalRender;
public static glBeginQueryDelegate glBeginQuery;
public static glBeginQueryIndexedDelegate glBeginQueryIndexed;
public static glBeginTransformFeedbackDelegate glBeginTransformFeedback;
public static glBindAttribLocationDelegate glBindAttribLocation;
public static glBindBufferDelegate glBindBuffer;
public static glBindBufferBaseDelegate glBindBufferBase;
public static glBindBufferRangeDelegate glBindBufferRange;
public static glBindBuffersBaseDelegate glBindBuffersBase;
public static glBindBuffersRangeDelegate glBindBuffersRange;
public static glBindFragDataLocationDelegate glBindFragDataLocation;
public static glBindFragDataLocationIndexedDelegate glBindFragDataLocationIndexed;
public static glBindFramebufferDelegate glBindFramebuffer;
public static glBindImageTextureDelegate glBindImageTexture;
public static glBindImageTexturesDelegate glBindImageTextures;
public static glBindProgramPipelineDelegate glBindProgramPipeline;
public static glBindRenderbufferDelegate glBindRenderbuffer;
public static glBindSamplerDelegate glBindSampler;
public static glBindSamplersDelegate glBindSamplers;
public static glBindTextureDelegate glBindTexture;
public static glBindTextureUnitDelegate glBindTextureUnit;
public static glBindTexturesDelegate glBindTextures;
public static glBindTransformFeedbackDelegate glBindTransformFeedback;
public static glBindVertexArrayDelegate glBindVertexArray;
public static glBindVertexBufferDelegate glBindVertexBuffer;
public static glBindVertexBuffersDelegate glBindVertexBuffers;
public static glBitmapDelegate glBitmap;
public static glBlendColorDelegate glBlendColor;
public static glBlendEquationDelegate glBlendEquation;
public static glBlendEquationSeparateDelegate glBlendEquationSeparate;
public static glBlendEquationSeparateiDelegate glBlendEquationSeparatei;
public static glBlendEquationiDelegate glBlendEquationi;
public static glBlendFuncDelegate glBlendFunc;
public static glBlendFuncSeparateDelegate glBlendFuncSeparate;
public static glBlendFuncSeparateiDelegate glBlendFuncSeparatei;
public static glBlendFunciDelegate glBlendFunci;
public static glBlitFramebufferDelegate glBlitFramebuffer;
public static glBlitNamedFramebufferDelegate glBlitNamedFramebuffer;
public static glBufferDataDelegate glBufferData;
public static glBufferStorageDelegate glBufferStorage;
public static glBufferSubDataDelegate glBufferSubData;
public static glCallListDelegate glCallList;
public static glCallListsDelegate glCallLists;
public static glCheckFramebufferStatusDelegate glCheckFramebufferStatus;
public static glCheckNamedFramebufferStatusDelegate glCheckNamedFramebufferStatus;
public static glClampColorDelegate glClampColor;
public static glClearDelegate glClear;
public static glClearAccumDelegate glClearAccum;
public static glClearBufferDataDelegate glClearBufferData;
public static glClearBufferSubDataDelegate glClearBufferSubData;
public static glClearBufferfiDelegate glClearBufferfi;
public static glClearBufferfvDelegate glClearBufferfv;
public static glClearBufferivDelegate glClearBufferiv;
public static glClearBufferuivDelegate glClearBufferuiv;
public static glClearColorDelegate glClearColor;
public static glClearDepthDelegate glClearDepth;
public static glClearDepthfDelegate glClearDepthf;
public static glClearIndexDelegate glClearIndex;
public static glClearNamedBufferDataDelegate glClearNamedBufferData;
public static glClearNamedBufferSubDataDelegate glClearNamedBufferSubData;
public static glClearNamedFramebufferfiDelegate glClearNamedFramebufferfi;
public static glClearNamedFramebufferfvDelegate glClearNamedFramebufferfv;
public static glClearNamedFramebufferivDelegate glClearNamedFramebufferiv;
public static glClearNamedFramebufferuivDelegate glClearNamedFramebufferuiv;
public static glClearStencilDelegate glClearStencil;
public static glClearTexImageDelegate glClearTexImage;
public static glClearTexSubImageDelegate glClearTexSubImage;
public static glClientActiveTextureDelegate glClientActiveTexture;
public static glClipControlDelegate glClipControl;
public static glClipPlaneDelegate glClipPlane;
public static glColor3bDelegate glColor3b;
public static glColor3bvDelegate glColor3bv;
public static glColor3dDelegate glColor3d;
public static glColor3dvDelegate glColor3dv;
public static glColor3fDelegate glColor3f;
public static glColor3fvDelegate glColor3fv;
public static glColor3iDelegate glColor3i;
public static glColor3ivDelegate glColor3iv;
public static glColor3sDelegate glColor3s;
public static glColor3svDelegate glColor3sv;
public static glColor3ubDelegate glColor3ub;
public static glColor3ubvDelegate glColor3ubv;
public static glColor3uiDelegate glColor3ui;
public static glColor3uivDelegate glColor3uiv;
public static glColor3usDelegate glColor3us;
public static glColor3usvDelegate glColor3usv;
public static glColor4bDelegate glColor4b;
public static glColor4bvDelegate glColor4bv;
public static glColor4dDelegate glColor4d;
public static glColor4dvDelegate glColor4dv;
public static glColor4fDelegate glColor4f;
public static glColor4fvDelegate glColor4fv;
public static glColor4iDelegate glColor4i;
public static glColor4ivDelegate glColor4iv;
public static glColor4sDelegate glColor4s;
public static glColor4svDelegate glColor4sv;
public static glColor4ubDelegate glColor4ub;
public static glColor4ubvDelegate glColor4ubv;
public static glColor4uiDelegate glColor4ui;
public static glColor4uivDelegate glColor4uiv;
public static glColor4usDelegate glColor4us;
public static glColor4usvDelegate glColor4usv;
public static glColorMaskDelegate glColorMask;
public static glColorMaskiDelegate glColorMaski;
public static glColorMaterialDelegate glColorMaterial;
public static glColorP3uiDelegate glColorP3ui;
public static glColorP3uivDelegate glColorP3uiv;
public static glColorP4uiDelegate glColorP4ui;
public static glColorP4uivDelegate glColorP4uiv;
public static glColorPointerDelegate glColorPointer;
public static glCompileShaderDelegate glCompileShader;
public static glCompressedTexImage1DDelegate glCompressedTexImage1D;
public static glCompressedTexImage2DDelegate glCompressedTexImage2D;
public static glCompressedTexImage3DDelegate glCompressedTexImage3D;
public static glCompressedTexSubImage1DDelegate glCompressedTexSubImage1D;
public static glCompressedTexSubImage2DDelegate glCompressedTexSubImage2D;
public static glCompressedTexSubImage3DDelegate glCompressedTexSubImage3D;
public static glCompressedTextureSubImage1DDelegate glCompressedTextureSubImage1D;
public static glCompressedTextureSubImage2DDelegate glCompressedTextureSubImage2D;
public static glCompressedTextureSubImage3DDelegate glCompressedTextureSubImage3D;
public static glCopyBufferSubDataDelegate glCopyBufferSubData;
public static glCopyImageSubDataDelegate glCopyImageSubData;
public static glCopyNamedBufferSubDataDelegate glCopyNamedBufferSubData;
public static glCopyPixelsDelegate glCopyPixels;
public static glCopyTexImage1DDelegate glCopyTexImage1D;
public static glCopyTexImage2DDelegate glCopyTexImage2D;
public static glCopyTexSubImage1DDelegate glCopyTexSubImage1D;
public static glCopyTexSubImage2DDelegate glCopyTexSubImage2D;
public static glCopyTexSubImage3DDelegate glCopyTexSubImage3D;
public static glCopyTextureSubImage1DDelegate glCopyTextureSubImage1D;
public static glCopyTextureSubImage2DDelegate glCopyTextureSubImage2D;
public static glCopyTextureSubImage3DDelegate glCopyTextureSubImage3D;
public static glCreateBuffersDelegate glCreateBuffers;
public static glCreateFramebuffersDelegate glCreateFramebuffers;
public static glCreateProgramDelegate glCreateProgram;
public static glCreateProgramPipelinesDelegate glCreateProgramPipelines;
public static glCreateQueriesDelegate glCreateQueries;
public static glCreateRenderbuffersDelegate glCreateRenderbuffers;
public static glCreateSamplersDelegate glCreateSamplers;
public static glCreateShaderDelegate glCreateShader;
public static glCreateShaderProgramvDelegate glCreateShaderProgramv;
public static glCreateTexturesDelegate glCreateTextures;
public static glCreateTransformFeedbacksDelegate glCreateTransformFeedbacks;
public static glCreateVertexArraysDelegate glCreateVertexArrays;
public static glCullFaceDelegate glCullFace;
public static glDebugMessageControlDelegate glDebugMessageControl;
public static glDebugMessageInsertDelegate glDebugMessageInsert;
public static glDeleteBuffersDelegate glDeleteBuffers;
public static glDeleteFramebuffersDelegate glDeleteFramebuffers;
public static glDeleteListsDelegate glDeleteLists;
public static glDeleteProgramDelegate glDeleteProgram;
public static glDeleteProgramPipelinesDelegate glDeleteProgramPipelines;
public static glDeleteQueriesDelegate glDeleteQueries;
public static glDeleteRenderbuffersDelegate glDeleteRenderbuffers;
public static glDeleteSamplersDelegate glDeleteSamplers;
public static glDeleteShaderDelegate glDeleteShader;
public static glDeleteTexturesDelegate glDeleteTextures;
public static glDeleteTransformFeedbacksDelegate glDeleteTransformFeedbacks;
public static glDeleteVertexArraysDelegate glDeleteVertexArrays;
public static glDepthFuncDelegate glDepthFunc;
public static glDepthMaskDelegate glDepthMask;
public static glDepthRangeDelegate glDepthRange;
public static glDepthRangeArrayvDelegate glDepthRangeArrayv;
public static glDepthRangeIndexedDelegate glDepthRangeIndexed;
public static glDepthRangefDelegate glDepthRangef;
public static glDetachShaderDelegate glDetachShader;
public static glDisableDelegate glDisable;
public static glDisableClientStateDelegate glDisableClientState;
public static glDisableVertexArrayAttribDelegate glDisableVertexArrayAttrib;
public static glDisableVertexAttribArrayDelegate glDisableVertexAttribArray;
public static glDisableiDelegate glDisablei;
public static glDispatchComputeDelegate glDispatchCompute;
public static glDispatchComputeIndirectDelegate glDispatchComputeIndirect;
public static glDrawArraysDelegate glDrawArrays;
public static glDrawArraysIndirectDelegate glDrawArraysIndirect;
public static glDrawArraysInstancedDelegate glDrawArraysInstanced;
public static glDrawArraysInstancedBaseInstanceDelegate glDrawArraysInstancedBaseInstance;
public static glDrawBufferDelegate glDrawBuffer;
public static glDrawBuffersDelegate glDrawBuffers;
public static glDrawElementsDelegate glDrawElements;
public static glDrawElementsBaseVertexDelegate glDrawElementsBaseVertex;
public static glDrawElementsIndirectDelegate glDrawElementsIndirect;
public static glDrawElementsInstancedDelegate glDrawElementsInstanced;
public static glDrawElementsInstancedBaseInstanceDelegate glDrawElementsInstancedBaseInstance;
public static glDrawElementsInstancedBaseVertexDelegate glDrawElementsInstancedBaseVertex;
public static glDrawElementsInstancedBaseVertexBaseInstanceDelegate glDrawElementsInstancedBaseVertexBaseInstance;
public static glDrawPixelsDelegate glDrawPixels;
public static glDrawRangeElementsDelegate glDrawRangeElements;
public static glDrawRangeElementsBaseVertexDelegate glDrawRangeElementsBaseVertex;
public static glDrawTransformFeedbackDelegate glDrawTransformFeedback;
public static glDrawTransformFeedbackInstancedDelegate glDrawTransformFeedbackInstanced;
public static glDrawTransformFeedbackStreamDelegate glDrawTransformFeedbackStream;
public static glDrawTransformFeedbackStreamInstancedDelegate glDrawTransformFeedbackStreamInstanced;
public static glEdgeFlagDelegate glEdgeFlag;
public static glEdgeFlagPointerDelegate glEdgeFlagPointer;
public static glEdgeFlagvDelegate glEdgeFlagv;
public static glEnableDelegate glEnable;
public static glEnableClientStateDelegate glEnableClientState;
public static glEnableVertexArrayAttribDelegate glEnableVertexArrayAttrib;
public static glEnableVertexAttribArrayDelegate glEnableVertexAttribArray;
public static glEnableiDelegate glEnablei;
public static glEndDelegate glEnd;
public static glEndConditionalRenderDelegate glEndConditionalRender;
public static glEndListDelegate glEndList;
public static glEndQueryDelegate glEndQuery;
public static glEndQueryIndexedDelegate glEndQueryIndexed;
public static glEndTransformFeedbackDelegate glEndTransformFeedback;
public static glEvalCoord1dDelegate glEvalCoord1d;
public static glEvalCoord1dvDelegate glEvalCoord1dv;
public static glEvalCoord1fDelegate glEvalCoord1f;
public static glEvalCoord1fvDelegate glEvalCoord1fv;
public static glEvalCoord2dDelegate glEvalCoord2d;
public static glEvalCoord2dvDelegate glEvalCoord2dv;
public static glEvalCoord2fDelegate glEvalCoord2f;
public static glEvalCoord2fvDelegate glEvalCoord2fv;
public static glEvalMesh1Delegate glEvalMesh1;
public static glEvalMesh2Delegate glEvalMesh2;
public static glEvalPoint1Delegate glEvalPoint1;
public static glEvalPoint2Delegate glEvalPoint2;
public static glFeedbackBufferDelegate glFeedbackBuffer;
public static glFinishDelegate glFinish;
public static glFlushDelegate glFlush;
public static glFlushMappedBufferRangeDelegate glFlushMappedBufferRange;
public static glFlushMappedNamedBufferRangeDelegate glFlushMappedNamedBufferRange;
public static glFogCoordPointerDelegate glFogCoordPointer;
public static glFogCoorddDelegate glFogCoordd;
public static glFogCoorddvDelegate glFogCoorddv;
public static glFogCoordfDelegate glFogCoordf;
public static glFogCoordfvDelegate glFogCoordfv;
public static glFogfDelegate glFogf;
public static glFogfvDelegate glFogfv;
public static glFogiDelegate glFogi;
public static glFogivDelegate glFogiv;
public static glFramebufferParameteriDelegate glFramebufferParameteri;
public static glFramebufferRenderbufferDelegate glFramebufferRenderbuffer;
public static glFramebufferTextureDelegate glFramebufferTexture;
public static glFramebufferTexture1DDelegate glFramebufferTexture1D;
public static glFramebufferTexture2DDelegate glFramebufferTexture2D;
public static glFramebufferTexture3DDelegate glFramebufferTexture3D;
public static glFramebufferTextureLayerDelegate glFramebufferTextureLayer;
public static glFrontFaceDelegate glFrontFace;
public static glFrustumDelegate glFrustum;
public static glGenBuffersDelegate glGenBuffers;
public static glGenFramebuffersDelegate glGenFramebuffers;
public static glGenListsDelegate glGenLists;
public static glGenProgramPipelinesDelegate glGenProgramPipelines;
public static glGenQueriesDelegate glGenQueries;
public static glGenRenderbuffersDelegate glGenRenderbuffers;
public static glGenSamplersDelegate glGenSamplers;
public static glGenTexturesDelegate glGenTextures;
public static glGenTransformFeedbacksDelegate glGenTransformFeedbacks;
public static glGenVertexArraysDelegate glGenVertexArrays;
public static glGenerateMipmapDelegate glGenerateMipmap;
public static glGenerateTextureMipmapDelegate glGenerateTextureMipmap;
public static glGetActiveAtomicCounterBufferivDelegate glGetActiveAtomicCounterBufferiv;
public static glGetActiveAttribDelegate glGetActiveAttrib;
public static glGetActiveSubroutineNameDelegate glGetActiveSubroutineName;
public static glGetActiveSubroutineUniformNameDelegate glGetActiveSubroutineUniformName;
public static glGetActiveSubroutineUniformivDelegate glGetActiveSubroutineUniformiv;
public static glGetActiveUniformDelegate glGetActiveUniform;
public static glGetActiveUniformBlockNameDelegate glGetActiveUniformBlockName;
public static glGetActiveUniformBlockivDelegate glGetActiveUniformBlockiv;
public static glGetActiveUniformNameDelegate glGetActiveUniformName;
public static glGetActiveUniformsivDelegate glGetActiveUniformsiv;
public static glGetAttachedShadersDelegate glGetAttachedShaders;
public static glGetAttribLocationDelegate glGetAttribLocation;
public static glGetBooleani_vDelegate glGetBooleani_v;
public static glGetBooleanvDelegate glGetBooleanv;
public static glGetBufferParameteri64vDelegate glGetBufferParameteri64v;
public static glGetBufferParameterivDelegate glGetBufferParameteriv;
public static glGetBufferPointervDelegate glGetBufferPointerv;
public static glGetBufferSubDataDelegate glGetBufferSubData;
public static glGetClipPlaneDelegate glGetClipPlane;
public static glGetCompressedTexImageDelegate glGetCompressedTexImage;
public static glGetCompressedTextureImageDelegate glGetCompressedTextureImage;
public static glGetCompressedTextureSubImageDelegate glGetCompressedTextureSubImage;
public static glGetDebugMessageLogDelegate glGetDebugMessageLog;
public static glGetDoublei_vDelegate glGetDoublei_v;
public static glGetDoublevDelegate glGetDoublev;
public static glGetErrorDelegate glGetError;
public static glGetFloati_vDelegate glGetFloati_v;
public static glGetFloatvDelegate glGetFloatv;
public static glGetFragDataIndexDelegate glGetFragDataIndex;
public static glGetFragDataLocationDelegate glGetFragDataLocation;
public static glGetFramebufferAttachmentParameterivDelegate glGetFramebufferAttachmentParameteriv;
public static glGetFramebufferParameterivDelegate glGetFramebufferParameteriv;
public static glGetGraphicsResetStatusDelegate glGetGraphicsResetStatus;
public static glGetInteger64i_vDelegate glGetInteger64i_v;
public static glGetInteger64vDelegate glGetInteger64v;
public static glGetIntegeri_vDelegate glGetIntegeri_v;
public static glGetIntegervDelegate glGetIntegerv;
public static glGetInternalformati64vDelegate glGetInternalformati64v;
public static glGetInternalformativDelegate glGetInternalformativ;
public static glGetLightfvDelegate glGetLightfv;
public static glGetLightivDelegate glGetLightiv;
public static glGetMapdvDelegate glGetMapdv;
public static glGetMapfvDelegate glGetMapfv;
public static glGetMapivDelegate glGetMapiv;
public static glGetMaterialfvDelegate glGetMaterialfv;
public static glGetMaterialivDelegate glGetMaterialiv;
public static glGetMultisamplefvDelegate glGetMultisamplefv;
public static glGetNamedBufferParameteri64vDelegate glGetNamedBufferParameteri64v;
public static glGetNamedBufferParameterivDelegate glGetNamedBufferParameteriv;
public static glGetNamedBufferPointervDelegate glGetNamedBufferPointerv;
public static glGetNamedBufferSubDataDelegate glGetNamedBufferSubData;
public static glGetNamedFramebufferAttachmentParameterivDelegate glGetNamedFramebufferAttachmentParameteriv;
public static glGetNamedFramebufferParameterivDelegate glGetNamedFramebufferParameteriv;
public static glGetNamedRenderbufferParameterivDelegate glGetNamedRenderbufferParameteriv;
public static glGetObjectLabelDelegate glGetObjectLabel;
public static glGetObjectPtrLabelDelegate glGetObjectPtrLabel;
public static glGetPixelMapfvDelegate glGetPixelMapfv;
public static glGetPixelMapuivDelegate glGetPixelMapuiv;
public static glGetPixelMapusvDelegate glGetPixelMapusv;
public static glGetPointervDelegate glGetPointerv;
public static glGetPolygonStippleDelegate glGetPolygonStipple;
public static glGetProgramBinaryDelegate glGetProgramBinary;
public static glGetProgramInfoLogDelegate glGetProgramInfoLog;
public static glGetProgramInterfaceivDelegate glGetProgramInterfaceiv;
public static glGetProgramPipelineInfoLogDelegate glGetProgramPipelineInfoLog;
public static glGetProgramPipelineivDelegate glGetProgramPipelineiv;
public static glGetProgramResourceIndexDelegate glGetProgramResourceIndex;
public static glGetProgramResourceLocationDelegate glGetProgramResourceLocation;
public static glGetProgramResourceLocationIndexDelegate glGetProgramResourceLocationIndex;
public static glGetProgramResourceNameDelegate glGetProgramResourceName;
public static glGetProgramResourceivDelegate glGetProgramResourceiv;
public static glGetProgramStageivDelegate glGetProgramStageiv;
public static glGetProgramivDelegate glGetProgramiv;
public static glGetQueryBufferObjecti64vDelegate glGetQueryBufferObjecti64v;
public static glGetQueryBufferObjectivDelegate glGetQueryBufferObjectiv;
public static glGetQueryBufferObjectui64vDelegate glGetQueryBufferObjectui64v;
public static glGetQueryBufferObjectuivDelegate glGetQueryBufferObjectuiv;
public static glGetQueryIndexedivDelegate glGetQueryIndexediv;
public static glGetQueryObjecti64vDelegate glGetQueryObjecti64v;
public static glGetQueryObjectivDelegate glGetQueryObjectiv;
public static glGetQueryObjectui64vDelegate glGetQueryObjectui64v;
public static glGetQueryObjectuivDelegate glGetQueryObjectuiv;
public static glGetQueryivDelegate glGetQueryiv;
public static glGetRenderbufferParameterivDelegate glGetRenderbufferParameteriv;
public static glGetSamplerParameterIivDelegate glGetSamplerParameterIiv;
public static glGetSamplerParameterIuivDelegate glGetSamplerParameterIuiv;
public static glGetSamplerParameterfvDelegate glGetSamplerParameterfv;
public static glGetSamplerParameterivDelegate glGetSamplerParameteriv;
public static glGetShaderInfoLogDelegate glGetShaderInfoLog;
public static glGetShaderPrecisionFormatDelegate glGetShaderPrecisionFormat;
public static glGetShaderSourceDelegate glGetShaderSource;
public static glGetShaderivDelegate glGetShaderiv;
public static glGetStringDelegate glGetString;
public static glGetStringiDelegate glGetStringi;
public static glGetSubroutineIndexDelegate glGetSubroutineIndex;
public static glGetSubroutineUniformLocationDelegate glGetSubroutineUniformLocation;
public static glGetTexEnvfvDelegate glGetTexEnvfv;
public static glGetTexEnvivDelegate glGetTexEnviv;
public static glGetTexGendvDelegate glGetTexGendv;
public static glGetTexGenfvDelegate glGetTexGenfv;
public static glGetTexGenivDelegate glGetTexGeniv;
public static glGetTexImageDelegate glGetTexImage;
public static glGetTexLevelParameterfvDelegate glGetTexLevelParameterfv;
public static glGetTexLevelParameterivDelegate glGetTexLevelParameteriv;
public static glGetTexParameterIivDelegate glGetTexParameterIiv;
public static glGetTexParameterIuivDelegate glGetTexParameterIuiv;
public static glGetTexParameterfvDelegate glGetTexParameterfv;
public static glGetTexParameterivDelegate glGetTexParameteriv;
public static glGetTextureImageDelegate glGetTextureImage;
public static glGetTextureLevelParameterfvDelegate glGetTextureLevelParameterfv;
public static glGetTextureLevelParameterivDelegate glGetTextureLevelParameteriv;
public static glGetTextureParameterIivDelegate glGetTextureParameterIiv;
public static glGetTextureParameterIuivDelegate glGetTextureParameterIuiv;
public static glGetTextureParameterfvDelegate glGetTextureParameterfv;
public static glGetTextureParameterivDelegate glGetTextureParameteriv;
public static glGetTextureSubImageDelegate glGetTextureSubImage;
public static glGetTransformFeedbackVaryingDelegate glGetTransformFeedbackVarying;
public static glGetTransformFeedbacki64_vDelegate glGetTransformFeedbacki64_v;
public static glGetTransformFeedbacki_vDelegate glGetTransformFeedbacki_v;
public static glGetTransformFeedbackivDelegate glGetTransformFeedbackiv;
public static glGetUniformBlockIndexDelegate glGetUniformBlockIndex;
public static glGetUniformIndicesDelegate glGetUniformIndices;
public static glGetUniformLocationDelegate glGetUniformLocation;
public static glGetUniformSubroutineuivDelegate glGetUniformSubroutineuiv;
public static glGetUniformdvDelegate glGetUniformdv;
public static glGetUniformfvDelegate glGetUniformfv;
public static glGetUniformivDelegate glGetUniformiv;
public static glGetUniformuivDelegate glGetUniformuiv;
public static glGetVertexArrayIndexed64ivDelegate glGetVertexArrayIndexed64iv;
public static glGetVertexArrayIndexedivDelegate glGetVertexArrayIndexediv;
public static glGetVertexArrayivDelegate glGetVertexArrayiv;
public static glGetVertexAttribIivDelegate glGetVertexAttribIiv;
public static glGetVertexAttribIuivDelegate glGetVertexAttribIuiv;
public static glGetVertexAttribLdvDelegate glGetVertexAttribLdv;
public static glGetVertexAttribPointervDelegate glGetVertexAttribPointerv;
public static glGetVertexAttribdvDelegate glGetVertexAttribdv;
public static glGetVertexAttribfvDelegate glGetVertexAttribfv;
public static glGetVertexAttribivDelegate glGetVertexAttribiv;
public static glGetnColorTableDelegate glGetnColorTable;
public static glGetnCompressedTexImageDelegate glGetnCompressedTexImage;
public static glGetnConvolutionFilterDelegate glGetnConvolutionFilter;
public static glGetnHistogramDelegate glGetnHistogram;
public static glGetnMapdvDelegate glGetnMapdv;
public static glGetnMapfvDelegate glGetnMapfv;
public static glGetnMapivDelegate glGetnMapiv;
public static glGetnMinmaxDelegate glGetnMinmax;
public static glGetnPixelMapfvDelegate glGetnPixelMapfv;
public static glGetnPixelMapuivDelegate glGetnPixelMapuiv;
public static glGetnPixelMapusvDelegate glGetnPixelMapusv;
public static glGetnPolygonStippleDelegate glGetnPolygonStipple;
public static glGetnSeparableFilterDelegate glGetnSeparableFilter;
public static glGetnTexImageDelegate glGetnTexImage;
public static glGetnUniformdvDelegate glGetnUniformdv;
public static glGetnUniformfvDelegate glGetnUniformfv;
public static glGetnUniformivDelegate glGetnUniformiv;
public static glGetnUniformuivDelegate glGetnUniformuiv;
public static glHintDelegate glHint;
public static glIndexMaskDelegate glIndexMask;
public static glIndexPointerDelegate glIndexPointer;
public static glIndexdDelegate glIndexd;
public static glIndexdvDelegate glIndexdv;
public static glIndexfDelegate glIndexf;
public static glIndexfvDelegate glIndexfv;
public static glIndexiDelegate glIndexi;
public static glIndexivDelegate glIndexiv;
public static glIndexsDelegate glIndexs;
public static glIndexsvDelegate glIndexsv;
public static glIndexubDelegate glIndexub;
public static glIndexubvDelegate glIndexubv;
public static glInitNamesDelegate glInitNames;
public static glInterleavedArraysDelegate glInterleavedArrays;
public static glInvalidateBufferDataDelegate glInvalidateBufferData;
public static glInvalidateBufferSubDataDelegate glInvalidateBufferSubData;
public static glInvalidateFramebufferDelegate glInvalidateFramebuffer;
public static glInvalidateNamedFramebufferDataDelegate glInvalidateNamedFramebufferData;
public static glInvalidateNamedFramebufferSubDataDelegate glInvalidateNamedFramebufferSubData;
public static glInvalidateSubFramebufferDelegate glInvalidateSubFramebuffer;
public static glInvalidateTexImageDelegate glInvalidateTexImage;
public static glInvalidateTexSubImageDelegate glInvalidateTexSubImage;
public static glIsBufferDelegate glIsBuffer;
public static glIsEnabledDelegate glIsEnabled;
public static glIsEnablediDelegate glIsEnabledi;
public static glIsFramebufferDelegate glIsFramebuffer;
public static glIsListDelegate glIsList;
public static glIsProgramDelegate glIsProgram;
public static glIsProgramPipelineDelegate glIsProgramPipeline;
public static glIsQueryDelegate glIsQuery;
public static glIsRenderbufferDelegate glIsRenderbuffer;
public static glIsSamplerDelegate glIsSampler;
public static glIsShaderDelegate glIsShader;
public static glIsTextureDelegate glIsTexture;
public static glIsTransformFeedbackDelegate glIsTransformFeedback;
public static glIsVertexArrayDelegate glIsVertexArray;
public static glLightModelfDelegate glLightModelf;
public static glLightModelfvDelegate glLightModelfv;
public static glLightModeliDelegate glLightModeli;
public static glLightModelivDelegate glLightModeliv;
public static glLightfDelegate glLightf;
public static glLightfvDelegate glLightfv;
public static glLightiDelegate glLighti;
public static glLightivDelegate glLightiv;
public static glLineStippleDelegate glLineStipple;
public static glLineWidthDelegate glLineWidth;
public static glLinkProgramDelegate glLinkProgram;
public static glListBaseDelegate glListBase;
public static glLoadIdentityDelegate glLoadIdentity;
public static glLoadMatrixdDelegate glLoadMatrixd;
public static glLoadMatrixfDelegate glLoadMatrixf;
public static glLoadNameDelegate glLoadName;
public static glLoadTransposeMatrixdDelegate glLoadTransposeMatrixd;
public static glLoadTransposeMatrixfDelegate glLoadTransposeMatrixf;
public static glLogicOpDelegate glLogicOp;
public static glMap1dDelegate glMap1d;
public static glMap1fDelegate glMap1f;
public static glMap2dDelegate glMap2d;
public static glMap2fDelegate glMap2f;
public static glMapBufferDelegate glMapBuffer;
public static glMapBufferRangeDelegate glMapBufferRange;
public static glMapGrid1dDelegate glMapGrid1d;
public static glMapGrid1fDelegate glMapGrid1f;
public static glMapGrid2dDelegate glMapGrid2d;
public static glMapGrid2fDelegate glMapGrid2f;
public static glMapNamedBufferDelegate glMapNamedBuffer;
public static glMapNamedBufferRangeDelegate glMapNamedBufferRange;
public static glMaterialfDelegate glMaterialf;
public static glMaterialfvDelegate glMaterialfv;
public static glMaterialiDelegate glMateriali;
public static glMaterialivDelegate glMaterialiv;
public static glMatrixModeDelegate glMatrixMode;
public static glMemoryBarrierDelegate glMemoryBarrier;
public static glMemoryBarrierByRegionDelegate glMemoryBarrierByRegion;
public static glMinSampleShadingDelegate glMinSampleShading;
public static glMultMatrixdDelegate glMultMatrixd;
public static glMultMatrixfDelegate glMultMatrixf;
public static glMultTransposeMatrixdDelegate glMultTransposeMatrixd;
public static glMultTransposeMatrixfDelegate glMultTransposeMatrixf;
public static glMultiDrawArraysDelegate glMultiDrawArrays;
public static glMultiDrawArraysIndirectDelegate glMultiDrawArraysIndirect;
public static glMultiDrawArraysIndirectCountDelegate glMultiDrawArraysIndirectCount;
public static glMultiDrawElementsDelegate glMultiDrawElements;
public static glMultiDrawElementsBaseVertexDelegate glMultiDrawElementsBaseVertex;
public static glMultiDrawElementsIndirectDelegate glMultiDrawElementsIndirect;
public static glMultiDrawElementsIndirectCountDelegate glMultiDrawElementsIndirectCount;
public static glMultiTexCoord1dDelegate glMultiTexCoord1d;
public static glMultiTexCoord1dvDelegate glMultiTexCoord1dv;
public static glMultiTexCoord1fDelegate glMultiTexCoord1f;
public static glMultiTexCoord1fvDelegate glMultiTexCoord1fv;
public static glMultiTexCoord1iDelegate glMultiTexCoord1i;
public static glMultiTexCoord1ivDelegate glMultiTexCoord1iv;
public static glMultiTexCoord1sDelegate glMultiTexCoord1s;
public static glMultiTexCoord1svDelegate glMultiTexCoord1sv;
public static glMultiTexCoord2dDelegate glMultiTexCoord2d;
public static glMultiTexCoord2dvDelegate glMultiTexCoord2dv;
public static glMultiTexCoord2fDelegate glMultiTexCoord2f;
public static glMultiTexCoord2fvDelegate glMultiTexCoord2fv;
public static glMultiTexCoord2iDelegate glMultiTexCoord2i;
public static glMultiTexCoord2ivDelegate glMultiTexCoord2iv;
public static glMultiTexCoord2sDelegate glMultiTexCoord2s;
public static glMultiTexCoord2svDelegate glMultiTexCoord2sv;
public static glMultiTexCoord3dDelegate glMultiTexCoord3d;
public static glMultiTexCoord3dvDelegate glMultiTexCoord3dv;
public static glMultiTexCoord3fDelegate glMultiTexCoord3f;
public static glMultiTexCoord3fvDelegate glMultiTexCoord3fv;
public static glMultiTexCoord3iDelegate glMultiTexCoord3i;
public static glMultiTexCoord3ivDelegate glMultiTexCoord3iv;
public static glMultiTexCoord3sDelegate glMultiTexCoord3s;
public static glMultiTexCoord3svDelegate glMultiTexCoord3sv;
public static glMultiTexCoord4dDelegate glMultiTexCoord4d;
public static glMultiTexCoord4dvDelegate glMultiTexCoord4dv;
public static glMultiTexCoord4fDelegate glMultiTexCoord4f;
public static glMultiTexCoord4fvDelegate glMultiTexCoord4fv;
public static glMultiTexCoord4iDelegate glMultiTexCoord4i;
public static glMultiTexCoord4ivDelegate glMultiTexCoord4iv;
public static glMultiTexCoord4sDelegate glMultiTexCoord4s;
public static glMultiTexCoord4svDelegate glMultiTexCoord4sv;
public static glMultiTexCoordP1uiDelegate glMultiTexCoordP1ui;
public static glMultiTexCoordP1uivDelegate glMultiTexCoordP1uiv;
public static glMultiTexCoordP2uiDelegate glMultiTexCoordP2ui;
public static glMultiTexCoordP2uivDelegate glMultiTexCoordP2uiv;
public static glMultiTexCoordP3uiDelegate glMultiTexCoordP3ui;
public static glMultiTexCoordP3uivDelegate glMultiTexCoordP3uiv;
public static glMultiTexCoordP4uiDelegate glMultiTexCoordP4ui;
public static glMultiTexCoordP4uivDelegate glMultiTexCoordP4uiv;
public static glNamedBufferDataDelegate glNamedBufferData;
public static glNamedBufferStorageDelegate glNamedBufferStorage;
public static glNamedBufferSubDataDelegate glNamedBufferSubData;
public static glNamedFramebufferDrawBufferDelegate glNamedFramebufferDrawBuffer;
public static glNamedFramebufferDrawBuffersDelegate glNamedFramebufferDrawBuffers;
public static glNamedFramebufferParameteriDelegate glNamedFramebufferParameteri;
public static glNamedFramebufferReadBufferDelegate glNamedFramebufferReadBuffer;
public static glNamedFramebufferRenderbufferDelegate glNamedFramebufferRenderbuffer;
public static glNamedFramebufferTextureDelegate glNamedFramebufferTexture;
public static glNamedFramebufferTextureLayerDelegate glNamedFramebufferTextureLayer;
public static glNamedRenderbufferStorageDelegate glNamedRenderbufferStorage;
public static glNamedRenderbufferStorageMultisampleDelegate glNamedRenderbufferStorageMultisample;
public static glNewListDelegate glNewList;
public static glNormal3bDelegate glNormal3b;
public static glNormal3bvDelegate glNormal3bv;
public static glNormal3dDelegate glNormal3d;
public static glNormal3dvDelegate glNormal3dv;
public static glNormal3fDelegate glNormal3f;
public static glNormal3fvDelegate glNormal3fv;
public static glNormal3iDelegate glNormal3i;
public static glNormal3ivDelegate glNormal3iv;
public static glNormal3sDelegate glNormal3s;
public static glNormal3svDelegate glNormal3sv;
public static glNormalP3uiDelegate glNormalP3ui;
public static glNormalP3uivDelegate glNormalP3uiv;
public static glNormalPointerDelegate glNormalPointer;
public static glObjectLabelDelegate glObjectLabel;
public static glObjectPtrLabelDelegate glObjectPtrLabel;
public static glOrthoDelegate glOrtho;
public static glPassThroughDelegate glPassThrough;
public static glPatchParameterfvDelegate glPatchParameterfv;
public static glPatchParameteriDelegate glPatchParameteri;
public static glPauseTransformFeedbackDelegate glPauseTransformFeedback;
public static glPixelMapfvDelegate glPixelMapfv;
public static glPixelMapuivDelegate glPixelMapuiv;
public static glPixelMapusvDelegate glPixelMapusv;
public static glPixelStorefDelegate glPixelStoref;
public static glPixelStoreiDelegate glPixelStorei;
public static glPixelTransferfDelegate glPixelTransferf;
public static glPixelTransferiDelegate glPixelTransferi;
public static glPixelZoomDelegate glPixelZoom;
public static glPointParameterfDelegate glPointParameterf;
public static glPointParameterfvDelegate glPointParameterfv;
public static glPointParameteriDelegate glPointParameteri;
public static glPointParameterivDelegate glPointParameteriv;
public static glPointSizeDelegate glPointSize;
public static glPolygonModeDelegate glPolygonMode;
public static glPolygonOffsetDelegate glPolygonOffset;
public static glPolygonOffsetClampDelegate glPolygonOffsetClamp;
public static glPolygonStippleDelegate glPolygonStipple;
public static glPopAttribDelegate glPopAttrib;
public static glPopClientAttribDelegate glPopClientAttrib;
public static glPopDebugGroupDelegate glPopDebugGroup;
public static glPopMatrixDelegate glPopMatrix;
public static glPopNameDelegate glPopName;
public static glPrimitiveRestartIndexDelegate glPrimitiveRestartIndex;
public static glPrioritizeTexturesDelegate glPrioritizeTextures;
public static glProgramBinaryDelegate glProgramBinary;
public static glProgramParameteriDelegate glProgramParameteri;
public static glProgramUniform1dDelegate glProgramUniform1d;
public static glProgramUniform1dvDelegate glProgramUniform1dv;
public static glProgramUniform1fDelegate glProgramUniform1f;
public static glProgramUniform1fvDelegate glProgramUniform1fv;
public static glProgramUniform1iDelegate glProgramUniform1i;
public static glProgramUniform1ivDelegate glProgramUniform1iv;
public static glProgramUniform1uiDelegate glProgramUniform1ui;
public static glProgramUniform1uivDelegate glProgramUniform1uiv;
public static glProgramUniform2dDelegate glProgramUniform2d;
public static glProgramUniform2dvDelegate glProgramUniform2dv;
public static glProgramUniform2fDelegate glProgramUniform2f;
public static glProgramUniform2fvDelegate glProgramUniform2fv;
public static glProgramUniform2iDelegate glProgramUniform2i;
public static glProgramUniform2ivDelegate glProgramUniform2iv;
public static glProgramUniform2uiDelegate glProgramUniform2ui;
public static glProgramUniform2uivDelegate glProgramUniform2uiv;
public static glProgramUniform3dDelegate glProgramUniform3d;
public static glProgramUniform3dvDelegate glProgramUniform3dv;
public static glProgramUniform3fDelegate glProgramUniform3f;
public static glProgramUniform3fvDelegate glProgramUniform3fv;
public static glProgramUniform3iDelegate glProgramUniform3i;
public static glProgramUniform3ivDelegate glProgramUniform3iv;
public static glProgramUniform3uiDelegate glProgramUniform3ui;
public static glProgramUniform3uivDelegate glProgramUniform3uiv;
public static glProgramUniform4dDelegate glProgramUniform4d;
public static glProgramUniform4dvDelegate glProgramUniform4dv;
public static glProgramUniform4fDelegate glProgramUniform4f;
public static glProgramUniform4fvDelegate glProgramUniform4fv;
public static glProgramUniform4iDelegate glProgramUniform4i;
public static glProgramUniform4ivDelegate glProgramUniform4iv;
public static glProgramUniform4uiDelegate glProgramUniform4ui;
public static glProgramUniform4uivDelegate glProgramUniform4uiv;
public static glProgramUniformMatrix2dvDelegate glProgramUniformMatrix2dv;
public static glProgramUniformMatrix2fvDelegate glProgramUniformMatrix2fv;
public static glProgramUniformMatrix2x3dvDelegate glProgramUniformMatrix2x3dv;
public static glProgramUniformMatrix2x3fvDelegate glProgramUniformMatrix2x3fv;
public static glProgramUniformMatrix2x4dvDelegate glProgramUniformMatrix2x4dv;
public static glProgramUniformMatrix2x4fvDelegate glProgramUniformMatrix2x4fv;
public static glProgramUniformMatrix3dvDelegate glProgramUniformMatrix3dv;
public static glProgramUniformMatrix3fvDelegate glProgramUniformMatrix3fv;
public static glProgramUniformMatrix3x2dvDelegate glProgramUniformMatrix3x2dv;
public static glProgramUniformMatrix3x2fvDelegate glProgramUniformMatrix3x2fv;
public static glProgramUniformMatrix3x4dvDelegate glProgramUniformMatrix3x4dv;
public static glProgramUniformMatrix3x4fvDelegate glProgramUniformMatrix3x4fv;
public static glProgramUniformMatrix4dvDelegate glProgramUniformMatrix4dv;
public static glProgramUniformMatrix4fvDelegate glProgramUniformMatrix4fv;
public static glProgramUniformMatrix4x2dvDelegate glProgramUniformMatrix4x2dv;
public static glProgramUniformMatrix4x2fvDelegate glProgramUniformMatrix4x2fv;
public static glProgramUniformMatrix4x3dvDelegate glProgramUniformMatrix4x3dv;
public static glProgramUniformMatrix4x3fvDelegate glProgramUniformMatrix4x3fv;
public static glProvokingVertexDelegate glProvokingVertex;
public static glPushAttribDelegate glPushAttrib;
public static glPushClientAttribDelegate glPushClientAttrib;
public static glPushDebugGroupDelegate glPushDebugGroup;
public static glPushMatrixDelegate glPushMatrix;
public static glPushNameDelegate glPushName;
public static glQueryCounterDelegate glQueryCounter;
public static glRasterPos2dDelegate glRasterPos2d;
public static glRasterPos2dvDelegate glRasterPos2dv;
public static glRasterPos2fDelegate glRasterPos2f;
public static glRasterPos2fvDelegate glRasterPos2fv;
public static glRasterPos2iDelegate glRasterPos2i;
public static glRasterPos2ivDelegate glRasterPos2iv;
public static glRasterPos2sDelegate glRasterPos2s;
public static glRasterPos2svDelegate glRasterPos2sv;
public static glRasterPos3dDelegate glRasterPos3d;
public static glRasterPos3dvDelegate glRasterPos3dv;
public static glRasterPos3fDelegate glRasterPos3f;
public static glRasterPos3fvDelegate glRasterPos3fv;
public static glRasterPos3iDelegate glRasterPos3i;
public static glRasterPos3ivDelegate glRasterPos3iv;
public static glRasterPos3sDelegate glRasterPos3s;
public static glRasterPos3svDelegate glRasterPos3sv;
public static glRasterPos4dDelegate glRasterPos4d;
public static glRasterPos4dvDelegate glRasterPos4dv;
public static glRasterPos4fDelegate glRasterPos4f;
public static glRasterPos4fvDelegate glRasterPos4fv;
public static glRasterPos4iDelegate glRasterPos4i;
public static glRasterPos4ivDelegate glRasterPos4iv;
public static glRasterPos4sDelegate glRasterPos4s;
public static glRasterPos4svDelegate glRasterPos4sv;
public static glReadBufferDelegate glReadBuffer;
public static glReadPixelsDelegate glReadPixels;
public static glReadnPixelsDelegate glReadnPixels;
public static glRectdDelegate glRectd;
public static glRectdvDelegate glRectdv;
public static glRectfDelegate glRectf;
public static glRectfvDelegate glRectfv;
public static glRectiDelegate glRecti;
public static glRectivDelegate glRectiv;
public static glRectsDelegate glRects;
public static glRectsvDelegate glRectsv;
public static glReleaseShaderCompilerDelegate glReleaseShaderCompiler;
public static glRenderModeDelegate glRenderMode;
public static glRenderbufferStorageDelegate glRenderbufferStorage;
public static glRenderbufferStorageMultisampleDelegate glRenderbufferStorageMultisample;
public static glResumeTransformFeedbackDelegate glResumeTransformFeedback;
public static glRotatedDelegate glRotated;
public static glRotatefDelegate glRotatef;
public static glSampleCoverageDelegate glSampleCoverage;
public static glSampleMaskiDelegate glSampleMaski;
public static glSamplerParameterIivDelegate glSamplerParameterIiv;
public static glSamplerParameterIuivDelegate glSamplerParameterIuiv;
public static glSamplerParameterfDelegate glSamplerParameterf;
public static glSamplerParameterfvDelegate glSamplerParameterfv;
public static glSamplerParameteriDelegate glSamplerParameteri;
public static glSamplerParameterivDelegate glSamplerParameteriv;
public static glScaledDelegate glScaled;
public static glScalefDelegate glScalef;
public static glScissorDelegate glScissor;
public static glScissorArrayvDelegate glScissorArrayv;
public static glScissorIndexedDelegate glScissorIndexed;
public static glScissorIndexedvDelegate glScissorIndexedv;
public static glSecondaryColor3bDelegate glSecondaryColor3b;
public static glSecondaryColor3bvDelegate glSecondaryColor3bv;
public static glSecondaryColor3dDelegate glSecondaryColor3d;
public static glSecondaryColor3dvDelegate glSecondaryColor3dv;
public static glSecondaryColor3fDelegate glSecondaryColor3f;
public static glSecondaryColor3fvDelegate glSecondaryColor3fv;
public static glSecondaryColor3iDelegate glSecondaryColor3i;
public static glSecondaryColor3ivDelegate glSecondaryColor3iv;
public static glSecondaryColor3sDelegate glSecondaryColor3s;
public static glSecondaryColor3svDelegate glSecondaryColor3sv;
public static glSecondaryColor3ubDelegate glSecondaryColor3ub;
public static glSecondaryColor3ubvDelegate glSecondaryColor3ubv;
public static glSecondaryColor3uiDelegate glSecondaryColor3ui;
public static glSecondaryColor3uivDelegate glSecondaryColor3uiv;
public static glSecondaryColor3usDelegate glSecondaryColor3us;
public static glSecondaryColor3usvDelegate glSecondaryColor3usv;
public static glSecondaryColorP3uiDelegate glSecondaryColorP3ui;
public static glSecondaryColorP3uivDelegate glSecondaryColorP3uiv;
public static glSecondaryColorPointerDelegate glSecondaryColorPointer;
public static glSelectBufferDelegate glSelectBuffer;
public static glShadeModelDelegate glShadeModel;
public static glShaderBinaryDelegate glShaderBinary;
public static glShaderSourceDelegate glShaderSource;
public static glShaderStorageBlockBindingDelegate glShaderStorageBlockBinding;
public static glSpecializeShaderDelegate glSpecializeShader;
public static glStencilFuncDelegate glStencilFunc;
public static glStencilFuncSeparateDelegate glStencilFuncSeparate;
public static glStencilMaskDelegate glStencilMask;
public static glStencilMaskSeparateDelegate glStencilMaskSeparate;
public static glStencilOpDelegate glStencilOp;
public static glStencilOpSeparateDelegate glStencilOpSeparate;
public static glTexBufferDelegate glTexBuffer;
public static glTexBufferRangeDelegate glTexBufferRange;
public static glTexCoord1dDelegate glTexCoord1d;
public static glTexCoord1dvDelegate glTexCoord1dv;
public static glTexCoord1fDelegate glTexCoord1f;
public static glTexCoord1fvDelegate glTexCoord1fv;
public static glTexCoord1iDelegate glTexCoord1i;
public static glTexCoord1ivDelegate glTexCoord1iv;
public static glTexCoord1sDelegate glTexCoord1s;
public static glTexCoord1svDelegate glTexCoord1sv;
public static glTexCoord2dDelegate glTexCoord2d;
public static glTexCoord2dvDelegate glTexCoord2dv;
public static glTexCoord2fDelegate glTexCoord2f;
public static glTexCoord2fvDelegate glTexCoord2fv;
public static glTexCoord2iDelegate glTexCoord2i;
public static glTexCoord2ivDelegate glTexCoord2iv;
public static glTexCoord2sDelegate glTexCoord2s;
public static glTexCoord2svDelegate glTexCoord2sv;
public static glTexCoord3dDelegate glTexCoord3d;
public static glTexCoord3dvDelegate glTexCoord3dv;
public static glTexCoord3fDelegate glTexCoord3f;
public static glTexCoord3fvDelegate glTexCoord3fv;
public static glTexCoord3iDelegate glTexCoord3i;
public static glTexCoord3ivDelegate glTexCoord3iv;
public static glTexCoord3sDelegate glTexCoord3s;
public static glTexCoord3svDelegate glTexCoord3sv;
public static glTexCoord4dDelegate glTexCoord4d;
public static glTexCoord4dvDelegate glTexCoord4dv;
public static glTexCoord4fDelegate glTexCoord4f;
public static glTexCoord4fvDelegate glTexCoord4fv;
public static glTexCoord4iDelegate glTexCoord4i;
public static glTexCoord4ivDelegate glTexCoord4iv;
public static glTexCoord4sDelegate glTexCoord4s;
public static glTexCoord4svDelegate glTexCoord4sv;
public static glTexCoordP1uiDelegate glTexCoordP1ui;
public static glTexCoordP1uivDelegate glTexCoordP1uiv;
public static glTexCoordP2uiDelegate glTexCoordP2ui;
public static glTexCoordP2uivDelegate glTexCoordP2uiv;
public static glTexCoordP3uiDelegate glTexCoordP3ui;
public static glTexCoordP3uivDelegate glTexCoordP3uiv;
public static glTexCoordP4uiDelegate glTexCoordP4ui;
public static glTexCoordP4uivDelegate glTexCoordP4uiv;
public static glTexCoordPointerDelegate glTexCoordPointer;
public static glTexEnvfDelegate glTexEnvf;
public static glTexEnvfvDelegate glTexEnvfv;
public static glTexEnviDelegate glTexEnvi;
public static glTexEnvivDelegate glTexEnviv;
public static glTexGendDelegate glTexGend;
public static glTexGendvDelegate glTexGendv;
public static glTexGenfDelegate glTexGenf;
public static glTexGenfvDelegate glTexGenfv;
public static glTexGeniDelegate glTexGeni;
public static glTexGenivDelegate glTexGeniv;
public static glTexImage1DDelegate glTexImage1D;
public static glTexImage2DDelegate glTexImage2D;
public static glTexImage2DMultisampleDelegate glTexImage2DMultisample;
public static glTexImage3DDelegate glTexImage3D;
public static glTexImage3DMultisampleDelegate glTexImage3DMultisample;
public static glTexParameterIivDelegate glTexParameterIiv;
public static glTexParameterIuivDelegate glTexParameterIuiv;
public static glTexParameterfDelegate glTexParameterf;
public static glTexParameterfvDelegate glTexParameterfv;
public static glTexParameteriDelegate glTexParameteri;
public static glTexParameterivDelegate glTexParameteriv;
public static glTexStorage1DDelegate glTexStorage1D;
public static glTexStorage2DDelegate glTexStorage2D;
public static glTexStorage2DMultisampleDelegate glTexStorage2DMultisample;
public static glTexStorage3DDelegate glTexStorage3D;
public static glTexStorage3DMultisampleDelegate glTexStorage3DMultisample;
public static glTexSubImage1DDelegate glTexSubImage1D;
public static glTexSubImage2DDelegate glTexSubImage2D;
public static glTexSubImage3DDelegate glTexSubImage3D;
public static glTextureBarrierDelegate glTextureBarrier;
public static glTextureBufferDelegate glTextureBuffer;
public static glTextureBufferRangeDelegate glTextureBufferRange;
public static glTextureParameterIivDelegate glTextureParameterIiv;
public static glTextureParameterIuivDelegate glTextureParameterIuiv;
public static glTextureParameterfDelegate glTextureParameterf;
public static glTextureParameterfvDelegate glTextureParameterfv;
public static glTextureParameteriDelegate glTextureParameteri;
public static glTextureParameterivDelegate glTextureParameteriv;
public static glTextureStorage1DDelegate glTextureStorage1D;
public static glTextureStorage2DDelegate glTextureStorage2D;
public static glTextureStorage2DMultisampleDelegate glTextureStorage2DMultisample;
public static glTextureStorage3DDelegate glTextureStorage3D;
public static glTextureStorage3DMultisampleDelegate glTextureStorage3DMultisample;
public static glTextureSubImage1DDelegate glTextureSubImage1D;
public static glTextureSubImage2DDelegate glTextureSubImage2D;
public static glTextureSubImage3DDelegate glTextureSubImage3D;
public static glTextureViewDelegate glTextureView;
public static glTransformFeedbackBufferBaseDelegate glTransformFeedbackBufferBase;
public static glTransformFeedbackBufferRangeDelegate glTransformFeedbackBufferRange;
public static glTransformFeedbackVaryingsDelegate glTransformFeedbackVaryings;
public static glTranslatedDelegate glTranslated;
public static glTranslatefDelegate glTranslatef;
public static glUniform1dDelegate glUniform1d;
public static glUniform1dvDelegate glUniform1dv;
public static glUniform1fDelegate glUniform1f;
public static glUniform1fvDelegate glUniform1fv;
public static glUniform1iDelegate glUniform1i;
public static glUniform1ivDelegate glUniform1iv;
public static glUniform1uiDelegate glUniform1ui;
public static glUniform1uivDelegate glUniform1uiv;
public static glUniform2dDelegate glUniform2d;
public static glUniform2dvDelegate glUniform2dv;
public static glUniform2fDelegate glUniform2f;
public static glUniform2fvDelegate glUniform2fv;
public static glUniform2iDelegate glUniform2i;
public static glUniform2ivDelegate glUniform2iv;
public static glUniform2uiDelegate glUniform2ui;
public static glUniform2uivDelegate glUniform2uiv;
public static glUniform3dDelegate glUniform3d;
public static glUniform3dvDelegate glUniform3dv;
public static glUniform3fDelegate glUniform3f;
public static glUniform3fvDelegate glUniform3fv;
public static glUniform3iDelegate glUniform3i;
public static glUniform3ivDelegate glUniform3iv;
public static glUniform3uiDelegate glUniform3ui;
public static glUniform3uivDelegate glUniform3uiv;
public static glUniform4dDelegate glUniform4d;
public static glUniform4dvDelegate glUniform4dv;
public static glUniform4fDelegate glUniform4f;
public static glUniform4fvDelegate glUniform4fv;
public static glUniform4iDelegate glUniform4i;
public static glUniform4ivDelegate glUniform4iv;
public static glUniform4uiDelegate glUniform4ui;
public static glUniform4uivDelegate glUniform4uiv;
public static glUniformBlockBindingDelegate glUniformBlockBinding;
public static glUniformMatrix2dvDelegate glUniformMatrix2dv;
public static glUniformMatrix2fvDelegate glUniformMatrix2fv;
public static glUniformMatrix2x3dvDelegate glUniformMatrix2x3dv;
public static glUniformMatrix2x3fvDelegate glUniformMatrix2x3fv;
public static glUniformMatrix2x4dvDelegate glUniformMatrix2x4dv;
public static glUniformMatrix2x4fvDelegate glUniformMatrix2x4fv;
public static glUniformMatrix3dvDelegate glUniformMatrix3dv;
public static glUniformMatrix3fvDelegate glUniformMatrix3fv;
public static glUniformMatrix3x2dvDelegate glUniformMatrix3x2dv;
public static glUniformMatrix3x2fvDelegate glUniformMatrix3x2fv;
public static glUniformMatrix3x4dvDelegate glUniformMatrix3x4dv;
public static glUniformMatrix3x4fvDelegate glUniformMatrix3x4fv;
public static glUniformMatrix4dvDelegate glUniformMatrix4dv;
public static glUniformMatrix4fvDelegate glUniformMatrix4fv;
public static glUniformMatrix4x2dvDelegate glUniformMatrix4x2dv;
public static glUniformMatrix4x2fvDelegate glUniformMatrix4x2fv;
public static glUniformMatrix4x3dvDelegate glUniformMatrix4x3dv;
public static glUniformMatrix4x3fvDelegate glUniformMatrix4x3fv;
public static glUniformSubroutinesuivDelegate glUniformSubroutinesuiv;
public static glUnmapBufferDelegate glUnmapBuffer;
public static glUnmapNamedBufferDelegate glUnmapNamedBuffer;
public static glUseProgramDelegate glUseProgram;
public static glUseProgramStagesDelegate glUseProgramStages;
public static glValidateProgramDelegate glValidateProgram;
public static glValidateProgramPipelineDelegate glValidateProgramPipeline;
public static glVertex2dDelegate glVertex2d;
public static glVertex2dvDelegate glVertex2dv;
public static glVertex2fDelegate glVertex2f;
public static glVertex2fvDelegate glVertex2fv;
public static glVertex2iDelegate glVertex2i;
public static glVertex2ivDelegate glVertex2iv;
public static glVertex2sDelegate glVertex2s;
public static glVertex2svDelegate glVertex2sv;
public static glVertex3dDelegate glVertex3d;
public static glVertex3dvDelegate glVertex3dv;
public static glVertex3fDelegate glVertex3f;
public static glVertex3fvDelegate glVertex3fv;
public static glVertex3iDelegate glVertex3i;
public static glVertex3ivDelegate glVertex3iv;
public static glVertex3sDelegate glVertex3s;
public static glVertex3svDelegate glVertex3sv;
public static glVertex4dDelegate glVertex4d;
public static glVertex4dvDelegate glVertex4dv;
public static glVertex4fDelegate glVertex4f;
public static glVertex4fvDelegate glVertex4fv;
public static glVertex4iDelegate glVertex4i;
public static glVertex4ivDelegate glVertex4iv;
public static glVertex4sDelegate glVertex4s;
public static glVertex4svDelegate glVertex4sv;
public static glVertexArrayAttribBindingDelegate glVertexArrayAttribBinding;
public static glVertexArrayAttribFormatDelegate glVertexArrayAttribFormat;
public static glVertexArrayAttribIFormatDelegate glVertexArrayAttribIFormat;
public static glVertexArrayAttribLFormatDelegate glVertexArrayAttribLFormat;
public static glVertexArrayBindingDivisorDelegate glVertexArrayBindingDivisor;
public static glVertexArrayElementBufferDelegate glVertexArrayElementBuffer;
public static glVertexArrayVertexBufferDelegate glVertexArrayVertexBuffer;
public static glVertexArrayVertexBuffersDelegate glVertexArrayVertexBuffers;
public static glVertexAttrib1dDelegate glVertexAttrib1d;
public static glVertexAttrib1dvDelegate glVertexAttrib1dv;
public static glVertexAttrib1fDelegate glVertexAttrib1f;
public static glVertexAttrib1fvDelegate glVertexAttrib1fv;
public static glVertexAttrib1sDelegate glVertexAttrib1s;
public static glVertexAttrib1svDelegate glVertexAttrib1sv;
public static glVertexAttrib2dDelegate glVertexAttrib2d;
public static glVertexAttrib2dvDelegate glVertexAttrib2dv;
public static glVertexAttrib2fDelegate glVertexAttrib2f;
public static glVertexAttrib2fvDelegate glVertexAttrib2fv;
public static glVertexAttrib2sDelegate glVertexAttrib2s;
public static glVertexAttrib2svDelegate glVertexAttrib2sv;
public static glVertexAttrib3dDelegate glVertexAttrib3d;
public static glVertexAttrib3dvDelegate glVertexAttrib3dv;
public static glVertexAttrib3fDelegate glVertexAttrib3f;
public static glVertexAttrib3fvDelegate glVertexAttrib3fv;
public static glVertexAttrib3sDelegate glVertexAttrib3s;
public static glVertexAttrib3svDelegate glVertexAttrib3sv;
public static glVertexAttrib4NbvDelegate glVertexAttrib4Nbv;
public static glVertexAttrib4NivDelegate glVertexAttrib4Niv;
public static glVertexAttrib4NsvDelegate glVertexAttrib4Nsv;
public static glVertexAttrib4NubDelegate glVertexAttrib4Nub;
public static glVertexAttrib4NubvDelegate glVertexAttrib4Nubv;
public static glVertexAttrib4NuivDelegate glVertexAttrib4Nuiv;
public static glVertexAttrib4NusvDelegate glVertexAttrib4Nusv;
public static glVertexAttrib4bvDelegate glVertexAttrib4bv;
public static glVertexAttrib4dDelegate glVertexAttrib4d;
public static glVertexAttrib4dvDelegate glVertexAttrib4dv;
public static glVertexAttrib4fDelegate glVertexAttrib4f;
public static glVertexAttrib4fvDelegate glVertexAttrib4fv;
public static glVertexAttrib4ivDelegate glVertexAttrib4iv;
public static glVertexAttrib4sDelegate glVertexAttrib4s;
public static glVertexAttrib4svDelegate glVertexAttrib4sv;
public static glVertexAttrib4ubvDelegate glVertexAttrib4ubv;
public static glVertexAttrib4uivDelegate glVertexAttrib4uiv;
public static glVertexAttrib4usvDelegate glVertexAttrib4usv;
public static glVertexAttribBindingDelegate glVertexAttribBinding;
public static glVertexAttribDivisorDelegate glVertexAttribDivisor;
public static glVertexAttribFormatDelegate glVertexAttribFormat;
public static glVertexAttribI1iDelegate glVertexAttribI1i;
public static glVertexAttribI1ivDelegate glVertexAttribI1iv;
public static glVertexAttribI1uiDelegate glVertexAttribI1ui;
public static glVertexAttribI1uivDelegate glVertexAttribI1uiv;
public static glVertexAttribI2iDelegate glVertexAttribI2i;
public static glVertexAttribI2ivDelegate glVertexAttribI2iv;
public static glVertexAttribI2uiDelegate glVertexAttribI2ui;
public static glVertexAttribI2uivDelegate glVertexAttribI2uiv;
public static glVertexAttribI3iDelegate glVertexAttribI3i;
public static glVertexAttribI3ivDelegate glVertexAttribI3iv;
public static glVertexAttribI3uiDelegate glVertexAttribI3ui;
public static glVertexAttribI3uivDelegate glVertexAttribI3uiv;
public static glVertexAttribI4bvDelegate glVertexAttribI4bv;
public static glVertexAttribI4iDelegate glVertexAttribI4i;
public static glVertexAttribI4ivDelegate glVertexAttribI4iv;
public static glVertexAttribI4svDelegate glVertexAttribI4sv;
public static glVertexAttribI4ubvDelegate glVertexAttribI4ubv;
public static glVertexAttribI4uiDelegate glVertexAttribI4ui;
public static glVertexAttribI4uivDelegate glVertexAttribI4uiv;
public static glVertexAttribI4usvDelegate glVertexAttribI4usv;
public static glVertexAttribIFormatDelegate glVertexAttribIFormat;
public static glVertexAttribIPointerDelegate glVertexAttribIPointer;
public static glVertexAttribL1dDelegate glVertexAttribL1d;
public static glVertexAttribL1dvDelegate glVertexAttribL1dv;
public static glVertexAttribL2dDelegate glVertexAttribL2d;
public static glVertexAttribL2dvDelegate glVertexAttribL2dv;
public static glVertexAttribL3dDelegate glVertexAttribL3d;
public static glVertexAttribL3dvDelegate glVertexAttribL3dv;
public static glVertexAttribL4dDelegate glVertexAttribL4d;
public static glVertexAttribL4dvDelegate glVertexAttribL4dv;
public static glVertexAttribLFormatDelegate glVertexAttribLFormat;
public static glVertexAttribLPointerDelegate glVertexAttribLPointer;
public static glVertexAttribP1uiDelegate glVertexAttribP1ui;
public static glVertexAttribP1uivDelegate glVertexAttribP1uiv;
public static glVertexAttribP2uiDelegate glVertexAttribP2ui;
public static glVertexAttribP2uivDelegate glVertexAttribP2uiv;
public static glVertexAttribP3uiDelegate glVertexAttribP3ui;
public static glVertexAttribP3uivDelegate glVertexAttribP3uiv;
public static glVertexAttribP4uiDelegate glVertexAttribP4ui;
public static glVertexAttribP4uivDelegate glVertexAttribP4uiv;
public static glVertexAttribPointerDelegate glVertexAttribPointer;
public static glVertexBindingDivisorDelegate glVertexBindingDivisor;
public static glVertexP2uiDelegate glVertexP2ui;
public static glVertexP2uivDelegate glVertexP2uiv;
public static glVertexP3uiDelegate glVertexP3ui;
public static glVertexP3uivDelegate glVertexP3uiv;
public static glVertexP4uiDelegate glVertexP4ui;
public static glVertexP4uivDelegate glVertexP4uiv;
public static glVertexPointerDelegate glVertexPointer;
public static glViewportDelegate glViewport;
public static glViewportArrayvDelegate glViewportArrayv;
public static glViewportIndexedfDelegate glViewportIndexedf;
public static glViewportIndexedfvDelegate glViewportIndexedfv;
public static glWindowPos2dDelegate glWindowPos2d;
public static glWindowPos2dvDelegate glWindowPos2dv;
public static glWindowPos2fDelegate glWindowPos2f;
public static glWindowPos2fvDelegate glWindowPos2fv;
public static glWindowPos2iDelegate glWindowPos2i;
public static glWindowPos2ivDelegate glWindowPos2iv;
public static glWindowPos2sDelegate glWindowPos2s;
public static glWindowPos2svDelegate glWindowPos2sv;
public static glWindowPos3dDelegate glWindowPos3d;
public static glWindowPos3dvDelegate glWindowPos3dv;
public static glWindowPos3fDelegate glWindowPos3f;
public static glWindowPos3fvDelegate glWindowPos3fv;
public static glWindowPos3iDelegate glWindowPos3i;
public static glWindowPos3ivDelegate glWindowPos3iv;
public static glWindowPos3sDelegate glWindowPos3s;
public static glWindowPos3svDelegate glWindowPos3sv;
public static void Init(Func<string, IntPtr> getProcAddress){
T GetAddress<T>(string name){
var address = getProcAddress(name);
if(address != 0){
    return Marshal.GetDelegateForFunctionPointer<T>(getProcAddress(name));
}
return default(T);
}
glAccum = GetAddress<glAccumDelegate>("glAccum");
glActiveShaderProgram = GetAddress<glActiveShaderProgramDelegate>("glActiveShaderProgram");
glActiveTexture = GetAddress<glActiveTextureDelegate>("glActiveTexture");
glAlphaFunc = GetAddress<glAlphaFuncDelegate>("glAlphaFunc");
glAreTexturesResident = GetAddress<glAreTexturesResidentDelegate>("glAreTexturesResident");
glArrayElement = GetAddress<glArrayElementDelegate>("glArrayElement");
glAttachShader = GetAddress<glAttachShaderDelegate>("glAttachShader");
glBegin = GetAddress<glBeginDelegate>("glBegin");
glBeginConditionalRender = GetAddress<glBeginConditionalRenderDelegate>("glBeginConditionalRender");
glBeginQuery = GetAddress<glBeginQueryDelegate>("glBeginQuery");
glBeginQueryIndexed = GetAddress<glBeginQueryIndexedDelegate>("glBeginQueryIndexed");
glBeginTransformFeedback = GetAddress<glBeginTransformFeedbackDelegate>("glBeginTransformFeedback");
glBindAttribLocation = GetAddress<glBindAttribLocationDelegate>("glBindAttribLocation");
glBindBuffer = GetAddress<glBindBufferDelegate>("glBindBuffer");
glBindBufferBase = GetAddress<glBindBufferBaseDelegate>("glBindBufferBase");
glBindBufferRange = GetAddress<glBindBufferRangeDelegate>("glBindBufferRange");
glBindBuffersBase = GetAddress<glBindBuffersBaseDelegate>("glBindBuffersBase");
glBindBuffersRange = GetAddress<glBindBuffersRangeDelegate>("glBindBuffersRange");
glBindFragDataLocation = GetAddress<glBindFragDataLocationDelegate>("glBindFragDataLocation");
glBindFragDataLocationIndexed = GetAddress<glBindFragDataLocationIndexedDelegate>("glBindFragDataLocationIndexed");
glBindFramebuffer = GetAddress<glBindFramebufferDelegate>("glBindFramebuffer");
glBindImageTexture = GetAddress<glBindImageTextureDelegate>("glBindImageTexture");
glBindImageTextures = GetAddress<glBindImageTexturesDelegate>("glBindImageTextures");
glBindProgramPipeline = GetAddress<glBindProgramPipelineDelegate>("glBindProgramPipeline");
glBindRenderbuffer = GetAddress<glBindRenderbufferDelegate>("glBindRenderbuffer");
glBindSampler = GetAddress<glBindSamplerDelegate>("glBindSampler");
glBindSamplers = GetAddress<glBindSamplersDelegate>("glBindSamplers");
glBindTexture = GetAddress<glBindTextureDelegate>("glBindTexture");
glBindTextureUnit = GetAddress<glBindTextureUnitDelegate>("glBindTextureUnit");
glBindTextures = GetAddress<glBindTexturesDelegate>("glBindTextures");
glBindTransformFeedback = GetAddress<glBindTransformFeedbackDelegate>("glBindTransformFeedback");
glBindVertexArray = GetAddress<glBindVertexArrayDelegate>("glBindVertexArray");
glBindVertexBuffer = GetAddress<glBindVertexBufferDelegate>("glBindVertexBuffer");
glBindVertexBuffers = GetAddress<glBindVertexBuffersDelegate>("glBindVertexBuffers");
glBitmap = GetAddress<glBitmapDelegate>("glBitmap");
glBlendColor = GetAddress<glBlendColorDelegate>("glBlendColor");
glBlendEquation = GetAddress<glBlendEquationDelegate>("glBlendEquation");
glBlendEquationSeparate = GetAddress<glBlendEquationSeparateDelegate>("glBlendEquationSeparate");
glBlendEquationSeparatei = GetAddress<glBlendEquationSeparateiDelegate>("glBlendEquationSeparatei");
glBlendEquationi = GetAddress<glBlendEquationiDelegate>("glBlendEquationi");
glBlendFunc = GetAddress<glBlendFuncDelegate>("glBlendFunc");
glBlendFuncSeparate = GetAddress<glBlendFuncSeparateDelegate>("glBlendFuncSeparate");
glBlendFuncSeparatei = GetAddress<glBlendFuncSeparateiDelegate>("glBlendFuncSeparatei");
glBlendFunci = GetAddress<glBlendFunciDelegate>("glBlendFunci");
glBlitFramebuffer = GetAddress<glBlitFramebufferDelegate>("glBlitFramebuffer");
glBlitNamedFramebuffer = GetAddress<glBlitNamedFramebufferDelegate>("glBlitNamedFramebuffer");
glBufferData = GetAddress<glBufferDataDelegate>("glBufferData");
glBufferStorage = GetAddress<glBufferStorageDelegate>("glBufferStorage");
glBufferSubData = GetAddress<glBufferSubDataDelegate>("glBufferSubData");
glCallList = GetAddress<glCallListDelegate>("glCallList");
glCallLists = GetAddress<glCallListsDelegate>("glCallLists");
glCheckFramebufferStatus = GetAddress<glCheckFramebufferStatusDelegate>("glCheckFramebufferStatus");
glCheckNamedFramebufferStatus = GetAddress<glCheckNamedFramebufferStatusDelegate>("glCheckNamedFramebufferStatus");
glClampColor = GetAddress<glClampColorDelegate>("glClampColor");
glClear = GetAddress<glClearDelegate>("glClear");
glClearAccum = GetAddress<glClearAccumDelegate>("glClearAccum");
glClearBufferData = GetAddress<glClearBufferDataDelegate>("glClearBufferData");
glClearBufferSubData = GetAddress<glClearBufferSubDataDelegate>("glClearBufferSubData");
glClearBufferfi = GetAddress<glClearBufferfiDelegate>("glClearBufferfi");
glClearBufferfv = GetAddress<glClearBufferfvDelegate>("glClearBufferfv");
glClearBufferiv = GetAddress<glClearBufferivDelegate>("glClearBufferiv");
glClearBufferuiv = GetAddress<glClearBufferuivDelegate>("glClearBufferuiv");
glClearColor = GetAddress<glClearColorDelegate>("glClearColor");
glClearDepth = GetAddress<glClearDepthDelegate>("glClearDepth");
glClearDepthf = GetAddress<glClearDepthfDelegate>("glClearDepthf");
glClearIndex = GetAddress<glClearIndexDelegate>("glClearIndex");
glClearNamedBufferData = GetAddress<glClearNamedBufferDataDelegate>("glClearNamedBufferData");
glClearNamedBufferSubData = GetAddress<glClearNamedBufferSubDataDelegate>("glClearNamedBufferSubData");
glClearNamedFramebufferfi = GetAddress<glClearNamedFramebufferfiDelegate>("glClearNamedFramebufferfi");
glClearNamedFramebufferfv = GetAddress<glClearNamedFramebufferfvDelegate>("glClearNamedFramebufferfv");
glClearNamedFramebufferiv = GetAddress<glClearNamedFramebufferivDelegate>("glClearNamedFramebufferiv");
glClearNamedFramebufferuiv = GetAddress<glClearNamedFramebufferuivDelegate>("glClearNamedFramebufferuiv");
glClearStencil = GetAddress<glClearStencilDelegate>("glClearStencil");
glClearTexImage = GetAddress<glClearTexImageDelegate>("glClearTexImage");
glClearTexSubImage = GetAddress<glClearTexSubImageDelegate>("glClearTexSubImage");
glClientActiveTexture = GetAddress<glClientActiveTextureDelegate>("glClientActiveTexture");
glClipControl = GetAddress<glClipControlDelegate>("glClipControl");
glClipPlane = GetAddress<glClipPlaneDelegate>("glClipPlane");
glColor3b = GetAddress<glColor3bDelegate>("glColor3b");
glColor3bv = GetAddress<glColor3bvDelegate>("glColor3bv");
glColor3d = GetAddress<glColor3dDelegate>("glColor3d");
glColor3dv = GetAddress<glColor3dvDelegate>("glColor3dv");
glColor3f = GetAddress<glColor3fDelegate>("glColor3f");
glColor3fv = GetAddress<glColor3fvDelegate>("glColor3fv");
glColor3i = GetAddress<glColor3iDelegate>("glColor3i");
glColor3iv = GetAddress<glColor3ivDelegate>("glColor3iv");
glColor3s = GetAddress<glColor3sDelegate>("glColor3s");
glColor3sv = GetAddress<glColor3svDelegate>("glColor3sv");
glColor3ub = GetAddress<glColor3ubDelegate>("glColor3ub");
glColor3ubv = GetAddress<glColor3ubvDelegate>("glColor3ubv");
glColor3ui = GetAddress<glColor3uiDelegate>("glColor3ui");
glColor3uiv = GetAddress<glColor3uivDelegate>("glColor3uiv");
glColor3us = GetAddress<glColor3usDelegate>("glColor3us");
glColor3usv = GetAddress<glColor3usvDelegate>("glColor3usv");
glColor4b = GetAddress<glColor4bDelegate>("glColor4b");
glColor4bv = GetAddress<glColor4bvDelegate>("glColor4bv");
glColor4d = GetAddress<glColor4dDelegate>("glColor4d");
glColor4dv = GetAddress<glColor4dvDelegate>("glColor4dv");
glColor4f = GetAddress<glColor4fDelegate>("glColor4f");
glColor4fv = GetAddress<glColor4fvDelegate>("glColor4fv");
glColor4i = GetAddress<glColor4iDelegate>("glColor4i");
glColor4iv = GetAddress<glColor4ivDelegate>("glColor4iv");
glColor4s = GetAddress<glColor4sDelegate>("glColor4s");
glColor4sv = GetAddress<glColor4svDelegate>("glColor4sv");
glColor4ub = GetAddress<glColor4ubDelegate>("glColor4ub");
glColor4ubv = GetAddress<glColor4ubvDelegate>("glColor4ubv");
glColor4ui = GetAddress<glColor4uiDelegate>("glColor4ui");
glColor4uiv = GetAddress<glColor4uivDelegate>("glColor4uiv");
glColor4us = GetAddress<glColor4usDelegate>("glColor4us");
glColor4usv = GetAddress<glColor4usvDelegate>("glColor4usv");
glColorMask = GetAddress<glColorMaskDelegate>("glColorMask");
glColorMaski = GetAddress<glColorMaskiDelegate>("glColorMaski");
glColorMaterial = GetAddress<glColorMaterialDelegate>("glColorMaterial");
glColorP3ui = GetAddress<glColorP3uiDelegate>("glColorP3ui");
glColorP3uiv = GetAddress<glColorP3uivDelegate>("glColorP3uiv");
glColorP4ui = GetAddress<glColorP4uiDelegate>("glColorP4ui");
glColorP4uiv = GetAddress<glColorP4uivDelegate>("glColorP4uiv");
glColorPointer = GetAddress<glColorPointerDelegate>("glColorPointer");
glCompileShader = GetAddress<glCompileShaderDelegate>("glCompileShader");
glCompressedTexImage1D = GetAddress<glCompressedTexImage1DDelegate>("glCompressedTexImage1D");
glCompressedTexImage2D = GetAddress<glCompressedTexImage2DDelegate>("glCompressedTexImage2D");
glCompressedTexImage3D = GetAddress<glCompressedTexImage3DDelegate>("glCompressedTexImage3D");
glCompressedTexSubImage1D = GetAddress<glCompressedTexSubImage1DDelegate>("glCompressedTexSubImage1D");
glCompressedTexSubImage2D = GetAddress<glCompressedTexSubImage2DDelegate>("glCompressedTexSubImage2D");
glCompressedTexSubImage3D = GetAddress<glCompressedTexSubImage3DDelegate>("glCompressedTexSubImage3D");
glCompressedTextureSubImage1D = GetAddress<glCompressedTextureSubImage1DDelegate>("glCompressedTextureSubImage1D");
glCompressedTextureSubImage2D = GetAddress<glCompressedTextureSubImage2DDelegate>("glCompressedTextureSubImage2D");
glCompressedTextureSubImage3D = GetAddress<glCompressedTextureSubImage3DDelegate>("glCompressedTextureSubImage3D");
glCopyBufferSubData = GetAddress<glCopyBufferSubDataDelegate>("glCopyBufferSubData");
glCopyImageSubData = GetAddress<glCopyImageSubDataDelegate>("glCopyImageSubData");
glCopyNamedBufferSubData = GetAddress<glCopyNamedBufferSubDataDelegate>("glCopyNamedBufferSubData");
glCopyPixels = GetAddress<glCopyPixelsDelegate>("glCopyPixels");
glCopyTexImage1D = GetAddress<glCopyTexImage1DDelegate>("glCopyTexImage1D");
glCopyTexImage2D = GetAddress<glCopyTexImage2DDelegate>("glCopyTexImage2D");
glCopyTexSubImage1D = GetAddress<glCopyTexSubImage1DDelegate>("glCopyTexSubImage1D");
glCopyTexSubImage2D = GetAddress<glCopyTexSubImage2DDelegate>("glCopyTexSubImage2D");
glCopyTexSubImage3D = GetAddress<glCopyTexSubImage3DDelegate>("glCopyTexSubImage3D");
glCopyTextureSubImage1D = GetAddress<glCopyTextureSubImage1DDelegate>("glCopyTextureSubImage1D");
glCopyTextureSubImage2D = GetAddress<glCopyTextureSubImage2DDelegate>("glCopyTextureSubImage2D");
glCopyTextureSubImage3D = GetAddress<glCopyTextureSubImage3DDelegate>("glCopyTextureSubImage3D");
glCreateBuffers = GetAddress<glCreateBuffersDelegate>("glCreateBuffers");
glCreateFramebuffers = GetAddress<glCreateFramebuffersDelegate>("glCreateFramebuffers");
glCreateProgram = GetAddress<glCreateProgramDelegate>("glCreateProgram");
glCreateProgramPipelines = GetAddress<glCreateProgramPipelinesDelegate>("glCreateProgramPipelines");
glCreateQueries = GetAddress<glCreateQueriesDelegate>("glCreateQueries");
glCreateRenderbuffers = GetAddress<glCreateRenderbuffersDelegate>("glCreateRenderbuffers");
glCreateSamplers = GetAddress<glCreateSamplersDelegate>("glCreateSamplers");
glCreateShader = GetAddress<glCreateShaderDelegate>("glCreateShader");
glCreateShaderProgramv = GetAddress<glCreateShaderProgramvDelegate>("glCreateShaderProgramv");
glCreateTextures = GetAddress<glCreateTexturesDelegate>("glCreateTextures");
glCreateTransformFeedbacks = GetAddress<glCreateTransformFeedbacksDelegate>("glCreateTransformFeedbacks");
glCreateVertexArrays = GetAddress<glCreateVertexArraysDelegate>("glCreateVertexArrays");
glCullFace = GetAddress<glCullFaceDelegate>("glCullFace");
glDebugMessageControl = GetAddress<glDebugMessageControlDelegate>("glDebugMessageControl");
glDebugMessageInsert = GetAddress<glDebugMessageInsertDelegate>("glDebugMessageInsert");
glDeleteBuffers = GetAddress<glDeleteBuffersDelegate>("glDeleteBuffers");
glDeleteFramebuffers = GetAddress<glDeleteFramebuffersDelegate>("glDeleteFramebuffers");
glDeleteLists = GetAddress<glDeleteListsDelegate>("glDeleteLists");
glDeleteProgram = GetAddress<glDeleteProgramDelegate>("glDeleteProgram");
glDeleteProgramPipelines = GetAddress<glDeleteProgramPipelinesDelegate>("glDeleteProgramPipelines");
glDeleteQueries = GetAddress<glDeleteQueriesDelegate>("glDeleteQueries");
glDeleteRenderbuffers = GetAddress<glDeleteRenderbuffersDelegate>("glDeleteRenderbuffers");
glDeleteSamplers = GetAddress<glDeleteSamplersDelegate>("glDeleteSamplers");
glDeleteShader = GetAddress<glDeleteShaderDelegate>("glDeleteShader");
glDeleteTextures = GetAddress<glDeleteTexturesDelegate>("glDeleteTextures");
glDeleteTransformFeedbacks = GetAddress<glDeleteTransformFeedbacksDelegate>("glDeleteTransformFeedbacks");
glDeleteVertexArrays = GetAddress<glDeleteVertexArraysDelegate>("glDeleteVertexArrays");
glDepthFunc = GetAddress<glDepthFuncDelegate>("glDepthFunc");
glDepthMask = GetAddress<glDepthMaskDelegate>("glDepthMask");
glDepthRange = GetAddress<glDepthRangeDelegate>("glDepthRange");
glDepthRangeArrayv = GetAddress<glDepthRangeArrayvDelegate>("glDepthRangeArrayv");
glDepthRangeIndexed = GetAddress<glDepthRangeIndexedDelegate>("glDepthRangeIndexed");
glDepthRangef = GetAddress<glDepthRangefDelegate>("glDepthRangef");
glDetachShader = GetAddress<glDetachShaderDelegate>("glDetachShader");
glDisable = GetAddress<glDisableDelegate>("glDisable");
glDisableClientState = GetAddress<glDisableClientStateDelegate>("glDisableClientState");
glDisableVertexArrayAttrib = GetAddress<glDisableVertexArrayAttribDelegate>("glDisableVertexArrayAttrib");
glDisableVertexAttribArray = GetAddress<glDisableVertexAttribArrayDelegate>("glDisableVertexAttribArray");
glDisablei = GetAddress<glDisableiDelegate>("glDisablei");
glDispatchCompute = GetAddress<glDispatchComputeDelegate>("glDispatchCompute");
glDispatchComputeIndirect = GetAddress<glDispatchComputeIndirectDelegate>("glDispatchComputeIndirect");
glDrawArrays = GetAddress<glDrawArraysDelegate>("glDrawArrays");
glDrawArraysIndirect = GetAddress<glDrawArraysIndirectDelegate>("glDrawArraysIndirect");
glDrawArraysInstanced = GetAddress<glDrawArraysInstancedDelegate>("glDrawArraysInstanced");
glDrawArraysInstancedBaseInstance = GetAddress<glDrawArraysInstancedBaseInstanceDelegate>("glDrawArraysInstancedBaseInstance");
glDrawBuffer = GetAddress<glDrawBufferDelegate>("glDrawBuffer");
glDrawBuffers = GetAddress<glDrawBuffersDelegate>("glDrawBuffers");
glDrawElements = GetAddress<glDrawElementsDelegate>("glDrawElements");
glDrawElementsBaseVertex = GetAddress<glDrawElementsBaseVertexDelegate>("glDrawElementsBaseVertex");
glDrawElementsIndirect = GetAddress<glDrawElementsIndirectDelegate>("glDrawElementsIndirect");
glDrawElementsInstanced = GetAddress<glDrawElementsInstancedDelegate>("glDrawElementsInstanced");
glDrawElementsInstancedBaseInstance = GetAddress<glDrawElementsInstancedBaseInstanceDelegate>("glDrawElementsInstancedBaseInstance");
glDrawElementsInstancedBaseVertex = GetAddress<glDrawElementsInstancedBaseVertexDelegate>("glDrawElementsInstancedBaseVertex");
glDrawElementsInstancedBaseVertexBaseInstance = GetAddress<glDrawElementsInstancedBaseVertexBaseInstanceDelegate>("glDrawElementsInstancedBaseVertexBaseInstance");
glDrawPixels = GetAddress<glDrawPixelsDelegate>("glDrawPixels");
glDrawRangeElements = GetAddress<glDrawRangeElementsDelegate>("glDrawRangeElements");
glDrawRangeElementsBaseVertex = GetAddress<glDrawRangeElementsBaseVertexDelegate>("glDrawRangeElementsBaseVertex");
glDrawTransformFeedback = GetAddress<glDrawTransformFeedbackDelegate>("glDrawTransformFeedback");
glDrawTransformFeedbackInstanced = GetAddress<glDrawTransformFeedbackInstancedDelegate>("glDrawTransformFeedbackInstanced");
glDrawTransformFeedbackStream = GetAddress<glDrawTransformFeedbackStreamDelegate>("glDrawTransformFeedbackStream");
glDrawTransformFeedbackStreamInstanced = GetAddress<glDrawTransformFeedbackStreamInstancedDelegate>("glDrawTransformFeedbackStreamInstanced");
glEdgeFlag = GetAddress<glEdgeFlagDelegate>("glEdgeFlag");
glEdgeFlagPointer = GetAddress<glEdgeFlagPointerDelegate>("glEdgeFlagPointer");
glEdgeFlagv = GetAddress<glEdgeFlagvDelegate>("glEdgeFlagv");
glEnable = GetAddress<glEnableDelegate>("glEnable");
glEnableClientState = GetAddress<glEnableClientStateDelegate>("glEnableClientState");
glEnableVertexArrayAttrib = GetAddress<glEnableVertexArrayAttribDelegate>("glEnableVertexArrayAttrib");
glEnableVertexAttribArray = GetAddress<glEnableVertexAttribArrayDelegate>("glEnableVertexAttribArray");
glEnablei = GetAddress<glEnableiDelegate>("glEnablei");
glEnd = GetAddress<glEndDelegate>("glEnd");
glEndConditionalRender = GetAddress<glEndConditionalRenderDelegate>("glEndConditionalRender");
glEndList = GetAddress<glEndListDelegate>("glEndList");
glEndQuery = GetAddress<glEndQueryDelegate>("glEndQuery");
glEndQueryIndexed = GetAddress<glEndQueryIndexedDelegate>("glEndQueryIndexed");
glEndTransformFeedback = GetAddress<glEndTransformFeedbackDelegate>("glEndTransformFeedback");
glEvalCoord1d = GetAddress<glEvalCoord1dDelegate>("glEvalCoord1d");
glEvalCoord1dv = GetAddress<glEvalCoord1dvDelegate>("glEvalCoord1dv");
glEvalCoord1f = GetAddress<glEvalCoord1fDelegate>("glEvalCoord1f");
glEvalCoord1fv = GetAddress<glEvalCoord1fvDelegate>("glEvalCoord1fv");
glEvalCoord2d = GetAddress<glEvalCoord2dDelegate>("glEvalCoord2d");
glEvalCoord2dv = GetAddress<glEvalCoord2dvDelegate>("glEvalCoord2dv");
glEvalCoord2f = GetAddress<glEvalCoord2fDelegate>("glEvalCoord2f");
glEvalCoord2fv = GetAddress<glEvalCoord2fvDelegate>("glEvalCoord2fv");
glEvalMesh1 = GetAddress<glEvalMesh1Delegate>("glEvalMesh1");
glEvalMesh2 = GetAddress<glEvalMesh2Delegate>("glEvalMesh2");
glEvalPoint1 = GetAddress<glEvalPoint1Delegate>("glEvalPoint1");
glEvalPoint2 = GetAddress<glEvalPoint2Delegate>("glEvalPoint2");
glFeedbackBuffer = GetAddress<glFeedbackBufferDelegate>("glFeedbackBuffer");
glFinish = GetAddress<glFinishDelegate>("glFinish");
glFlush = GetAddress<glFlushDelegate>("glFlush");
glFlushMappedBufferRange = GetAddress<glFlushMappedBufferRangeDelegate>("glFlushMappedBufferRange");
glFlushMappedNamedBufferRange = GetAddress<glFlushMappedNamedBufferRangeDelegate>("glFlushMappedNamedBufferRange");
glFogCoordPointer = GetAddress<glFogCoordPointerDelegate>("glFogCoordPointer");
glFogCoordd = GetAddress<glFogCoorddDelegate>("glFogCoordd");
glFogCoorddv = GetAddress<glFogCoorddvDelegate>("glFogCoorddv");
glFogCoordf = GetAddress<glFogCoordfDelegate>("glFogCoordf");
glFogCoordfv = GetAddress<glFogCoordfvDelegate>("glFogCoordfv");
glFogf = GetAddress<glFogfDelegate>("glFogf");
glFogfv = GetAddress<glFogfvDelegate>("glFogfv");
glFogi = GetAddress<glFogiDelegate>("glFogi");
glFogiv = GetAddress<glFogivDelegate>("glFogiv");
glFramebufferParameteri = GetAddress<glFramebufferParameteriDelegate>("glFramebufferParameteri");
glFramebufferRenderbuffer = GetAddress<glFramebufferRenderbufferDelegate>("glFramebufferRenderbuffer");
glFramebufferTexture = GetAddress<glFramebufferTextureDelegate>("glFramebufferTexture");
glFramebufferTexture1D = GetAddress<glFramebufferTexture1DDelegate>("glFramebufferTexture1D");
glFramebufferTexture2D = GetAddress<glFramebufferTexture2DDelegate>("glFramebufferTexture2D");
glFramebufferTexture3D = GetAddress<glFramebufferTexture3DDelegate>("glFramebufferTexture3D");
glFramebufferTextureLayer = GetAddress<glFramebufferTextureLayerDelegate>("glFramebufferTextureLayer");
glFrontFace = GetAddress<glFrontFaceDelegate>("glFrontFace");
glFrustum = GetAddress<glFrustumDelegate>("glFrustum");
glGenBuffers = GetAddress<glGenBuffersDelegate>("glGenBuffers");
glGenFramebuffers = GetAddress<glGenFramebuffersDelegate>("glGenFramebuffers");
glGenLists = GetAddress<glGenListsDelegate>("glGenLists");
glGenProgramPipelines = GetAddress<glGenProgramPipelinesDelegate>("glGenProgramPipelines");
glGenQueries = GetAddress<glGenQueriesDelegate>("glGenQueries");
glGenRenderbuffers = GetAddress<glGenRenderbuffersDelegate>("glGenRenderbuffers");
glGenSamplers = GetAddress<glGenSamplersDelegate>("glGenSamplers");
glGenTextures = GetAddress<glGenTexturesDelegate>("glGenTextures");
glGenTransformFeedbacks = GetAddress<glGenTransformFeedbacksDelegate>("glGenTransformFeedbacks");
glGenVertexArrays = GetAddress<glGenVertexArraysDelegate>("glGenVertexArrays");
glGenerateMipmap = GetAddress<glGenerateMipmapDelegate>("glGenerateMipmap");
glGenerateTextureMipmap = GetAddress<glGenerateTextureMipmapDelegate>("glGenerateTextureMipmap");
glGetActiveAtomicCounterBufferiv = GetAddress<glGetActiveAtomicCounterBufferivDelegate>("glGetActiveAtomicCounterBufferiv");
glGetActiveAttrib = GetAddress<glGetActiveAttribDelegate>("glGetActiveAttrib");
glGetActiveSubroutineName = GetAddress<glGetActiveSubroutineNameDelegate>("glGetActiveSubroutineName");
glGetActiveSubroutineUniformName = GetAddress<glGetActiveSubroutineUniformNameDelegate>("glGetActiveSubroutineUniformName");
glGetActiveSubroutineUniformiv = GetAddress<glGetActiveSubroutineUniformivDelegate>("glGetActiveSubroutineUniformiv");
glGetActiveUniform = GetAddress<glGetActiveUniformDelegate>("glGetActiveUniform");
glGetActiveUniformBlockName = GetAddress<glGetActiveUniformBlockNameDelegate>("glGetActiveUniformBlockName");
glGetActiveUniformBlockiv = GetAddress<glGetActiveUniformBlockivDelegate>("glGetActiveUniformBlockiv");
glGetActiveUniformName = GetAddress<glGetActiveUniformNameDelegate>("glGetActiveUniformName");
glGetActiveUniformsiv = GetAddress<glGetActiveUniformsivDelegate>("glGetActiveUniformsiv");
glGetAttachedShaders = GetAddress<glGetAttachedShadersDelegate>("glGetAttachedShaders");
glGetAttribLocation = GetAddress<glGetAttribLocationDelegate>("glGetAttribLocation");
glGetBooleani_v = GetAddress<glGetBooleani_vDelegate>("glGetBooleani_v");
glGetBooleanv = GetAddress<glGetBooleanvDelegate>("glGetBooleanv");
glGetBufferParameteri64v = GetAddress<glGetBufferParameteri64vDelegate>("glGetBufferParameteri64v");
glGetBufferParameteriv = GetAddress<glGetBufferParameterivDelegate>("glGetBufferParameteriv");
glGetBufferPointerv = GetAddress<glGetBufferPointervDelegate>("glGetBufferPointerv");
glGetBufferSubData = GetAddress<glGetBufferSubDataDelegate>("glGetBufferSubData");
glGetClipPlane = GetAddress<glGetClipPlaneDelegate>("glGetClipPlane");
glGetCompressedTexImage = GetAddress<glGetCompressedTexImageDelegate>("glGetCompressedTexImage");
glGetCompressedTextureImage = GetAddress<glGetCompressedTextureImageDelegate>("glGetCompressedTextureImage");
glGetCompressedTextureSubImage = GetAddress<glGetCompressedTextureSubImageDelegate>("glGetCompressedTextureSubImage");
glGetDebugMessageLog = GetAddress<glGetDebugMessageLogDelegate>("glGetDebugMessageLog");
glGetDoublei_v = GetAddress<glGetDoublei_vDelegate>("glGetDoublei_v");
glGetDoublev = GetAddress<glGetDoublevDelegate>("glGetDoublev");
glGetError = GetAddress<glGetErrorDelegate>("glGetError");
glGetFloati_v = GetAddress<glGetFloati_vDelegate>("glGetFloati_v");
glGetFloatv = GetAddress<glGetFloatvDelegate>("glGetFloatv");
glGetFragDataIndex = GetAddress<glGetFragDataIndexDelegate>("glGetFragDataIndex");
glGetFragDataLocation = GetAddress<glGetFragDataLocationDelegate>("glGetFragDataLocation");
glGetFramebufferAttachmentParameteriv = GetAddress<glGetFramebufferAttachmentParameterivDelegate>("glGetFramebufferAttachmentParameteriv");
glGetFramebufferParameteriv = GetAddress<glGetFramebufferParameterivDelegate>("glGetFramebufferParameteriv");
glGetGraphicsResetStatus = GetAddress<glGetGraphicsResetStatusDelegate>("glGetGraphicsResetStatus");
glGetInteger64i_v = GetAddress<glGetInteger64i_vDelegate>("glGetInteger64i_v");
glGetInteger64v = GetAddress<glGetInteger64vDelegate>("glGetInteger64v");
glGetIntegeri_v = GetAddress<glGetIntegeri_vDelegate>("glGetIntegeri_v");
glGetIntegerv = GetAddress<glGetIntegervDelegate>("glGetIntegerv");
glGetInternalformati64v = GetAddress<glGetInternalformati64vDelegate>("glGetInternalformati64v");
glGetInternalformativ = GetAddress<glGetInternalformativDelegate>("glGetInternalformativ");
glGetLightfv = GetAddress<glGetLightfvDelegate>("glGetLightfv");
glGetLightiv = GetAddress<glGetLightivDelegate>("glGetLightiv");
glGetMapdv = GetAddress<glGetMapdvDelegate>("glGetMapdv");
glGetMapfv = GetAddress<glGetMapfvDelegate>("glGetMapfv");
glGetMapiv = GetAddress<glGetMapivDelegate>("glGetMapiv");
glGetMaterialfv = GetAddress<glGetMaterialfvDelegate>("glGetMaterialfv");
glGetMaterialiv = GetAddress<glGetMaterialivDelegate>("glGetMaterialiv");
glGetMultisamplefv = GetAddress<glGetMultisamplefvDelegate>("glGetMultisamplefv");
glGetNamedBufferParameteri64v = GetAddress<glGetNamedBufferParameteri64vDelegate>("glGetNamedBufferParameteri64v");
glGetNamedBufferParameteriv = GetAddress<glGetNamedBufferParameterivDelegate>("glGetNamedBufferParameteriv");
glGetNamedBufferPointerv = GetAddress<glGetNamedBufferPointervDelegate>("glGetNamedBufferPointerv");
glGetNamedBufferSubData = GetAddress<glGetNamedBufferSubDataDelegate>("glGetNamedBufferSubData");
glGetNamedFramebufferAttachmentParameteriv = GetAddress<glGetNamedFramebufferAttachmentParameterivDelegate>("glGetNamedFramebufferAttachmentParameteriv");
glGetNamedFramebufferParameteriv = GetAddress<glGetNamedFramebufferParameterivDelegate>("glGetNamedFramebufferParameteriv");
glGetNamedRenderbufferParameteriv = GetAddress<glGetNamedRenderbufferParameterivDelegate>("glGetNamedRenderbufferParameteriv");
glGetObjectLabel = GetAddress<glGetObjectLabelDelegate>("glGetObjectLabel");
glGetObjectPtrLabel = GetAddress<glGetObjectPtrLabelDelegate>("glGetObjectPtrLabel");
glGetPixelMapfv = GetAddress<glGetPixelMapfvDelegate>("glGetPixelMapfv");
glGetPixelMapuiv = GetAddress<glGetPixelMapuivDelegate>("glGetPixelMapuiv");
glGetPixelMapusv = GetAddress<glGetPixelMapusvDelegate>("glGetPixelMapusv");
glGetPointerv = GetAddress<glGetPointervDelegate>("glGetPointerv");
glGetPolygonStipple = GetAddress<glGetPolygonStippleDelegate>("glGetPolygonStipple");
glGetProgramBinary = GetAddress<glGetProgramBinaryDelegate>("glGetProgramBinary");
glGetProgramInfoLog = GetAddress<glGetProgramInfoLogDelegate>("glGetProgramInfoLog");
glGetProgramInterfaceiv = GetAddress<glGetProgramInterfaceivDelegate>("glGetProgramInterfaceiv");
glGetProgramPipelineInfoLog = GetAddress<glGetProgramPipelineInfoLogDelegate>("glGetProgramPipelineInfoLog");
glGetProgramPipelineiv = GetAddress<glGetProgramPipelineivDelegate>("glGetProgramPipelineiv");
glGetProgramResourceIndex = GetAddress<glGetProgramResourceIndexDelegate>("glGetProgramResourceIndex");
glGetProgramResourceLocation = GetAddress<glGetProgramResourceLocationDelegate>("glGetProgramResourceLocation");
glGetProgramResourceLocationIndex = GetAddress<glGetProgramResourceLocationIndexDelegate>("glGetProgramResourceLocationIndex");
glGetProgramResourceName = GetAddress<glGetProgramResourceNameDelegate>("glGetProgramResourceName");
glGetProgramResourceiv = GetAddress<glGetProgramResourceivDelegate>("glGetProgramResourceiv");
glGetProgramStageiv = GetAddress<glGetProgramStageivDelegate>("glGetProgramStageiv");
glGetProgramiv = GetAddress<glGetProgramivDelegate>("glGetProgramiv");
glGetQueryBufferObjecti64v = GetAddress<glGetQueryBufferObjecti64vDelegate>("glGetQueryBufferObjecti64v");
glGetQueryBufferObjectiv = GetAddress<glGetQueryBufferObjectivDelegate>("glGetQueryBufferObjectiv");
glGetQueryBufferObjectui64v = GetAddress<glGetQueryBufferObjectui64vDelegate>("glGetQueryBufferObjectui64v");
glGetQueryBufferObjectuiv = GetAddress<glGetQueryBufferObjectuivDelegate>("glGetQueryBufferObjectuiv");
glGetQueryIndexediv = GetAddress<glGetQueryIndexedivDelegate>("glGetQueryIndexediv");
glGetQueryObjecti64v = GetAddress<glGetQueryObjecti64vDelegate>("glGetQueryObjecti64v");
glGetQueryObjectiv = GetAddress<glGetQueryObjectivDelegate>("glGetQueryObjectiv");
glGetQueryObjectui64v = GetAddress<glGetQueryObjectui64vDelegate>("glGetQueryObjectui64v");
glGetQueryObjectuiv = GetAddress<glGetQueryObjectuivDelegate>("glGetQueryObjectuiv");
glGetQueryiv = GetAddress<glGetQueryivDelegate>("glGetQueryiv");
glGetRenderbufferParameteriv = GetAddress<glGetRenderbufferParameterivDelegate>("glGetRenderbufferParameteriv");
glGetSamplerParameterIiv = GetAddress<glGetSamplerParameterIivDelegate>("glGetSamplerParameterIiv");
glGetSamplerParameterIuiv = GetAddress<glGetSamplerParameterIuivDelegate>("glGetSamplerParameterIuiv");
glGetSamplerParameterfv = GetAddress<glGetSamplerParameterfvDelegate>("glGetSamplerParameterfv");
glGetSamplerParameteriv = GetAddress<glGetSamplerParameterivDelegate>("glGetSamplerParameteriv");
glGetShaderInfoLog = GetAddress<glGetShaderInfoLogDelegate>("glGetShaderInfoLog");
glGetShaderPrecisionFormat = GetAddress<glGetShaderPrecisionFormatDelegate>("glGetShaderPrecisionFormat");
glGetShaderSource = GetAddress<glGetShaderSourceDelegate>("glGetShaderSource");
glGetShaderiv = GetAddress<glGetShaderivDelegate>("glGetShaderiv");
glGetString = GetAddress<glGetStringDelegate>("glGetString");
glGetStringi = GetAddress<glGetStringiDelegate>("glGetStringi");
glGetSubroutineIndex = GetAddress<glGetSubroutineIndexDelegate>("glGetSubroutineIndex");
glGetSubroutineUniformLocation = GetAddress<glGetSubroutineUniformLocationDelegate>("glGetSubroutineUniformLocation");
glGetTexEnvfv = GetAddress<glGetTexEnvfvDelegate>("glGetTexEnvfv");
glGetTexEnviv = GetAddress<glGetTexEnvivDelegate>("glGetTexEnviv");
glGetTexGendv = GetAddress<glGetTexGendvDelegate>("glGetTexGendv");
glGetTexGenfv = GetAddress<glGetTexGenfvDelegate>("glGetTexGenfv");
glGetTexGeniv = GetAddress<glGetTexGenivDelegate>("glGetTexGeniv");
glGetTexImage = GetAddress<glGetTexImageDelegate>("glGetTexImage");
glGetTexLevelParameterfv = GetAddress<glGetTexLevelParameterfvDelegate>("glGetTexLevelParameterfv");
glGetTexLevelParameteriv = GetAddress<glGetTexLevelParameterivDelegate>("glGetTexLevelParameteriv");
glGetTexParameterIiv = GetAddress<glGetTexParameterIivDelegate>("glGetTexParameterIiv");
glGetTexParameterIuiv = GetAddress<glGetTexParameterIuivDelegate>("glGetTexParameterIuiv");
glGetTexParameterfv = GetAddress<glGetTexParameterfvDelegate>("glGetTexParameterfv");
glGetTexParameteriv = GetAddress<glGetTexParameterivDelegate>("glGetTexParameteriv");
glGetTextureImage = GetAddress<glGetTextureImageDelegate>("glGetTextureImage");
glGetTextureLevelParameterfv = GetAddress<glGetTextureLevelParameterfvDelegate>("glGetTextureLevelParameterfv");
glGetTextureLevelParameteriv = GetAddress<glGetTextureLevelParameterivDelegate>("glGetTextureLevelParameteriv");
glGetTextureParameterIiv = GetAddress<glGetTextureParameterIivDelegate>("glGetTextureParameterIiv");
glGetTextureParameterIuiv = GetAddress<glGetTextureParameterIuivDelegate>("glGetTextureParameterIuiv");
glGetTextureParameterfv = GetAddress<glGetTextureParameterfvDelegate>("glGetTextureParameterfv");
glGetTextureParameteriv = GetAddress<glGetTextureParameterivDelegate>("glGetTextureParameteriv");
glGetTextureSubImage = GetAddress<glGetTextureSubImageDelegate>("glGetTextureSubImage");
glGetTransformFeedbackVarying = GetAddress<glGetTransformFeedbackVaryingDelegate>("glGetTransformFeedbackVarying");
glGetTransformFeedbacki64_v = GetAddress<glGetTransformFeedbacki64_vDelegate>("glGetTransformFeedbacki64_v");
glGetTransformFeedbacki_v = GetAddress<glGetTransformFeedbacki_vDelegate>("glGetTransformFeedbacki_v");
glGetTransformFeedbackiv = GetAddress<glGetTransformFeedbackivDelegate>("glGetTransformFeedbackiv");
glGetUniformBlockIndex = GetAddress<glGetUniformBlockIndexDelegate>("glGetUniformBlockIndex");
glGetUniformIndices = GetAddress<glGetUniformIndicesDelegate>("glGetUniformIndices");
glGetUniformLocation = GetAddress<glGetUniformLocationDelegate>("glGetUniformLocation");
glGetUniformSubroutineuiv = GetAddress<glGetUniformSubroutineuivDelegate>("glGetUniformSubroutineuiv");
glGetUniformdv = GetAddress<glGetUniformdvDelegate>("glGetUniformdv");
glGetUniformfv = GetAddress<glGetUniformfvDelegate>("glGetUniformfv");
glGetUniformiv = GetAddress<glGetUniformivDelegate>("glGetUniformiv");
glGetUniformuiv = GetAddress<glGetUniformuivDelegate>("glGetUniformuiv");
glGetVertexArrayIndexed64iv = GetAddress<glGetVertexArrayIndexed64ivDelegate>("glGetVertexArrayIndexed64iv");
glGetVertexArrayIndexediv = GetAddress<glGetVertexArrayIndexedivDelegate>("glGetVertexArrayIndexediv");
glGetVertexArrayiv = GetAddress<glGetVertexArrayivDelegate>("glGetVertexArrayiv");
glGetVertexAttribIiv = GetAddress<glGetVertexAttribIivDelegate>("glGetVertexAttribIiv");
glGetVertexAttribIuiv = GetAddress<glGetVertexAttribIuivDelegate>("glGetVertexAttribIuiv");
glGetVertexAttribLdv = GetAddress<glGetVertexAttribLdvDelegate>("glGetVertexAttribLdv");
glGetVertexAttribPointerv = GetAddress<glGetVertexAttribPointervDelegate>("glGetVertexAttribPointerv");
glGetVertexAttribdv = GetAddress<glGetVertexAttribdvDelegate>("glGetVertexAttribdv");
glGetVertexAttribfv = GetAddress<glGetVertexAttribfvDelegate>("glGetVertexAttribfv");
glGetVertexAttribiv = GetAddress<glGetVertexAttribivDelegate>("glGetVertexAttribiv");
glGetnColorTable = GetAddress<glGetnColorTableDelegate>("glGetnColorTable");
glGetnCompressedTexImage = GetAddress<glGetnCompressedTexImageDelegate>("glGetnCompressedTexImage");
glGetnConvolutionFilter = GetAddress<glGetnConvolutionFilterDelegate>("glGetnConvolutionFilter");
glGetnHistogram = GetAddress<glGetnHistogramDelegate>("glGetnHistogram");
glGetnMapdv = GetAddress<glGetnMapdvDelegate>("glGetnMapdv");
glGetnMapfv = GetAddress<glGetnMapfvDelegate>("glGetnMapfv");
glGetnMapiv = GetAddress<glGetnMapivDelegate>("glGetnMapiv");
glGetnMinmax = GetAddress<glGetnMinmaxDelegate>("glGetnMinmax");
glGetnPixelMapfv = GetAddress<glGetnPixelMapfvDelegate>("glGetnPixelMapfv");
glGetnPixelMapuiv = GetAddress<glGetnPixelMapuivDelegate>("glGetnPixelMapuiv");
glGetnPixelMapusv = GetAddress<glGetnPixelMapusvDelegate>("glGetnPixelMapusv");
glGetnPolygonStipple = GetAddress<glGetnPolygonStippleDelegate>("glGetnPolygonStipple");
glGetnSeparableFilter = GetAddress<glGetnSeparableFilterDelegate>("glGetnSeparableFilter");
glGetnTexImage = GetAddress<glGetnTexImageDelegate>("glGetnTexImage");
glGetnUniformdv = GetAddress<glGetnUniformdvDelegate>("glGetnUniformdv");
glGetnUniformfv = GetAddress<glGetnUniformfvDelegate>("glGetnUniformfv");
glGetnUniformiv = GetAddress<glGetnUniformivDelegate>("glGetnUniformiv");
glGetnUniformuiv = GetAddress<glGetnUniformuivDelegate>("glGetnUniformuiv");
glHint = GetAddress<glHintDelegate>("glHint");
glIndexMask = GetAddress<glIndexMaskDelegate>("glIndexMask");
glIndexPointer = GetAddress<glIndexPointerDelegate>("glIndexPointer");
glIndexd = GetAddress<glIndexdDelegate>("glIndexd");
glIndexdv = GetAddress<glIndexdvDelegate>("glIndexdv");
glIndexf = GetAddress<glIndexfDelegate>("glIndexf");
glIndexfv = GetAddress<glIndexfvDelegate>("glIndexfv");
glIndexi = GetAddress<glIndexiDelegate>("glIndexi");
glIndexiv = GetAddress<glIndexivDelegate>("glIndexiv");
glIndexs = GetAddress<glIndexsDelegate>("glIndexs");
glIndexsv = GetAddress<glIndexsvDelegate>("glIndexsv");
glIndexub = GetAddress<glIndexubDelegate>("glIndexub");
glIndexubv = GetAddress<glIndexubvDelegate>("glIndexubv");
glInitNames = GetAddress<glInitNamesDelegate>("glInitNames");
glInterleavedArrays = GetAddress<glInterleavedArraysDelegate>("glInterleavedArrays");
glInvalidateBufferData = GetAddress<glInvalidateBufferDataDelegate>("glInvalidateBufferData");
glInvalidateBufferSubData = GetAddress<glInvalidateBufferSubDataDelegate>("glInvalidateBufferSubData");
glInvalidateFramebuffer = GetAddress<glInvalidateFramebufferDelegate>("glInvalidateFramebuffer");
glInvalidateNamedFramebufferData = GetAddress<glInvalidateNamedFramebufferDataDelegate>("glInvalidateNamedFramebufferData");
glInvalidateNamedFramebufferSubData = GetAddress<glInvalidateNamedFramebufferSubDataDelegate>("glInvalidateNamedFramebufferSubData");
glInvalidateSubFramebuffer = GetAddress<glInvalidateSubFramebufferDelegate>("glInvalidateSubFramebuffer");
glInvalidateTexImage = GetAddress<glInvalidateTexImageDelegate>("glInvalidateTexImage");
glInvalidateTexSubImage = GetAddress<glInvalidateTexSubImageDelegate>("glInvalidateTexSubImage");
glIsBuffer = GetAddress<glIsBufferDelegate>("glIsBuffer");
glIsEnabled = GetAddress<glIsEnabledDelegate>("glIsEnabled");
glIsEnabledi = GetAddress<glIsEnablediDelegate>("glIsEnabledi");
glIsFramebuffer = GetAddress<glIsFramebufferDelegate>("glIsFramebuffer");
glIsList = GetAddress<glIsListDelegate>("glIsList");
glIsProgram = GetAddress<glIsProgramDelegate>("glIsProgram");
glIsProgramPipeline = GetAddress<glIsProgramPipelineDelegate>("glIsProgramPipeline");
glIsQuery = GetAddress<glIsQueryDelegate>("glIsQuery");
glIsRenderbuffer = GetAddress<glIsRenderbufferDelegate>("glIsRenderbuffer");
glIsSampler = GetAddress<glIsSamplerDelegate>("glIsSampler");
glIsShader = GetAddress<glIsShaderDelegate>("glIsShader");
glIsTexture = GetAddress<glIsTextureDelegate>("glIsTexture");
glIsTransformFeedback = GetAddress<glIsTransformFeedbackDelegate>("glIsTransformFeedback");
glIsVertexArray = GetAddress<glIsVertexArrayDelegate>("glIsVertexArray");
glLightModelf = GetAddress<glLightModelfDelegate>("glLightModelf");
glLightModelfv = GetAddress<glLightModelfvDelegate>("glLightModelfv");
glLightModeli = GetAddress<glLightModeliDelegate>("glLightModeli");
glLightModeliv = GetAddress<glLightModelivDelegate>("glLightModeliv");
glLightf = GetAddress<glLightfDelegate>("glLightf");
glLightfv = GetAddress<glLightfvDelegate>("glLightfv");
glLighti = GetAddress<glLightiDelegate>("glLighti");
glLightiv = GetAddress<glLightivDelegate>("glLightiv");
glLineStipple = GetAddress<glLineStippleDelegate>("glLineStipple");
glLineWidth = GetAddress<glLineWidthDelegate>("glLineWidth");
glLinkProgram = GetAddress<glLinkProgramDelegate>("glLinkProgram");
glListBase = GetAddress<glListBaseDelegate>("glListBase");
glLoadIdentity = GetAddress<glLoadIdentityDelegate>("glLoadIdentity");
glLoadMatrixd = GetAddress<glLoadMatrixdDelegate>("glLoadMatrixd");
glLoadMatrixf = GetAddress<glLoadMatrixfDelegate>("glLoadMatrixf");
glLoadName = GetAddress<glLoadNameDelegate>("glLoadName");
glLoadTransposeMatrixd = GetAddress<glLoadTransposeMatrixdDelegate>("glLoadTransposeMatrixd");
glLoadTransposeMatrixf = GetAddress<glLoadTransposeMatrixfDelegate>("glLoadTransposeMatrixf");
glLogicOp = GetAddress<glLogicOpDelegate>("glLogicOp");
glMap1d = GetAddress<glMap1dDelegate>("glMap1d");
glMap1f = GetAddress<glMap1fDelegate>("glMap1f");
glMap2d = GetAddress<glMap2dDelegate>("glMap2d");
glMap2f = GetAddress<glMap2fDelegate>("glMap2f");
glMapBuffer = GetAddress<glMapBufferDelegate>("glMapBuffer");
glMapBufferRange = GetAddress<glMapBufferRangeDelegate>("glMapBufferRange");
glMapGrid1d = GetAddress<glMapGrid1dDelegate>("glMapGrid1d");
glMapGrid1f = GetAddress<glMapGrid1fDelegate>("glMapGrid1f");
glMapGrid2d = GetAddress<glMapGrid2dDelegate>("glMapGrid2d");
glMapGrid2f = GetAddress<glMapGrid2fDelegate>("glMapGrid2f");
glMapNamedBuffer = GetAddress<glMapNamedBufferDelegate>("glMapNamedBuffer");
glMapNamedBufferRange = GetAddress<glMapNamedBufferRangeDelegate>("glMapNamedBufferRange");
glMaterialf = GetAddress<glMaterialfDelegate>("glMaterialf");
glMaterialfv = GetAddress<glMaterialfvDelegate>("glMaterialfv");
glMateriali = GetAddress<glMaterialiDelegate>("glMateriali");
glMaterialiv = GetAddress<glMaterialivDelegate>("glMaterialiv");
glMatrixMode = GetAddress<glMatrixModeDelegate>("glMatrixMode");
glMemoryBarrier = GetAddress<glMemoryBarrierDelegate>("glMemoryBarrier");
glMemoryBarrierByRegion = GetAddress<glMemoryBarrierByRegionDelegate>("glMemoryBarrierByRegion");
glMinSampleShading = GetAddress<glMinSampleShadingDelegate>("glMinSampleShading");
glMultMatrixd = GetAddress<glMultMatrixdDelegate>("glMultMatrixd");
glMultMatrixf = GetAddress<glMultMatrixfDelegate>("glMultMatrixf");
glMultTransposeMatrixd = GetAddress<glMultTransposeMatrixdDelegate>("glMultTransposeMatrixd");
glMultTransposeMatrixf = GetAddress<glMultTransposeMatrixfDelegate>("glMultTransposeMatrixf");
glMultiDrawArrays = GetAddress<glMultiDrawArraysDelegate>("glMultiDrawArrays");
glMultiDrawArraysIndirect = GetAddress<glMultiDrawArraysIndirectDelegate>("glMultiDrawArraysIndirect");
glMultiDrawArraysIndirectCount = GetAddress<glMultiDrawArraysIndirectCountDelegate>("glMultiDrawArraysIndirectCount");
glMultiDrawElements = GetAddress<glMultiDrawElementsDelegate>("glMultiDrawElements");
glMultiDrawElementsBaseVertex = GetAddress<glMultiDrawElementsBaseVertexDelegate>("glMultiDrawElementsBaseVertex");
glMultiDrawElementsIndirect = GetAddress<glMultiDrawElementsIndirectDelegate>("glMultiDrawElementsIndirect");
glMultiDrawElementsIndirectCount = GetAddress<glMultiDrawElementsIndirectCountDelegate>("glMultiDrawElementsIndirectCount");
glMultiTexCoord1d = GetAddress<glMultiTexCoord1dDelegate>("glMultiTexCoord1d");
glMultiTexCoord1dv = GetAddress<glMultiTexCoord1dvDelegate>("glMultiTexCoord1dv");
glMultiTexCoord1f = GetAddress<glMultiTexCoord1fDelegate>("glMultiTexCoord1f");
glMultiTexCoord1fv = GetAddress<glMultiTexCoord1fvDelegate>("glMultiTexCoord1fv");
glMultiTexCoord1i = GetAddress<glMultiTexCoord1iDelegate>("glMultiTexCoord1i");
glMultiTexCoord1iv = GetAddress<glMultiTexCoord1ivDelegate>("glMultiTexCoord1iv");
glMultiTexCoord1s = GetAddress<glMultiTexCoord1sDelegate>("glMultiTexCoord1s");
glMultiTexCoord1sv = GetAddress<glMultiTexCoord1svDelegate>("glMultiTexCoord1sv");
glMultiTexCoord2d = GetAddress<glMultiTexCoord2dDelegate>("glMultiTexCoord2d");
glMultiTexCoord2dv = GetAddress<glMultiTexCoord2dvDelegate>("glMultiTexCoord2dv");
glMultiTexCoord2f = GetAddress<glMultiTexCoord2fDelegate>("glMultiTexCoord2f");
glMultiTexCoord2fv = GetAddress<glMultiTexCoord2fvDelegate>("glMultiTexCoord2fv");
glMultiTexCoord2i = GetAddress<glMultiTexCoord2iDelegate>("glMultiTexCoord2i");
glMultiTexCoord2iv = GetAddress<glMultiTexCoord2ivDelegate>("glMultiTexCoord2iv");
glMultiTexCoord2s = GetAddress<glMultiTexCoord2sDelegate>("glMultiTexCoord2s");
glMultiTexCoord2sv = GetAddress<glMultiTexCoord2svDelegate>("glMultiTexCoord2sv");
glMultiTexCoord3d = GetAddress<glMultiTexCoord3dDelegate>("glMultiTexCoord3d");
glMultiTexCoord3dv = GetAddress<glMultiTexCoord3dvDelegate>("glMultiTexCoord3dv");
glMultiTexCoord3f = GetAddress<glMultiTexCoord3fDelegate>("glMultiTexCoord3f");
glMultiTexCoord3fv = GetAddress<glMultiTexCoord3fvDelegate>("glMultiTexCoord3fv");
glMultiTexCoord3i = GetAddress<glMultiTexCoord3iDelegate>("glMultiTexCoord3i");
glMultiTexCoord3iv = GetAddress<glMultiTexCoord3ivDelegate>("glMultiTexCoord3iv");
glMultiTexCoord3s = GetAddress<glMultiTexCoord3sDelegate>("glMultiTexCoord3s");
glMultiTexCoord3sv = GetAddress<glMultiTexCoord3svDelegate>("glMultiTexCoord3sv");
glMultiTexCoord4d = GetAddress<glMultiTexCoord4dDelegate>("glMultiTexCoord4d");
glMultiTexCoord4dv = GetAddress<glMultiTexCoord4dvDelegate>("glMultiTexCoord4dv");
glMultiTexCoord4f = GetAddress<glMultiTexCoord4fDelegate>("glMultiTexCoord4f");
glMultiTexCoord4fv = GetAddress<glMultiTexCoord4fvDelegate>("glMultiTexCoord4fv");
glMultiTexCoord4i = GetAddress<glMultiTexCoord4iDelegate>("glMultiTexCoord4i");
glMultiTexCoord4iv = GetAddress<glMultiTexCoord4ivDelegate>("glMultiTexCoord4iv");
glMultiTexCoord4s = GetAddress<glMultiTexCoord4sDelegate>("glMultiTexCoord4s");
glMultiTexCoord4sv = GetAddress<glMultiTexCoord4svDelegate>("glMultiTexCoord4sv");
glMultiTexCoordP1ui = GetAddress<glMultiTexCoordP1uiDelegate>("glMultiTexCoordP1ui");
glMultiTexCoordP1uiv = GetAddress<glMultiTexCoordP1uivDelegate>("glMultiTexCoordP1uiv");
glMultiTexCoordP2ui = GetAddress<glMultiTexCoordP2uiDelegate>("glMultiTexCoordP2ui");
glMultiTexCoordP2uiv = GetAddress<glMultiTexCoordP2uivDelegate>("glMultiTexCoordP2uiv");
glMultiTexCoordP3ui = GetAddress<glMultiTexCoordP3uiDelegate>("glMultiTexCoordP3ui");
glMultiTexCoordP3uiv = GetAddress<glMultiTexCoordP3uivDelegate>("glMultiTexCoordP3uiv");
glMultiTexCoordP4ui = GetAddress<glMultiTexCoordP4uiDelegate>("glMultiTexCoordP4ui");
glMultiTexCoordP4uiv = GetAddress<glMultiTexCoordP4uivDelegate>("glMultiTexCoordP4uiv");
glNamedBufferData = GetAddress<glNamedBufferDataDelegate>("glNamedBufferData");
glNamedBufferStorage = GetAddress<glNamedBufferStorageDelegate>("glNamedBufferStorage");
glNamedBufferSubData = GetAddress<glNamedBufferSubDataDelegate>("glNamedBufferSubData");
glNamedFramebufferDrawBuffer = GetAddress<glNamedFramebufferDrawBufferDelegate>("glNamedFramebufferDrawBuffer");
glNamedFramebufferDrawBuffers = GetAddress<glNamedFramebufferDrawBuffersDelegate>("glNamedFramebufferDrawBuffers");
glNamedFramebufferParameteri = GetAddress<glNamedFramebufferParameteriDelegate>("glNamedFramebufferParameteri");
glNamedFramebufferReadBuffer = GetAddress<glNamedFramebufferReadBufferDelegate>("glNamedFramebufferReadBuffer");
glNamedFramebufferRenderbuffer = GetAddress<glNamedFramebufferRenderbufferDelegate>("glNamedFramebufferRenderbuffer");
glNamedFramebufferTexture = GetAddress<glNamedFramebufferTextureDelegate>("glNamedFramebufferTexture");
glNamedFramebufferTextureLayer = GetAddress<glNamedFramebufferTextureLayerDelegate>("glNamedFramebufferTextureLayer");
glNamedRenderbufferStorage = GetAddress<glNamedRenderbufferStorageDelegate>("glNamedRenderbufferStorage");
glNamedRenderbufferStorageMultisample = GetAddress<glNamedRenderbufferStorageMultisampleDelegate>("glNamedRenderbufferStorageMultisample");
glNewList = GetAddress<glNewListDelegate>("glNewList");
glNormal3b = GetAddress<glNormal3bDelegate>("glNormal3b");
glNormal3bv = GetAddress<glNormal3bvDelegate>("glNormal3bv");
glNormal3d = GetAddress<glNormal3dDelegate>("glNormal3d");
glNormal3dv = GetAddress<glNormal3dvDelegate>("glNormal3dv");
glNormal3f = GetAddress<glNormal3fDelegate>("glNormal3f");
glNormal3fv = GetAddress<glNormal3fvDelegate>("glNormal3fv");
glNormal3i = GetAddress<glNormal3iDelegate>("glNormal3i");
glNormal3iv = GetAddress<glNormal3ivDelegate>("glNormal3iv");
glNormal3s = GetAddress<glNormal3sDelegate>("glNormal3s");
glNormal3sv = GetAddress<glNormal3svDelegate>("glNormal3sv");
glNormalP3ui = GetAddress<glNormalP3uiDelegate>("glNormalP3ui");
glNormalP3uiv = GetAddress<glNormalP3uivDelegate>("glNormalP3uiv");
glNormalPointer = GetAddress<glNormalPointerDelegate>("glNormalPointer");
glObjectLabel = GetAddress<glObjectLabelDelegate>("glObjectLabel");
glObjectPtrLabel = GetAddress<glObjectPtrLabelDelegate>("glObjectPtrLabel");
glOrtho = GetAddress<glOrthoDelegate>("glOrtho");
glPassThrough = GetAddress<glPassThroughDelegate>("glPassThrough");
glPatchParameterfv = GetAddress<glPatchParameterfvDelegate>("glPatchParameterfv");
glPatchParameteri = GetAddress<glPatchParameteriDelegate>("glPatchParameteri");
glPauseTransformFeedback = GetAddress<glPauseTransformFeedbackDelegate>("glPauseTransformFeedback");
glPixelMapfv = GetAddress<glPixelMapfvDelegate>("glPixelMapfv");
glPixelMapuiv = GetAddress<glPixelMapuivDelegate>("glPixelMapuiv");
glPixelMapusv = GetAddress<glPixelMapusvDelegate>("glPixelMapusv");
glPixelStoref = GetAddress<glPixelStorefDelegate>("glPixelStoref");
glPixelStorei = GetAddress<glPixelStoreiDelegate>("glPixelStorei");
glPixelTransferf = GetAddress<glPixelTransferfDelegate>("glPixelTransferf");
glPixelTransferi = GetAddress<glPixelTransferiDelegate>("glPixelTransferi");
glPixelZoom = GetAddress<glPixelZoomDelegate>("glPixelZoom");
glPointParameterf = GetAddress<glPointParameterfDelegate>("glPointParameterf");
glPointParameterfv = GetAddress<glPointParameterfvDelegate>("glPointParameterfv");
glPointParameteri = GetAddress<glPointParameteriDelegate>("glPointParameteri");
glPointParameteriv = GetAddress<glPointParameterivDelegate>("glPointParameteriv");
glPointSize = GetAddress<glPointSizeDelegate>("glPointSize");
glPolygonMode = GetAddress<glPolygonModeDelegate>("glPolygonMode");
glPolygonOffset = GetAddress<glPolygonOffsetDelegate>("glPolygonOffset");
glPolygonOffsetClamp = GetAddress<glPolygonOffsetClampDelegate>("glPolygonOffsetClamp");
glPolygonStipple = GetAddress<glPolygonStippleDelegate>("glPolygonStipple");
glPopAttrib = GetAddress<glPopAttribDelegate>("glPopAttrib");
glPopClientAttrib = GetAddress<glPopClientAttribDelegate>("glPopClientAttrib");
glPopDebugGroup = GetAddress<glPopDebugGroupDelegate>("glPopDebugGroup");
glPopMatrix = GetAddress<glPopMatrixDelegate>("glPopMatrix");
glPopName = GetAddress<glPopNameDelegate>("glPopName");
glPrimitiveRestartIndex = GetAddress<glPrimitiveRestartIndexDelegate>("glPrimitiveRestartIndex");
glPrioritizeTextures = GetAddress<glPrioritizeTexturesDelegate>("glPrioritizeTextures");
glProgramBinary = GetAddress<glProgramBinaryDelegate>("glProgramBinary");
glProgramParameteri = GetAddress<glProgramParameteriDelegate>("glProgramParameteri");
glProgramUniform1d = GetAddress<glProgramUniform1dDelegate>("glProgramUniform1d");
glProgramUniform1dv = GetAddress<glProgramUniform1dvDelegate>("glProgramUniform1dv");
glProgramUniform1f = GetAddress<glProgramUniform1fDelegate>("glProgramUniform1f");
glProgramUniform1fv = GetAddress<glProgramUniform1fvDelegate>("glProgramUniform1fv");
glProgramUniform1i = GetAddress<glProgramUniform1iDelegate>("glProgramUniform1i");
glProgramUniform1iv = GetAddress<glProgramUniform1ivDelegate>("glProgramUniform1iv");
glProgramUniform1ui = GetAddress<glProgramUniform1uiDelegate>("glProgramUniform1ui");
glProgramUniform1uiv = GetAddress<glProgramUniform1uivDelegate>("glProgramUniform1uiv");
glProgramUniform2d = GetAddress<glProgramUniform2dDelegate>("glProgramUniform2d");
glProgramUniform2dv = GetAddress<glProgramUniform2dvDelegate>("glProgramUniform2dv");
glProgramUniform2f = GetAddress<glProgramUniform2fDelegate>("glProgramUniform2f");
glProgramUniform2fv = GetAddress<glProgramUniform2fvDelegate>("glProgramUniform2fv");
glProgramUniform2i = GetAddress<glProgramUniform2iDelegate>("glProgramUniform2i");
glProgramUniform2iv = GetAddress<glProgramUniform2ivDelegate>("glProgramUniform2iv");
glProgramUniform2ui = GetAddress<glProgramUniform2uiDelegate>("glProgramUniform2ui");
glProgramUniform2uiv = GetAddress<glProgramUniform2uivDelegate>("glProgramUniform2uiv");
glProgramUniform3d = GetAddress<glProgramUniform3dDelegate>("glProgramUniform3d");
glProgramUniform3dv = GetAddress<glProgramUniform3dvDelegate>("glProgramUniform3dv");
glProgramUniform3f = GetAddress<glProgramUniform3fDelegate>("glProgramUniform3f");
glProgramUniform3fv = GetAddress<glProgramUniform3fvDelegate>("glProgramUniform3fv");
glProgramUniform3i = GetAddress<glProgramUniform3iDelegate>("glProgramUniform3i");
glProgramUniform3iv = GetAddress<glProgramUniform3ivDelegate>("glProgramUniform3iv");
glProgramUniform3ui = GetAddress<glProgramUniform3uiDelegate>("glProgramUniform3ui");
glProgramUniform3uiv = GetAddress<glProgramUniform3uivDelegate>("glProgramUniform3uiv");
glProgramUniform4d = GetAddress<glProgramUniform4dDelegate>("glProgramUniform4d");
glProgramUniform4dv = GetAddress<glProgramUniform4dvDelegate>("glProgramUniform4dv");
glProgramUniform4f = GetAddress<glProgramUniform4fDelegate>("glProgramUniform4f");
glProgramUniform4fv = GetAddress<glProgramUniform4fvDelegate>("glProgramUniform4fv");
glProgramUniform4i = GetAddress<glProgramUniform4iDelegate>("glProgramUniform4i");
glProgramUniform4iv = GetAddress<glProgramUniform4ivDelegate>("glProgramUniform4iv");
glProgramUniform4ui = GetAddress<glProgramUniform4uiDelegate>("glProgramUniform4ui");
glProgramUniform4uiv = GetAddress<glProgramUniform4uivDelegate>("glProgramUniform4uiv");
glProgramUniformMatrix2dv = GetAddress<glProgramUniformMatrix2dvDelegate>("glProgramUniformMatrix2dv");
glProgramUniformMatrix2fv = GetAddress<glProgramUniformMatrix2fvDelegate>("glProgramUniformMatrix2fv");
glProgramUniformMatrix2x3dv = GetAddress<glProgramUniformMatrix2x3dvDelegate>("glProgramUniformMatrix2x3dv");
glProgramUniformMatrix2x3fv = GetAddress<glProgramUniformMatrix2x3fvDelegate>("glProgramUniformMatrix2x3fv");
glProgramUniformMatrix2x4dv = GetAddress<glProgramUniformMatrix2x4dvDelegate>("glProgramUniformMatrix2x4dv");
glProgramUniformMatrix2x4fv = GetAddress<glProgramUniformMatrix2x4fvDelegate>("glProgramUniformMatrix2x4fv");
glProgramUniformMatrix3dv = GetAddress<glProgramUniformMatrix3dvDelegate>("glProgramUniformMatrix3dv");
glProgramUniformMatrix3fv = GetAddress<glProgramUniformMatrix3fvDelegate>("glProgramUniformMatrix3fv");
glProgramUniformMatrix3x2dv = GetAddress<glProgramUniformMatrix3x2dvDelegate>("glProgramUniformMatrix3x2dv");
glProgramUniformMatrix3x2fv = GetAddress<glProgramUniformMatrix3x2fvDelegate>("glProgramUniformMatrix3x2fv");
glProgramUniformMatrix3x4dv = GetAddress<glProgramUniformMatrix3x4dvDelegate>("glProgramUniformMatrix3x4dv");
glProgramUniformMatrix3x4fv = GetAddress<glProgramUniformMatrix3x4fvDelegate>("glProgramUniformMatrix3x4fv");
glProgramUniformMatrix4dv = GetAddress<glProgramUniformMatrix4dvDelegate>("glProgramUniformMatrix4dv");
glProgramUniformMatrix4fv = GetAddress<glProgramUniformMatrix4fvDelegate>("glProgramUniformMatrix4fv");
glProgramUniformMatrix4x2dv = GetAddress<glProgramUniformMatrix4x2dvDelegate>("glProgramUniformMatrix4x2dv");
glProgramUniformMatrix4x2fv = GetAddress<glProgramUniformMatrix4x2fvDelegate>("glProgramUniformMatrix4x2fv");
glProgramUniformMatrix4x3dv = GetAddress<glProgramUniformMatrix4x3dvDelegate>("glProgramUniformMatrix4x3dv");
glProgramUniformMatrix4x3fv = GetAddress<glProgramUniformMatrix4x3fvDelegate>("glProgramUniformMatrix4x3fv");
glProvokingVertex = GetAddress<glProvokingVertexDelegate>("glProvokingVertex");
glPushAttrib = GetAddress<glPushAttribDelegate>("glPushAttrib");
glPushClientAttrib = GetAddress<glPushClientAttribDelegate>("glPushClientAttrib");
glPushDebugGroup = GetAddress<glPushDebugGroupDelegate>("glPushDebugGroup");
glPushMatrix = GetAddress<glPushMatrixDelegate>("glPushMatrix");
glPushName = GetAddress<glPushNameDelegate>("glPushName");
glQueryCounter = GetAddress<glQueryCounterDelegate>("glQueryCounter");
glRasterPos2d = GetAddress<glRasterPos2dDelegate>("glRasterPos2d");
glRasterPos2dv = GetAddress<glRasterPos2dvDelegate>("glRasterPos2dv");
glRasterPos2f = GetAddress<glRasterPos2fDelegate>("glRasterPos2f");
glRasterPos2fv = GetAddress<glRasterPos2fvDelegate>("glRasterPos2fv");
glRasterPos2i = GetAddress<glRasterPos2iDelegate>("glRasterPos2i");
glRasterPos2iv = GetAddress<glRasterPos2ivDelegate>("glRasterPos2iv");
glRasterPos2s = GetAddress<glRasterPos2sDelegate>("glRasterPos2s");
glRasterPos2sv = GetAddress<glRasterPos2svDelegate>("glRasterPos2sv");
glRasterPos3d = GetAddress<glRasterPos3dDelegate>("glRasterPos3d");
glRasterPos3dv = GetAddress<glRasterPos3dvDelegate>("glRasterPos3dv");
glRasterPos3f = GetAddress<glRasterPos3fDelegate>("glRasterPos3f");
glRasterPos3fv = GetAddress<glRasterPos3fvDelegate>("glRasterPos3fv");
glRasterPos3i = GetAddress<glRasterPos3iDelegate>("glRasterPos3i");
glRasterPos3iv = GetAddress<glRasterPos3ivDelegate>("glRasterPos3iv");
glRasterPos3s = GetAddress<glRasterPos3sDelegate>("glRasterPos3s");
glRasterPos3sv = GetAddress<glRasterPos3svDelegate>("glRasterPos3sv");
glRasterPos4d = GetAddress<glRasterPos4dDelegate>("glRasterPos4d");
glRasterPos4dv = GetAddress<glRasterPos4dvDelegate>("glRasterPos4dv");
glRasterPos4f = GetAddress<glRasterPos4fDelegate>("glRasterPos4f");
glRasterPos4fv = GetAddress<glRasterPos4fvDelegate>("glRasterPos4fv");
glRasterPos4i = GetAddress<glRasterPos4iDelegate>("glRasterPos4i");
glRasterPos4iv = GetAddress<glRasterPos4ivDelegate>("glRasterPos4iv");
glRasterPos4s = GetAddress<glRasterPos4sDelegate>("glRasterPos4s");
glRasterPos4sv = GetAddress<glRasterPos4svDelegate>("glRasterPos4sv");
glReadBuffer = GetAddress<glReadBufferDelegate>("glReadBuffer");
glReadPixels = GetAddress<glReadPixelsDelegate>("glReadPixels");
glReadnPixels = GetAddress<glReadnPixelsDelegate>("glReadnPixels");
glRectd = GetAddress<glRectdDelegate>("glRectd");
glRectdv = GetAddress<glRectdvDelegate>("glRectdv");
glRectf = GetAddress<glRectfDelegate>("glRectf");
glRectfv = GetAddress<glRectfvDelegate>("glRectfv");
glRecti = GetAddress<glRectiDelegate>("glRecti");
glRectiv = GetAddress<glRectivDelegate>("glRectiv");
glRects = GetAddress<glRectsDelegate>("glRects");
glRectsv = GetAddress<glRectsvDelegate>("glRectsv");
glReleaseShaderCompiler = GetAddress<glReleaseShaderCompilerDelegate>("glReleaseShaderCompiler");
glRenderMode = GetAddress<glRenderModeDelegate>("glRenderMode");
glRenderbufferStorage = GetAddress<glRenderbufferStorageDelegate>("glRenderbufferStorage");
glRenderbufferStorageMultisample = GetAddress<glRenderbufferStorageMultisampleDelegate>("glRenderbufferStorageMultisample");
glResumeTransformFeedback = GetAddress<glResumeTransformFeedbackDelegate>("glResumeTransformFeedback");
glRotated = GetAddress<glRotatedDelegate>("glRotated");
glRotatef = GetAddress<glRotatefDelegate>("glRotatef");
glSampleCoverage = GetAddress<glSampleCoverageDelegate>("glSampleCoverage");
glSampleMaski = GetAddress<glSampleMaskiDelegate>("glSampleMaski");
glSamplerParameterIiv = GetAddress<glSamplerParameterIivDelegate>("glSamplerParameterIiv");
glSamplerParameterIuiv = GetAddress<glSamplerParameterIuivDelegate>("glSamplerParameterIuiv");
glSamplerParameterf = GetAddress<glSamplerParameterfDelegate>("glSamplerParameterf");
glSamplerParameterfv = GetAddress<glSamplerParameterfvDelegate>("glSamplerParameterfv");
glSamplerParameteri = GetAddress<glSamplerParameteriDelegate>("glSamplerParameteri");
glSamplerParameteriv = GetAddress<glSamplerParameterivDelegate>("glSamplerParameteriv");
glScaled = GetAddress<glScaledDelegate>("glScaled");
glScalef = GetAddress<glScalefDelegate>("glScalef");
glScissor = GetAddress<glScissorDelegate>("glScissor");
glScissorArrayv = GetAddress<glScissorArrayvDelegate>("glScissorArrayv");
glScissorIndexed = GetAddress<glScissorIndexedDelegate>("glScissorIndexed");
glScissorIndexedv = GetAddress<glScissorIndexedvDelegate>("glScissorIndexedv");
glSecondaryColor3b = GetAddress<glSecondaryColor3bDelegate>("glSecondaryColor3b");
glSecondaryColor3bv = GetAddress<glSecondaryColor3bvDelegate>("glSecondaryColor3bv");
glSecondaryColor3d = GetAddress<glSecondaryColor3dDelegate>("glSecondaryColor3d");
glSecondaryColor3dv = GetAddress<glSecondaryColor3dvDelegate>("glSecondaryColor3dv");
glSecondaryColor3f = GetAddress<glSecondaryColor3fDelegate>("glSecondaryColor3f");
glSecondaryColor3fv = GetAddress<glSecondaryColor3fvDelegate>("glSecondaryColor3fv");
glSecondaryColor3i = GetAddress<glSecondaryColor3iDelegate>("glSecondaryColor3i");
glSecondaryColor3iv = GetAddress<glSecondaryColor3ivDelegate>("glSecondaryColor3iv");
glSecondaryColor3s = GetAddress<glSecondaryColor3sDelegate>("glSecondaryColor3s");
glSecondaryColor3sv = GetAddress<glSecondaryColor3svDelegate>("glSecondaryColor3sv");
glSecondaryColor3ub = GetAddress<glSecondaryColor3ubDelegate>("glSecondaryColor3ub");
glSecondaryColor3ubv = GetAddress<glSecondaryColor3ubvDelegate>("glSecondaryColor3ubv");
glSecondaryColor3ui = GetAddress<glSecondaryColor3uiDelegate>("glSecondaryColor3ui");
glSecondaryColor3uiv = GetAddress<glSecondaryColor3uivDelegate>("glSecondaryColor3uiv");
glSecondaryColor3us = GetAddress<glSecondaryColor3usDelegate>("glSecondaryColor3us");
glSecondaryColor3usv = GetAddress<glSecondaryColor3usvDelegate>("glSecondaryColor3usv");
glSecondaryColorP3ui = GetAddress<glSecondaryColorP3uiDelegate>("glSecondaryColorP3ui");
glSecondaryColorP3uiv = GetAddress<glSecondaryColorP3uivDelegate>("glSecondaryColorP3uiv");
glSecondaryColorPointer = GetAddress<glSecondaryColorPointerDelegate>("glSecondaryColorPointer");
glSelectBuffer = GetAddress<glSelectBufferDelegate>("glSelectBuffer");
glShadeModel = GetAddress<glShadeModelDelegate>("glShadeModel");
glShaderBinary = GetAddress<glShaderBinaryDelegate>("glShaderBinary");
glShaderSource = GetAddress<glShaderSourceDelegate>("glShaderSource");
glShaderStorageBlockBinding = GetAddress<glShaderStorageBlockBindingDelegate>("glShaderStorageBlockBinding");
glSpecializeShader = GetAddress<glSpecializeShaderDelegate>("glSpecializeShader");
glStencilFunc = GetAddress<glStencilFuncDelegate>("glStencilFunc");
glStencilFuncSeparate = GetAddress<glStencilFuncSeparateDelegate>("glStencilFuncSeparate");
glStencilMask = GetAddress<glStencilMaskDelegate>("glStencilMask");
glStencilMaskSeparate = GetAddress<glStencilMaskSeparateDelegate>("glStencilMaskSeparate");
glStencilOp = GetAddress<glStencilOpDelegate>("glStencilOp");
glStencilOpSeparate = GetAddress<glStencilOpSeparateDelegate>("glStencilOpSeparate");
glTexBuffer = GetAddress<glTexBufferDelegate>("glTexBuffer");
glTexBufferRange = GetAddress<glTexBufferRangeDelegate>("glTexBufferRange");
glTexCoord1d = GetAddress<glTexCoord1dDelegate>("glTexCoord1d");
glTexCoord1dv = GetAddress<glTexCoord1dvDelegate>("glTexCoord1dv");
glTexCoord1f = GetAddress<glTexCoord1fDelegate>("glTexCoord1f");
glTexCoord1fv = GetAddress<glTexCoord1fvDelegate>("glTexCoord1fv");
glTexCoord1i = GetAddress<glTexCoord1iDelegate>("glTexCoord1i");
glTexCoord1iv = GetAddress<glTexCoord1ivDelegate>("glTexCoord1iv");
glTexCoord1s = GetAddress<glTexCoord1sDelegate>("glTexCoord1s");
glTexCoord1sv = GetAddress<glTexCoord1svDelegate>("glTexCoord1sv");
glTexCoord2d = GetAddress<glTexCoord2dDelegate>("glTexCoord2d");
glTexCoord2dv = GetAddress<glTexCoord2dvDelegate>("glTexCoord2dv");
glTexCoord2f = GetAddress<glTexCoord2fDelegate>("glTexCoord2f");
glTexCoord2fv = GetAddress<glTexCoord2fvDelegate>("glTexCoord2fv");
glTexCoord2i = GetAddress<glTexCoord2iDelegate>("glTexCoord2i");
glTexCoord2iv = GetAddress<glTexCoord2ivDelegate>("glTexCoord2iv");
glTexCoord2s = GetAddress<glTexCoord2sDelegate>("glTexCoord2s");
glTexCoord2sv = GetAddress<glTexCoord2svDelegate>("glTexCoord2sv");
glTexCoord3d = GetAddress<glTexCoord3dDelegate>("glTexCoord3d");
glTexCoord3dv = GetAddress<glTexCoord3dvDelegate>("glTexCoord3dv");
glTexCoord3f = GetAddress<glTexCoord3fDelegate>("glTexCoord3f");
glTexCoord3fv = GetAddress<glTexCoord3fvDelegate>("glTexCoord3fv");
glTexCoord3i = GetAddress<glTexCoord3iDelegate>("glTexCoord3i");
glTexCoord3iv = GetAddress<glTexCoord3ivDelegate>("glTexCoord3iv");
glTexCoord3s = GetAddress<glTexCoord3sDelegate>("glTexCoord3s");
glTexCoord3sv = GetAddress<glTexCoord3svDelegate>("glTexCoord3sv");
glTexCoord4d = GetAddress<glTexCoord4dDelegate>("glTexCoord4d");
glTexCoord4dv = GetAddress<glTexCoord4dvDelegate>("glTexCoord4dv");
glTexCoord4f = GetAddress<glTexCoord4fDelegate>("glTexCoord4f");
glTexCoord4fv = GetAddress<glTexCoord4fvDelegate>("glTexCoord4fv");
glTexCoord4i = GetAddress<glTexCoord4iDelegate>("glTexCoord4i");
glTexCoord4iv = GetAddress<glTexCoord4ivDelegate>("glTexCoord4iv");
glTexCoord4s = GetAddress<glTexCoord4sDelegate>("glTexCoord4s");
glTexCoord4sv = GetAddress<glTexCoord4svDelegate>("glTexCoord4sv");
glTexCoordP1ui = GetAddress<glTexCoordP1uiDelegate>("glTexCoordP1ui");
glTexCoordP1uiv = GetAddress<glTexCoordP1uivDelegate>("glTexCoordP1uiv");
glTexCoordP2ui = GetAddress<glTexCoordP2uiDelegate>("glTexCoordP2ui");
glTexCoordP2uiv = GetAddress<glTexCoordP2uivDelegate>("glTexCoordP2uiv");
glTexCoordP3ui = GetAddress<glTexCoordP3uiDelegate>("glTexCoordP3ui");
glTexCoordP3uiv = GetAddress<glTexCoordP3uivDelegate>("glTexCoordP3uiv");
glTexCoordP4ui = GetAddress<glTexCoordP4uiDelegate>("glTexCoordP4ui");
glTexCoordP4uiv = GetAddress<glTexCoordP4uivDelegate>("glTexCoordP4uiv");
glTexCoordPointer = GetAddress<glTexCoordPointerDelegate>("glTexCoordPointer");
glTexEnvf = GetAddress<glTexEnvfDelegate>("glTexEnvf");
glTexEnvfv = GetAddress<glTexEnvfvDelegate>("glTexEnvfv");
glTexEnvi = GetAddress<glTexEnviDelegate>("glTexEnvi");
glTexEnviv = GetAddress<glTexEnvivDelegate>("glTexEnviv");
glTexGend = GetAddress<glTexGendDelegate>("glTexGend");
glTexGendv = GetAddress<glTexGendvDelegate>("glTexGendv");
glTexGenf = GetAddress<glTexGenfDelegate>("glTexGenf");
glTexGenfv = GetAddress<glTexGenfvDelegate>("glTexGenfv");
glTexGeni = GetAddress<glTexGeniDelegate>("glTexGeni");
glTexGeniv = GetAddress<glTexGenivDelegate>("glTexGeniv");
glTexImage1D = GetAddress<glTexImage1DDelegate>("glTexImage1D");
glTexImage2D = GetAddress<glTexImage2DDelegate>("glTexImage2D");
glTexImage2DMultisample = GetAddress<glTexImage2DMultisampleDelegate>("glTexImage2DMultisample");
glTexImage3D = GetAddress<glTexImage3DDelegate>("glTexImage3D");
glTexImage3DMultisample = GetAddress<glTexImage3DMultisampleDelegate>("glTexImage3DMultisample");
glTexParameterIiv = GetAddress<glTexParameterIivDelegate>("glTexParameterIiv");
glTexParameterIuiv = GetAddress<glTexParameterIuivDelegate>("glTexParameterIuiv");
glTexParameterf = GetAddress<glTexParameterfDelegate>("glTexParameterf");
glTexParameterfv = GetAddress<glTexParameterfvDelegate>("glTexParameterfv");
glTexParameteri = GetAddress<glTexParameteriDelegate>("glTexParameteri");
glTexParameteriv = GetAddress<glTexParameterivDelegate>("glTexParameteriv");
glTexStorage1D = GetAddress<glTexStorage1DDelegate>("glTexStorage1D");
glTexStorage2D = GetAddress<glTexStorage2DDelegate>("glTexStorage2D");
glTexStorage2DMultisample = GetAddress<glTexStorage2DMultisampleDelegate>("glTexStorage2DMultisample");
glTexStorage3D = GetAddress<glTexStorage3DDelegate>("glTexStorage3D");
glTexStorage3DMultisample = GetAddress<glTexStorage3DMultisampleDelegate>("glTexStorage3DMultisample");
glTexSubImage1D = GetAddress<glTexSubImage1DDelegate>("glTexSubImage1D");
glTexSubImage2D = GetAddress<glTexSubImage2DDelegate>("glTexSubImage2D");
glTexSubImage3D = GetAddress<glTexSubImage3DDelegate>("glTexSubImage3D");
glTextureBarrier = GetAddress<glTextureBarrierDelegate>("glTextureBarrier");
glTextureBuffer = GetAddress<glTextureBufferDelegate>("glTextureBuffer");
glTextureBufferRange = GetAddress<glTextureBufferRangeDelegate>("glTextureBufferRange");
glTextureParameterIiv = GetAddress<glTextureParameterIivDelegate>("glTextureParameterIiv");
glTextureParameterIuiv = GetAddress<glTextureParameterIuivDelegate>("glTextureParameterIuiv");
glTextureParameterf = GetAddress<glTextureParameterfDelegate>("glTextureParameterf");
glTextureParameterfv = GetAddress<glTextureParameterfvDelegate>("glTextureParameterfv");
glTextureParameteri = GetAddress<glTextureParameteriDelegate>("glTextureParameteri");
glTextureParameteriv = GetAddress<glTextureParameterivDelegate>("glTextureParameteriv");
glTextureStorage1D = GetAddress<glTextureStorage1DDelegate>("glTextureStorage1D");
glTextureStorage2D = GetAddress<glTextureStorage2DDelegate>("glTextureStorage2D");
glTextureStorage2DMultisample = GetAddress<glTextureStorage2DMultisampleDelegate>("glTextureStorage2DMultisample");
glTextureStorage3D = GetAddress<glTextureStorage3DDelegate>("glTextureStorage3D");
glTextureStorage3DMultisample = GetAddress<glTextureStorage3DMultisampleDelegate>("glTextureStorage3DMultisample");
glTextureSubImage1D = GetAddress<glTextureSubImage1DDelegate>("glTextureSubImage1D");
glTextureSubImage2D = GetAddress<glTextureSubImage2DDelegate>("glTextureSubImage2D");
glTextureSubImage3D = GetAddress<glTextureSubImage3DDelegate>("glTextureSubImage3D");
glTextureView = GetAddress<glTextureViewDelegate>("glTextureView");
glTransformFeedbackBufferBase = GetAddress<glTransformFeedbackBufferBaseDelegate>("glTransformFeedbackBufferBase");
glTransformFeedbackBufferRange = GetAddress<glTransformFeedbackBufferRangeDelegate>("glTransformFeedbackBufferRange");
glTransformFeedbackVaryings = GetAddress<glTransformFeedbackVaryingsDelegate>("glTransformFeedbackVaryings");
glTranslated = GetAddress<glTranslatedDelegate>("glTranslated");
glTranslatef = GetAddress<glTranslatefDelegate>("glTranslatef");
glUniform1d = GetAddress<glUniform1dDelegate>("glUniform1d");
glUniform1dv = GetAddress<glUniform1dvDelegate>("glUniform1dv");
glUniform1f = GetAddress<glUniform1fDelegate>("glUniform1f");
glUniform1fv = GetAddress<glUniform1fvDelegate>("glUniform1fv");
glUniform1i = GetAddress<glUniform1iDelegate>("glUniform1i");
glUniform1iv = GetAddress<glUniform1ivDelegate>("glUniform1iv");
glUniform1ui = GetAddress<glUniform1uiDelegate>("glUniform1ui");
glUniform1uiv = GetAddress<glUniform1uivDelegate>("glUniform1uiv");
glUniform2d = GetAddress<glUniform2dDelegate>("glUniform2d");
glUniform2dv = GetAddress<glUniform2dvDelegate>("glUniform2dv");
glUniform2f = GetAddress<glUniform2fDelegate>("glUniform2f");
glUniform2fv = GetAddress<glUniform2fvDelegate>("glUniform2fv");
glUniform2i = GetAddress<glUniform2iDelegate>("glUniform2i");
glUniform2iv = GetAddress<glUniform2ivDelegate>("glUniform2iv");
glUniform2ui = GetAddress<glUniform2uiDelegate>("glUniform2ui");
glUniform2uiv = GetAddress<glUniform2uivDelegate>("glUniform2uiv");
glUniform3d = GetAddress<glUniform3dDelegate>("glUniform3d");
glUniform3dv = GetAddress<glUniform3dvDelegate>("glUniform3dv");
glUniform3f = GetAddress<glUniform3fDelegate>("glUniform3f");
glUniform3fv = GetAddress<glUniform3fvDelegate>("glUniform3fv");
glUniform3i = GetAddress<glUniform3iDelegate>("glUniform3i");
glUniform3iv = GetAddress<glUniform3ivDelegate>("glUniform3iv");
glUniform3ui = GetAddress<glUniform3uiDelegate>("glUniform3ui");
glUniform3uiv = GetAddress<glUniform3uivDelegate>("glUniform3uiv");
glUniform4d = GetAddress<glUniform4dDelegate>("glUniform4d");
glUniform4dv = GetAddress<glUniform4dvDelegate>("glUniform4dv");
glUniform4f = GetAddress<glUniform4fDelegate>("glUniform4f");
glUniform4fv = GetAddress<glUniform4fvDelegate>("glUniform4fv");
glUniform4i = GetAddress<glUniform4iDelegate>("glUniform4i");
glUniform4iv = GetAddress<glUniform4ivDelegate>("glUniform4iv");
glUniform4ui = GetAddress<glUniform4uiDelegate>("glUniform4ui");
glUniform4uiv = GetAddress<glUniform4uivDelegate>("glUniform4uiv");
glUniformBlockBinding = GetAddress<glUniformBlockBindingDelegate>("glUniformBlockBinding");
glUniformMatrix2dv = GetAddress<glUniformMatrix2dvDelegate>("glUniformMatrix2dv");
glUniformMatrix2fv = GetAddress<glUniformMatrix2fvDelegate>("glUniformMatrix2fv");
glUniformMatrix2x3dv = GetAddress<glUniformMatrix2x3dvDelegate>("glUniformMatrix2x3dv");
glUniformMatrix2x3fv = GetAddress<glUniformMatrix2x3fvDelegate>("glUniformMatrix2x3fv");
glUniformMatrix2x4dv = GetAddress<glUniformMatrix2x4dvDelegate>("glUniformMatrix2x4dv");
glUniformMatrix2x4fv = GetAddress<glUniformMatrix2x4fvDelegate>("glUniformMatrix2x4fv");
glUniformMatrix3dv = GetAddress<glUniformMatrix3dvDelegate>("glUniformMatrix3dv");
glUniformMatrix3fv = GetAddress<glUniformMatrix3fvDelegate>("glUniformMatrix3fv");
glUniformMatrix3x2dv = GetAddress<glUniformMatrix3x2dvDelegate>("glUniformMatrix3x2dv");
glUniformMatrix3x2fv = GetAddress<glUniformMatrix3x2fvDelegate>("glUniformMatrix3x2fv");
glUniformMatrix3x4dv = GetAddress<glUniformMatrix3x4dvDelegate>("glUniformMatrix3x4dv");
glUniformMatrix3x4fv = GetAddress<glUniformMatrix3x4fvDelegate>("glUniformMatrix3x4fv");
glUniformMatrix4dv = GetAddress<glUniformMatrix4dvDelegate>("glUniformMatrix4dv");
glUniformMatrix4fv = GetAddress<glUniformMatrix4fvDelegate>("glUniformMatrix4fv");
glUniformMatrix4x2dv = GetAddress<glUniformMatrix4x2dvDelegate>("glUniformMatrix4x2dv");
glUniformMatrix4x2fv = GetAddress<glUniformMatrix4x2fvDelegate>("glUniformMatrix4x2fv");
glUniformMatrix4x3dv = GetAddress<glUniformMatrix4x3dvDelegate>("glUniformMatrix4x3dv");
glUniformMatrix4x3fv = GetAddress<glUniformMatrix4x3fvDelegate>("glUniformMatrix4x3fv");
glUniformSubroutinesuiv = GetAddress<glUniformSubroutinesuivDelegate>("glUniformSubroutinesuiv");
glUnmapBuffer = GetAddress<glUnmapBufferDelegate>("glUnmapBuffer");
glUnmapNamedBuffer = GetAddress<glUnmapNamedBufferDelegate>("glUnmapNamedBuffer");
glUseProgram = GetAddress<glUseProgramDelegate>("glUseProgram");
glUseProgramStages = GetAddress<glUseProgramStagesDelegate>("glUseProgramStages");
glValidateProgram = GetAddress<glValidateProgramDelegate>("glValidateProgram");
glValidateProgramPipeline = GetAddress<glValidateProgramPipelineDelegate>("glValidateProgramPipeline");
glVertex2d = GetAddress<glVertex2dDelegate>("glVertex2d");
glVertex2dv = GetAddress<glVertex2dvDelegate>("glVertex2dv");
glVertex2f = GetAddress<glVertex2fDelegate>("glVertex2f");
glVertex2fv = GetAddress<glVertex2fvDelegate>("glVertex2fv");
glVertex2i = GetAddress<glVertex2iDelegate>("glVertex2i");
glVertex2iv = GetAddress<glVertex2ivDelegate>("glVertex2iv");
glVertex2s = GetAddress<glVertex2sDelegate>("glVertex2s");
glVertex2sv = GetAddress<glVertex2svDelegate>("glVertex2sv");
glVertex3d = GetAddress<glVertex3dDelegate>("glVertex3d");
glVertex3dv = GetAddress<glVertex3dvDelegate>("glVertex3dv");
glVertex3f = GetAddress<glVertex3fDelegate>("glVertex3f");
glVertex3fv = GetAddress<glVertex3fvDelegate>("glVertex3fv");
glVertex3i = GetAddress<glVertex3iDelegate>("glVertex3i");
glVertex3iv = GetAddress<glVertex3ivDelegate>("glVertex3iv");
glVertex3s = GetAddress<glVertex3sDelegate>("glVertex3s");
glVertex3sv = GetAddress<glVertex3svDelegate>("glVertex3sv");
glVertex4d = GetAddress<glVertex4dDelegate>("glVertex4d");
glVertex4dv = GetAddress<glVertex4dvDelegate>("glVertex4dv");
glVertex4f = GetAddress<glVertex4fDelegate>("glVertex4f");
glVertex4fv = GetAddress<glVertex4fvDelegate>("glVertex4fv");
glVertex4i = GetAddress<glVertex4iDelegate>("glVertex4i");
glVertex4iv = GetAddress<glVertex4ivDelegate>("glVertex4iv");
glVertex4s = GetAddress<glVertex4sDelegate>("glVertex4s");
glVertex4sv = GetAddress<glVertex4svDelegate>("glVertex4sv");
glVertexArrayAttribBinding = GetAddress<glVertexArrayAttribBindingDelegate>("glVertexArrayAttribBinding");
glVertexArrayAttribFormat = GetAddress<glVertexArrayAttribFormatDelegate>("glVertexArrayAttribFormat");
glVertexArrayAttribIFormat = GetAddress<glVertexArrayAttribIFormatDelegate>("glVertexArrayAttribIFormat");
glVertexArrayAttribLFormat = GetAddress<glVertexArrayAttribLFormatDelegate>("glVertexArrayAttribLFormat");
glVertexArrayBindingDivisor = GetAddress<glVertexArrayBindingDivisorDelegate>("glVertexArrayBindingDivisor");
glVertexArrayElementBuffer = GetAddress<glVertexArrayElementBufferDelegate>("glVertexArrayElementBuffer");
glVertexArrayVertexBuffer = GetAddress<glVertexArrayVertexBufferDelegate>("glVertexArrayVertexBuffer");
glVertexArrayVertexBuffers = GetAddress<glVertexArrayVertexBuffersDelegate>("glVertexArrayVertexBuffers");
glVertexAttrib1d = GetAddress<glVertexAttrib1dDelegate>("glVertexAttrib1d");
glVertexAttrib1dv = GetAddress<glVertexAttrib1dvDelegate>("glVertexAttrib1dv");
glVertexAttrib1f = GetAddress<glVertexAttrib1fDelegate>("glVertexAttrib1f");
glVertexAttrib1fv = GetAddress<glVertexAttrib1fvDelegate>("glVertexAttrib1fv");
glVertexAttrib1s = GetAddress<glVertexAttrib1sDelegate>("glVertexAttrib1s");
glVertexAttrib1sv = GetAddress<glVertexAttrib1svDelegate>("glVertexAttrib1sv");
glVertexAttrib2d = GetAddress<glVertexAttrib2dDelegate>("glVertexAttrib2d");
glVertexAttrib2dv = GetAddress<glVertexAttrib2dvDelegate>("glVertexAttrib2dv");
glVertexAttrib2f = GetAddress<glVertexAttrib2fDelegate>("glVertexAttrib2f");
glVertexAttrib2fv = GetAddress<glVertexAttrib2fvDelegate>("glVertexAttrib2fv");
glVertexAttrib2s = GetAddress<glVertexAttrib2sDelegate>("glVertexAttrib2s");
glVertexAttrib2sv = GetAddress<glVertexAttrib2svDelegate>("glVertexAttrib2sv");
glVertexAttrib3d = GetAddress<glVertexAttrib3dDelegate>("glVertexAttrib3d");
glVertexAttrib3dv = GetAddress<glVertexAttrib3dvDelegate>("glVertexAttrib3dv");
glVertexAttrib3f = GetAddress<glVertexAttrib3fDelegate>("glVertexAttrib3f");
glVertexAttrib3fv = GetAddress<glVertexAttrib3fvDelegate>("glVertexAttrib3fv");
glVertexAttrib3s = GetAddress<glVertexAttrib3sDelegate>("glVertexAttrib3s");
glVertexAttrib3sv = GetAddress<glVertexAttrib3svDelegate>("glVertexAttrib3sv");
glVertexAttrib4Nbv = GetAddress<glVertexAttrib4NbvDelegate>("glVertexAttrib4Nbv");
glVertexAttrib4Niv = GetAddress<glVertexAttrib4NivDelegate>("glVertexAttrib4Niv");
glVertexAttrib4Nsv = GetAddress<glVertexAttrib4NsvDelegate>("glVertexAttrib4Nsv");
glVertexAttrib4Nub = GetAddress<glVertexAttrib4NubDelegate>("glVertexAttrib4Nub");
glVertexAttrib4Nubv = GetAddress<glVertexAttrib4NubvDelegate>("glVertexAttrib4Nubv");
glVertexAttrib4Nuiv = GetAddress<glVertexAttrib4NuivDelegate>("glVertexAttrib4Nuiv");
glVertexAttrib4Nusv = GetAddress<glVertexAttrib4NusvDelegate>("glVertexAttrib4Nusv");
glVertexAttrib4bv = GetAddress<glVertexAttrib4bvDelegate>("glVertexAttrib4bv");
glVertexAttrib4d = GetAddress<glVertexAttrib4dDelegate>("glVertexAttrib4d");
glVertexAttrib4dv = GetAddress<glVertexAttrib4dvDelegate>("glVertexAttrib4dv");
glVertexAttrib4f = GetAddress<glVertexAttrib4fDelegate>("glVertexAttrib4f");
glVertexAttrib4fv = GetAddress<glVertexAttrib4fvDelegate>("glVertexAttrib4fv");
glVertexAttrib4iv = GetAddress<glVertexAttrib4ivDelegate>("glVertexAttrib4iv");
glVertexAttrib4s = GetAddress<glVertexAttrib4sDelegate>("glVertexAttrib4s");
glVertexAttrib4sv = GetAddress<glVertexAttrib4svDelegate>("glVertexAttrib4sv");
glVertexAttrib4ubv = GetAddress<glVertexAttrib4ubvDelegate>("glVertexAttrib4ubv");
glVertexAttrib4uiv = GetAddress<glVertexAttrib4uivDelegate>("glVertexAttrib4uiv");
glVertexAttrib4usv = GetAddress<glVertexAttrib4usvDelegate>("glVertexAttrib4usv");
glVertexAttribBinding = GetAddress<glVertexAttribBindingDelegate>("glVertexAttribBinding");
glVertexAttribDivisor = GetAddress<glVertexAttribDivisorDelegate>("glVertexAttribDivisor");
glVertexAttribFormat = GetAddress<glVertexAttribFormatDelegate>("glVertexAttribFormat");
glVertexAttribI1i = GetAddress<glVertexAttribI1iDelegate>("glVertexAttribI1i");
glVertexAttribI1iv = GetAddress<glVertexAttribI1ivDelegate>("glVertexAttribI1iv");
glVertexAttribI1ui = GetAddress<glVertexAttribI1uiDelegate>("glVertexAttribI1ui");
glVertexAttribI1uiv = GetAddress<glVertexAttribI1uivDelegate>("glVertexAttribI1uiv");
glVertexAttribI2i = GetAddress<glVertexAttribI2iDelegate>("glVertexAttribI2i");
glVertexAttribI2iv = GetAddress<glVertexAttribI2ivDelegate>("glVertexAttribI2iv");
glVertexAttribI2ui = GetAddress<glVertexAttribI2uiDelegate>("glVertexAttribI2ui");
glVertexAttribI2uiv = GetAddress<glVertexAttribI2uivDelegate>("glVertexAttribI2uiv");
glVertexAttribI3i = GetAddress<glVertexAttribI3iDelegate>("glVertexAttribI3i");
glVertexAttribI3iv = GetAddress<glVertexAttribI3ivDelegate>("glVertexAttribI3iv");
glVertexAttribI3ui = GetAddress<glVertexAttribI3uiDelegate>("glVertexAttribI3ui");
glVertexAttribI3uiv = GetAddress<glVertexAttribI3uivDelegate>("glVertexAttribI3uiv");
glVertexAttribI4bv = GetAddress<glVertexAttribI4bvDelegate>("glVertexAttribI4bv");
glVertexAttribI4i = GetAddress<glVertexAttribI4iDelegate>("glVertexAttribI4i");
glVertexAttribI4iv = GetAddress<glVertexAttribI4ivDelegate>("glVertexAttribI4iv");
glVertexAttribI4sv = GetAddress<glVertexAttribI4svDelegate>("glVertexAttribI4sv");
glVertexAttribI4ubv = GetAddress<glVertexAttribI4ubvDelegate>("glVertexAttribI4ubv");
glVertexAttribI4ui = GetAddress<glVertexAttribI4uiDelegate>("glVertexAttribI4ui");
glVertexAttribI4uiv = GetAddress<glVertexAttribI4uivDelegate>("glVertexAttribI4uiv");
glVertexAttribI4usv = GetAddress<glVertexAttribI4usvDelegate>("glVertexAttribI4usv");
glVertexAttribIFormat = GetAddress<glVertexAttribIFormatDelegate>("glVertexAttribIFormat");
glVertexAttribIPointer = GetAddress<glVertexAttribIPointerDelegate>("glVertexAttribIPointer");
glVertexAttribL1d = GetAddress<glVertexAttribL1dDelegate>("glVertexAttribL1d");
glVertexAttribL1dv = GetAddress<glVertexAttribL1dvDelegate>("glVertexAttribL1dv");
glVertexAttribL2d = GetAddress<glVertexAttribL2dDelegate>("glVertexAttribL2d");
glVertexAttribL2dv = GetAddress<glVertexAttribL2dvDelegate>("glVertexAttribL2dv");
glVertexAttribL3d = GetAddress<glVertexAttribL3dDelegate>("glVertexAttribL3d");
glVertexAttribL3dv = GetAddress<glVertexAttribL3dvDelegate>("glVertexAttribL3dv");
glVertexAttribL4d = GetAddress<glVertexAttribL4dDelegate>("glVertexAttribL4d");
glVertexAttribL4dv = GetAddress<glVertexAttribL4dvDelegate>("glVertexAttribL4dv");
glVertexAttribLFormat = GetAddress<glVertexAttribLFormatDelegate>("glVertexAttribLFormat");
glVertexAttribLPointer = GetAddress<glVertexAttribLPointerDelegate>("glVertexAttribLPointer");
glVertexAttribP1ui = GetAddress<glVertexAttribP1uiDelegate>("glVertexAttribP1ui");
glVertexAttribP1uiv = GetAddress<glVertexAttribP1uivDelegate>("glVertexAttribP1uiv");
glVertexAttribP2ui = GetAddress<glVertexAttribP2uiDelegate>("glVertexAttribP2ui");
glVertexAttribP2uiv = GetAddress<glVertexAttribP2uivDelegate>("glVertexAttribP2uiv");
glVertexAttribP3ui = GetAddress<glVertexAttribP3uiDelegate>("glVertexAttribP3ui");
glVertexAttribP3uiv = GetAddress<glVertexAttribP3uivDelegate>("glVertexAttribP3uiv");
glVertexAttribP4ui = GetAddress<glVertexAttribP4uiDelegate>("glVertexAttribP4ui");
glVertexAttribP4uiv = GetAddress<glVertexAttribP4uivDelegate>("glVertexAttribP4uiv");
glVertexAttribPointer = GetAddress<glVertexAttribPointerDelegate>("glVertexAttribPointer");
glVertexBindingDivisor = GetAddress<glVertexBindingDivisorDelegate>("glVertexBindingDivisor");
glVertexP2ui = GetAddress<glVertexP2uiDelegate>("glVertexP2ui");
glVertexP2uiv = GetAddress<glVertexP2uivDelegate>("glVertexP2uiv");
glVertexP3ui = GetAddress<glVertexP3uiDelegate>("glVertexP3ui");
glVertexP3uiv = GetAddress<glVertexP3uivDelegate>("glVertexP3uiv");
glVertexP4ui = GetAddress<glVertexP4uiDelegate>("glVertexP4ui");
glVertexP4uiv = GetAddress<glVertexP4uivDelegate>("glVertexP4uiv");
glVertexPointer = GetAddress<glVertexPointerDelegate>("glVertexPointer");
glViewport = GetAddress<glViewportDelegate>("glViewport");
glViewportArrayv = GetAddress<glViewportArrayvDelegate>("glViewportArrayv");
glViewportIndexedf = GetAddress<glViewportIndexedfDelegate>("glViewportIndexedf");
glViewportIndexedfv = GetAddress<glViewportIndexedfvDelegate>("glViewportIndexedfv");
glWindowPos2d = GetAddress<glWindowPos2dDelegate>("glWindowPos2d");
glWindowPos2dv = GetAddress<glWindowPos2dvDelegate>("glWindowPos2dv");
glWindowPos2f = GetAddress<glWindowPos2fDelegate>("glWindowPos2f");
glWindowPos2fv = GetAddress<glWindowPos2fvDelegate>("glWindowPos2fv");
glWindowPos2i = GetAddress<glWindowPos2iDelegate>("glWindowPos2i");
glWindowPos2iv = GetAddress<glWindowPos2ivDelegate>("glWindowPos2iv");
glWindowPos2s = GetAddress<glWindowPos2sDelegate>("glWindowPos2s");
glWindowPos2sv = GetAddress<glWindowPos2svDelegate>("glWindowPos2sv");
glWindowPos3d = GetAddress<glWindowPos3dDelegate>("glWindowPos3d");
glWindowPos3dv = GetAddress<glWindowPos3dvDelegate>("glWindowPos3dv");
glWindowPos3f = GetAddress<glWindowPos3fDelegate>("glWindowPos3f");
glWindowPos3fv = GetAddress<glWindowPos3fvDelegate>("glWindowPos3fv");
glWindowPos3i = GetAddress<glWindowPos3iDelegate>("glWindowPos3i");
glWindowPos3iv = GetAddress<glWindowPos3ivDelegate>("glWindowPos3iv");
glWindowPos3s = GetAddress<glWindowPos3sDelegate>("glWindowPos3s");
glWindowPos3sv = GetAddress<glWindowPos3svDelegate>("glWindowPos3sv");
}
}
